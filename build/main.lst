ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_SDMMC1_SD_Init:
  25              	.LFB176:
  26              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /**
   3:main.c        ****   ******************************************************************************
   4:main.c        ****   * @file           : main.c
   5:main.c        ****   * @brief          : Main program body
   6:main.c        ****   ******************************************************************************
   7:main.c        ****   * This notice applies to any and all portions of this file
   8:main.c        ****   * that are not between comment pairs USER CODE BEGIN and
   9:main.c        ****   * USER CODE END. Other portions of this file, whether 
  10:main.c        ****   * inserted by the user or by software development tools
  11:main.c        ****   * are owned by their respective copyright owners.
  12:main.c        ****   *
  13:main.c        ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:main.c        ****   * All rights reserved.
  15:main.c        ****   *
  16:main.c        ****   * Redistribution and use in source and binary forms, with or without 
  17:main.c        ****   * modification, are permitted, provided that the following conditions are met:
  18:main.c        ****   *
  19:main.c        ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:main.c        ****   *    this list of conditions and the following disclaimer.
  21:main.c        ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:main.c        ****   *    this list of conditions and the following disclaimer in the documentation
  23:main.c        ****   *    and/or other materials provided with the distribution.
  24:main.c        ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:main.c        ****   *    contributors to this software may be used to endorse or promote products 
  26:main.c        ****   *    derived from this software without specific written permission.
  27:main.c        ****   * 4. This software, including modifications and/or derivative works of this 
  28:main.c        ****   *    software, must execute solely and exclusively on microcontroller or
  29:main.c        ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:main.c        ****   * 5. Redistribution and use of this software other than as permitted under 
  31:main.c        ****   *    this license is void and will automatically terminate your rights under 
  32:main.c        ****   *    this license. 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 2


  33:main.c        ****   *
  34:main.c        ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:main.c        ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:main.c        ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:main.c        ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:main.c        ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:main.c        ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:main.c        ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:main.c        ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:main.c        ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:main.c        ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:main.c        ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:main.c        ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:main.c        ****   *
  47:main.c        ****   ******************************************************************************
  48:main.c        ****   */
  49:main.c        **** 
  50:main.c        **** #include "main.h"
  51:main.c        **** 
  52:main.c        **** int __io_putchar(int ch) {
  53:main.c        ****     uint8_t data = ch;
  54:main.c        **** #if PRINTF_USES_HAL_TX
  55:main.c        ****     HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, (uint8_t*)&data, len, 100);
  56:main.c        **** #else
  57:main.c        ****     while (__HAL_UART_GET_FLAG(&huart1, UART_FLAG_TXE) == RESET) { ; }
  58:main.c        ****     huart1.Instance->TDR = (uint16_t) data;
  59:main.c        **** #endif
  60:main.c        ****     return 0;
  61:main.c        **** }
  62:main.c        **** 
  63:main.c        **** char inkey(void) {
  64:main.c        ****     uint32_t flags = huart1.Instance->ISR;
  65:main.c        **** 
  66:main.c        ****     if ((flags & UART_FLAG_RXNE) || (flags & UART_FLAG_ORE)) {
  67:main.c        ****         __HAL_UART_CLEAR_OREFLAG(&huart1);
  68:main.c        ****         return (huart1.Instance->RDR);
  69:main.c        ****     } else
  70:main.c        ****         return 0;
  71:main.c        **** }
  72:main.c        **** 
  73:main.c        **** static int TS_Initialize_Touchscreen(void) {
  74:main.c        ****     uint8_t status = 0;
  75:main.c        ****     status = BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
  76:main.c        ****     if (status != TS_OK) return -1;
  77:main.c        ****     return 0;
  78:main.c        **** }
  79:main.c        **** 
  80:main.c        **** static void LCD_Initialize_Screen(void) {
  81:main.c        ****     /* LCD Initialization */
  82:main.c        ****     BSP_LCD_Init();
  83:main.c        **** 
  84:main.c        ****     /* LCD Initialization */
  85:main.c        ****     BSP_LCD_LayerDefaultInit(0, (unsigned int) lcd_image_bg);
  86:main.c        ****     //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
  87:main.c        ****     BSP_LCD_LayerDefaultInit(1, (unsigned int) lcd_image_fg);
  88:main.c        **** 
  89:main.c        ****     /* Enable the LCD */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 3


  90:main.c        ****     BSP_LCD_DisplayOn();
  91:main.c        **** 
  92:main.c        ****     /* Select the LCD Background Layer  */
  93:main.c        ****     BSP_LCD_SelectLayer(0);
  94:main.c        **** 
  95:main.c        ****     /* Clear the Background Layer */
  96:main.c        ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
  97:main.c        ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
  98:main.c        **** 
  99:main.c        ****     BSP_LCD_SetColorKeying(1, LCD_COLOR_WHITE);
 100:main.c        **** 
 101:main.c        ****     /* Select the LCD Foreground Layer  */
 102:main.c        ****     BSP_LCD_SelectLayer(1);
 103:main.c        **** 
 104:main.c        ****     /* Clear the Foreground Layer */
 105:main.c        ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 106:main.c        ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 107:main.c        **** 
 108:main.c        ****     /* Configure the transparency for foreground and background :
 109:main.c        ****        Increase the transparency */
 110:main.c        ****     BSP_LCD_SetTransparency(0, 255);
 111:main.c        ****     BSP_LCD_SetTransparency(1, 255);
 112:main.c        **** }
 113:main.c        **** 
 114:main.c        **** /* USER CODE END 0 */
 115:main.c        **** 
 116:main.c        **** /**
 117:main.c        ****   * @brief  The application entry point.
 118:main.c        ****   *
 119:main.c        ****   * @retval None
 120:main.c        ****   */
 121:main.c        **** int main(void) {
 122:main.c        ****     /* USER CODE BEGIN 1 */
 123:main.c        **** 
 124:main.c        ****     /* USER CODE END 1 */
 125:main.c        **** 
 126:main.c        ****     /* MCU Configuration----------------------------------------------------------*/
 127:main.c        **** 
 128:main.c        ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 129:main.c        ****     HAL_Init();
 130:main.c        **** 
 131:main.c        ****     /* USER CODE BEGIN Init */
 132:main.c        **** 
 133:main.c        ****     /* USER CODE END Init */
 134:main.c        **** 
 135:main.c        ****     /* Configure the system clock */
 136:main.c        ****     SystemClock_Config();
 137:main.c        **** 
 138:main.c        ****     /* USER CODE BEGIN SysInit */
 139:main.c        **** 
 140:main.c        ****     /* USER CODE END SysInit */
 141:main.c        **** 
 142:main.c        ****     /* Initialize all configured peripherals */
 143:main.c        ****     MX_GPIO_Init();
 144:main.c        ****     MX_ADC3_Init();
 145:main.c        ****     MX_CRC_Init();
 146:main.c        ****     MX_DCMI_Init();
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 4


 147:main.c        ****     MX_DMA2D_Init();
 148:main.c        ****     MX_FMC_Init();
 149:main.c        ****     MX_I2C1_Init();
 150:main.c        ****     MX_I2C3_Init();
 151:main.c        ****     MX_LTDC_Init();
 152:main.c        ****     MX_QUADSPI_Init();
 153:main.c        ****     MX_RTC_Init();
 154:main.c        ****     MX_SAI2_Init();
 155:main.c        ****     MX_SDMMC1_SD_Init();
 156:main.c        ****     MX_SPDIFRX_Init();
 157:main.c        ****     MX_SPI2_Init();
 158:main.c        ****     MX_TIM1_Init();
 159:main.c        ****     MX_TIM2_Init();
 160:main.c        ****     MX_TIM3_Init();
 161:main.c        ****     MX_TIM5_Init();
 162:main.c        ****     MX_TIM8_Init();
 163:main.c        ****     MX_TIM12_Init();
 164:main.c        ****     MX_USART1_UART_Init();
 165:main.c        ****     MX_USART6_UART_Init();
 166:main.c        ****     MX_TIM7_Init();
 167:main.c        ****     /* USER CODE BEGIN 2 */
 168:main.c        ****     debug_init(&huart1);
 169:main.c        **** 
 170:main.c        ****     xprintf(ANSI_FG_GREEN
 171:main.c        ****             "STM32F746 Discovery Project"
 172:main.c        ****             ANSI_FG_DEFAULT
 173:main.c        ****             "\r\n");
 174:main.c        **** 
 175:main.c        ****     LCD_Initialize_Screen();
 176:main.c        ****     TS_Initialize_Touchscreen();
 177:main.c        **** 
 178:main.c        ****     /* USER CODE END 2 */
 179:main.c        **** 
 180:main.c        ****     /* USER CODE BEGIN RTOS_MUTEX */
 181:main.c        ****     /* add mutexes, ... */
 182:main.c        ****     /* USER CODE END RTOS_MUTEX */
 183:main.c        **** 
 184:main.c        ****     /* USER CODE BEGIN RTOS_SEMAPHORES */
 185:main.c        ****     /* add semaphores, ... */
 186:main.c        ****     /* USER CODE END RTOS_SEMAPHORES */
 187:main.c        **** 
 188:main.c        ****     /* USER CODE BEGIN RTOS_TIMERS */
 189:main.c        ****     /* start timers, add new ones, ... */
 190:main.c        ****     /* USER CODE END RTOS_TIMERS */
 191:main.c        **** 
 192:main.c        ****     /* Create the thread(s) */
 193:main.c        ****     /* definition and creation of defaultTask */
 194:main.c        ****     osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 1, ALL_THREADS_STACK_SIZE / 4);
 195:main.c        ****     osThreadDef(guiTask, StartGuiTask, osPriorityHigh, 1, ALL_THREADS_STACK_SIZE / 2);
 196:main.c        ****     osThreadDef(touchscreenTask, StartTouchscreenTask, osPriorityNormal, 1, ALL_THREADS_STACK_SIZE 
 197:main.c        **** 
 198:main.c        ****     defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 199:main.c        ****     guiTaskHandle = osThreadCreate(osThread(guiTask), NULL);
 200:main.c        ****     touchscreenTaskHandle = osThreadCreate(osThread(touchscreenTask), NULL);
 201:main.c        **** 
 202:main.c        ****     /* USER CODE BEGIN RTOS_THREADS */
 203:main.c        ****     /* add threads, ... */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 5


 204:main.c        ****     /* USER CODE END RTOS_THREADS */
 205:main.c        **** 
 206:main.c        ****     /* USER CODE BEGIN RTOS_QUEUES */
 207:main.c        ****     /* add queues, ... */
 208:main.c        ****     /* USER CODE END RTOS_QUEUES */
 209:main.c        **** 
 210:main.c        **** 
 211:main.c        ****     /* Start scheduler */
 212:main.c        ****     osKernelStart();
 213:main.c        **** 
 214:main.c        ****     /* We should never get here as control is now taken by the scheduler */
 215:main.c        ****     /* Infinite loop */
 216:main.c        ****     while (1) {}
 217:main.c        **** }
 218:main.c        **** 
 219:main.c        **** void StartDefaultTask(void const *argument) {
 220:main.c        ****     /* init code for FATFS */
 221:main.c        ****     MX_FATFS_Init();
 222:main.c        **** 
 223:main.c        ****     /* init code for USB_HOST */
 224:main.c        ****     MX_USB_HOST_Init();
 225:main.c        **** 
 226:main.c        ****     vTaskDelay(1000);
 227:main.c        ****     xprintf("Waiting for USB mass storage.\r\n");
 228:main.c        **** 
 229:main.c        ****     do {
 230:main.c        ****         vTaskDelay(250);
 231:main.c        ****     } while (Appli_state != APPLICATION_READY);
 232:main.c        **** 
 233:main.c        ****     xprintf("Initializing audio codec.\r\n");
 234:main.c        ****     if (BSP_AUDIO_OUT_Init(OUTPUT_DEVICE_HEADPHONE1, 60, AUDIO_FREQUENCY_44K) == 0) {
 235:main.c        ****         xprintf("Audio codec initialized successfully.\r\n");
 236:main.c        ****     } else {
 237:main.c        ****         xprintf("Audio codec initialized with errors.\r\n");
 238:main.c        ****     }
 239:main.c        ****     BSP_AUDIO_OUT_SetAudioFrameSlot(CODEC_AUDIOFRAME_SLOT_02);
 240:main.c        **** 
 241:main.c        ****     //LCD_Initialize_Screen(); // todo: redundant? <---
 242:main.c        ****     AUDIO_L_PerformScan();
 243:main.c        **** 
 244:main.c        ****     /* Infinite loop */
 245:main.c        ****     for (;;) {
 246:main.c        ****         char key = inkey();
 247:main.c        **** 
 248:main.c        ****         switch (key) {
 249:main.c        ****             case 0:
 250:main.c        ****                 break;
 251:main.c        ****             case 'a': {
 252:main.c        ****                 xprintf("Odebrano polecenie a\n");
 253:main.c        ****                 break;
 254:main.c        ****             }
 255:main.c        **** 
 256:main.c        ****             case 'p': {
 257:main.c        ****                 xprintf("play command...\n");
 258:main.c        ****                 if (player_state) {
 259:main.c        ****                     xprintf("already playing\n");
 260:main.c        ****                     break;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 6


 261:main.c        ****                 }
 262:main.c        **** 
 263:main.c        ****                 FRESULT res;
 264:main.c        ****                 res = f_open(&testFile, "1:/testwave.wav", FA_READ);
 265:main.c        ****                 if (res == FR_OK) {
 266:main.c        ****                     xprintf("wave file open OK\n");
 267:main.c        ****                 } else {
 268:main.c        ****                     xprintf("wave file open ERROR, res = %d\n", res);
 269:main.c        ****                 }
 270:main.c        ****                 player_state = 1;
 271:main.c        ****                 BSP_AUDIO_OUT_Play((uint16_t *) &buff[0], AUDIO_OUT_BUFFER_SIZE);
 272:main.c        ****                 fpos = 0;
 273:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 274:main.c        ****                 break;
 275:main.c        ****             }
 276:main.c        ****             default: {
 277:main.c        ****                 xprintf("Nie rozpoznane polecenie: %c = %02X\n", key, key);
 278:main.c        ****                 break;
 279:main.c        ****             }
 280:main.c        ****         }
 281:main.c        **** 
 282:main.c        ****         if (player_state) {
 283:main.c        ****             uint32_t br;
 284:main.c        **** 
 285:main.c        ****             if (buf_offs == BUFFER_OFFSET_HALF) {
 286:main.c        ****                 if (f_read(&testFile,
 287:main.c        ****                            &buff[0],
 288:main.c        ****                            AUDIO_OUT_BUFFER_SIZE / 2,
 289:main.c        ****                            (void *) &br) != FR_OK) {
 290:main.c        ****                     BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 291:main.c        ****                     xprintf("f_read error on half\n");
 292:main.c        ****                 }
 293:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 294:main.c        ****                 fpos += br;
 295:main.c        **** 
 296:main.c        ****             }
 297:main.c        **** 
 298:main.c        ****             if (buf_offs == BUFFER_OFFSET_FULL) {
 299:main.c        ****                 if (f_read(&testFile,
 300:main.c        ****                            &buff[AUDIO_OUT_BUFFER_SIZE / 2],
 301:main.c        ****                            AUDIO_OUT_BUFFER_SIZE / 2,
 302:main.c        ****                            (void *) &br) != FR_OK) {
 303:main.c        ****                     BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 304:main.c        ****                     xprintf("f_read error on full\n");
 305:main.c        ****                 }
 306:main.c        **** 
 307:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 308:main.c        ****                 fpos += br;
 309:main.c        ****             }
 310:main.c        **** 
 311:main.c        ****             if ((br < AUDIO_OUT_BUFFER_SIZE / 2) && fpos) {
 312:main.c        ****                 xprintf("stop at eof\n");
 313:main.c        ****                 BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 314:main.c        ****                 f_close(&testFile);
 315:main.c        ****                 player_state = 0;
 316:main.c        ****                 fpos = 0;
 317:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 7


 318:main.c        ****             }
 319:main.c        ****         }
 320:main.c        ****         vTaskDelay(100);
 321:main.c        ****     }
 322:main.c        **** }
 323:main.c        **** 
 324:main.c        **** void StartTouchscreenTask(void const *argument) {
 325:main.c        ****     for (;;) {
 326:main.c        ****         vTaskDelay(300);
 327:main.c        ****         BSP_TS_GetState(&TS_State);
 328:main.c        ****         if (TS_State.touchDetected > 0) {
 329:main.c        **** 			APP_STATE.IS_TOUCHED = 1;
 330:main.c        ****             GUI_HandleTouch(&TS_State, CON_HandleButtonTouched);
 331:main.c        ****         }
 332:main.c        ****     }
 333:main.c        **** }
 334:main.c        **** 
 335:main.c        **** void StartGuiTask(void const *argument) {
 336:main.c        ****     for (;;) {
 337:main.c        ****         vTaskDelay(50);
 338:main.c        **** 		if (APP_STATE.IS_TOUCHED != -1){
 339:main.c        **** 			APP_STATE.IS_TOUCHED = -1;
 340:main.c        **** 			GUI_DrawAllButtons();
 341:main.c        **** 		}
 342:main.c        **** 		
 343:main.c        ****         if (APP_STATE.SELECTED_OPTION != -1)
 344:main.c        **** 			GUI_HighlightButton(APP_STATE.SELECTED_OPTION);		
 345:main.c        ****  
 346:main.c        ****         if (APP_STATE.SELECTED_SOUND_BUTTON != -1)
 347:main.c        ****             GUI_HighlightButton(APP_STATE.SELECTED_SOUND_BUTTON);
 348:main.c        ****     }
 349:main.c        **** }
 350:main.c        **** 
 351:main.c        **** /**
 352:main.c        ****   * @brief System Clock Configuration
 353:main.c        ****   * @retval None
 354:main.c        ****   */
 355:main.c        **** void SystemClock_Config(void) {
 356:main.c        **** 
 357:main.c        ****     RCC_OscInitTypeDef RCC_OscInitStruct;
 358:main.c        ****     RCC_ClkInitTypeDef RCC_ClkInitStruct;
 359:main.c        ****     RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 360:main.c        **** 
 361:main.c        ****     /**Configure the main internal regulator output voltage 
 362:main.c        ****     */
 363:main.c        ****     __HAL_RCC_PWR_CLK_ENABLE();
 364:main.c        **** 
 365:main.c        ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 366:main.c        **** 
 367:main.c        ****     /**Initializes the CPU, AHB and APB busses clocks 
 368:main.c        ****     */
 369:main.c        ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSE;
 370:main.c        ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 371:main.c        ****     RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 372:main.c        ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 373:main.c        ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 374:main.c        ****     RCC_OscInitStruct.PLL.PLLM = 25;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 8


 375:main.c        ****     RCC_OscInitStruct.PLL.PLLN = 400;
 376:main.c        ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 377:main.c        ****     RCC_OscInitStruct.PLL.PLLQ = 8;
 378:main.c        ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 379:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 380:main.c        ****     }
 381:main.c        **** 
 382:main.c        ****     /**Activate the Over-Drive mode 
 383:main.c        ****     */
 384:main.c        ****     if (HAL_PWREx_EnableOverDrive() != HAL_OK) {
 385:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 386:main.c        ****     }
 387:main.c        **** 
 388:main.c        ****     /**Initializes the CPU, AHB and APB busses clocks 
 389:main.c        ****     */
 390:main.c        ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 391:main.c        ****                                   | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 392:main.c        ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 393:main.c        ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 394:main.c        ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 395:main.c        ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 396:main.c        **** 
 397:main.c        ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK) {
 398:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 399:main.c        ****     }
 400:main.c        **** 
 401:main.c        ****     PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPDIFRX | RCC_PERIPHCLK_LTDC
 402:main.c        ****                                                | RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_USART1
 403:main.c        ****                                                | RCC_PERIPHCLK_USART6 | RCC_PERIPHCLK_SAI2
 404:main.c        ****                                                | RCC_PERIPHCLK_I2C1 | RCC_PERIPHCLK_I2C3
 405:main.c        ****                                                | RCC_PERIPHCLK_SDMMC1 | RCC_PERIPHCLK_CLK48;
 406:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SN = 100;
 407:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 408:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 409:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 410:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 411:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 412:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 413:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
 414:main.c        ****     PeriphClkInitStruct.PLLI2SDivQ = 1;
 415:main.c        ****     PeriphClkInitStruct.PLLSAIDivQ = 1;
 416:main.c        ****     PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 417:main.c        ****     PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 418:main.c        ****     PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 419:main.c        ****     PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 420:main.c        ****     PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 421:main.c        ****     PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 422:main.c        ****     PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 423:main.c        ****     PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 424:main.c        ****     PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 425:main.c        ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK) {
 426:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 427:main.c        ****     }
 428:main.c        **** 
 429:main.c        ****     /**Configure the Systick interrupt time 
 430:main.c        ****     */
 431:main.c        ****     HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 9


 432:main.c        **** 
 433:main.c        ****     /**Configure the Systick 
 434:main.c        ****     */
 435:main.c        ****     HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 436:main.c        **** 
 437:main.c        ****     /* SysTick_IRQn interrupt configuration */
 438:main.c        ****     HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 439:main.c        **** }
 440:main.c        **** 
 441:main.c        **** /* ADC3 init function */
 442:main.c        **** static void MX_ADC3_Init(void) {
 443:main.c        **** 
 444:main.c        ****     ADC_ChannelConfTypeDef sConfig;
 445:main.c        **** 
 446:main.c        ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 447:main.c        ****     */
 448:main.c        ****     hadc3.Instance = ADC3;
 449:main.c        ****     hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 450:main.c        ****     hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 451:main.c        ****     hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 452:main.c        ****     hadc3.Init.ContinuousConvMode = DISABLE;
 453:main.c        ****     hadc3.Init.DiscontinuousConvMode = DISABLE;
 454:main.c        ****     hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 455:main.c        ****     hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 456:main.c        ****     hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 457:main.c        ****     hadc3.Init.NbrOfConversion = 1;
 458:main.c        ****     hadc3.Init.DMAContinuousRequests = DISABLE;
 459:main.c        ****     hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 460:main.c        ****     if (HAL_ADC_Init(&hadc3) != HAL_OK) {
 461:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 462:main.c        ****     }
 463:main.c        **** 
 464:main.c        ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 465:main.c        ****     */
 466:main.c        ****     sConfig.Channel = ADC_CHANNEL_4;
 467:main.c        ****     sConfig.Rank = ADC_REGULAR_RANK_1;
 468:main.c        ****     sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 469:main.c        ****     if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK) {
 470:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 471:main.c        ****     }
 472:main.c        **** 
 473:main.c        **** }
 474:main.c        **** 
 475:main.c        **** /* CRC init function */
 476:main.c        **** static void MX_CRC_Init(void) {
 477:main.c        **** 
 478:main.c        ****     hcrc.Instance = CRC;
 479:main.c        ****     hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 480:main.c        ****     hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 481:main.c        ****     hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 482:main.c        ****     hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 483:main.c        ****     hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 484:main.c        ****     if (HAL_CRC_Init(&hcrc) != HAL_OK) {
 485:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 486:main.c        ****     }
 487:main.c        **** 
 488:main.c        **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 10


 489:main.c        **** 
 490:main.c        **** /* DCMI init function */
 491:main.c        **** static void MX_DCMI_Init(void) {
 492:main.c        **** 
 493:main.c        ****     hdcmi.Instance = DCMI;
 494:main.c        ****     hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 495:main.c        ****     hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 496:main.c        ****     hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 497:main.c        ****     hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 498:main.c        ****     hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 499:main.c        ****     hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 500:main.c        ****     hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 501:main.c        ****     hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 502:main.c        ****     hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 503:main.c        ****     hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 504:main.c        ****     hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 505:main.c        ****     if (HAL_DCMI_Init(&hdcmi) != HAL_OK) {
 506:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 507:main.c        ****     }
 508:main.c        **** 
 509:main.c        **** }
 510:main.c        **** 
 511:main.c        **** /* DMA2D init function */
 512:main.c        **** static void MX_DMA2D_Init(void) {
 513:main.c        **** 
 514:main.c        ****     hdma2d.Instance = DMA2D;
 515:main.c        ****     hdma2d.Init.Mode = DMA2D_M2M;
 516:main.c        ****     hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 517:main.c        ****     hdma2d.Init.OutputOffset = 0;
 518:main.c        ****     hdma2d.LayerCfg[1].InputOffset = 0;
 519:main.c        ****     hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 520:main.c        ****     hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 521:main.c        ****     hdma2d.LayerCfg[1].InputAlpha = 0;
 522:main.c        ****     if (HAL_DMA2D_Init(&hdma2d) != HAL_OK) {
 523:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 524:main.c        ****     }
 525:main.c        **** 
 526:main.c        ****     if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK) {
 527:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 528:main.c        ****     }
 529:main.c        **** 
 530:main.c        **** }
 531:main.c        **** 
 532:main.c        **** /* I2C1 init function */
 533:main.c        **** static void MX_I2C1_Init(void) {
 534:main.c        **** 
 535:main.c        ****     hi2c1.Instance = I2C1;
 536:main.c        ****     hi2c1.Init.Timing = 0x00C0EAFF;
 537:main.c        ****     hi2c1.Init.OwnAddress1 = 0;
 538:main.c        ****     hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 539:main.c        ****     hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 540:main.c        ****     hi2c1.Init.OwnAddress2 = 0;
 541:main.c        ****     hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 542:main.c        ****     hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 543:main.c        ****     hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 544:main.c        ****     if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 545:main.c        ****         _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 11


 546:main.c        ****     }
 547:main.c        **** 
 548:main.c        ****     /**Configure Analogue filter 
 549:main.c        ****     */
 550:main.c        ****     if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK) {
 551:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 552:main.c        ****     }
 553:main.c        **** 
 554:main.c        ****     /**Configure Digital filter 
 555:main.c        ****     */
 556:main.c        ****     if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK) {
 557:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 558:main.c        ****     }
 559:main.c        **** 
 560:main.c        **** }
 561:main.c        **** 
 562:main.c        **** /* I2C3 init function */
 563:main.c        **** static void MX_I2C3_Init(void) {
 564:main.c        **** 
 565:main.c        ****     hi2c3.Instance = I2C3;
 566:main.c        ****     hi2c3.Init.Timing = 0x00C0EAFF;
 567:main.c        ****     hi2c3.Init.OwnAddress1 = 0;
 568:main.c        ****     hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 569:main.c        ****     hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 570:main.c        ****     hi2c3.Init.OwnAddress2 = 0;
 571:main.c        ****     hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 572:main.c        ****     hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 573:main.c        ****     hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 574:main.c        ****     if (HAL_I2C_Init(&hi2c3) != HAL_OK) {
 575:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 576:main.c        ****     }
 577:main.c        **** 
 578:main.c        ****     /**Configure Analogue filter 
 579:main.c        ****     */
 580:main.c        ****     if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK) {
 581:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 582:main.c        ****     }
 583:main.c        **** 
 584:main.c        ****     /**Configure Digital filter 
 585:main.c        ****     */
 586:main.c        ****     if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK) {
 587:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 588:main.c        ****     }
 589:main.c        **** 
 590:main.c        **** }
 591:main.c        **** 
 592:main.c        **** /* LTDC init function */
 593:main.c        **** static void MX_LTDC_Init(void) {
 594:main.c        **** 
 595:main.c        ****     LTDC_LayerCfgTypeDef pLayerCfg;
 596:main.c        **** 
 597:main.c        ****     hltdc.Instance = LTDC;
 598:main.c        ****     hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 599:main.c        ****     hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 600:main.c        ****     hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 601:main.c        ****     hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 602:main.c        ****     hltdc.Init.HorizontalSync = 40;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 12


 603:main.c        ****     hltdc.Init.VerticalSync = 9;
 604:main.c        ****     hltdc.Init.AccumulatedHBP = 53;
 605:main.c        ****     hltdc.Init.AccumulatedVBP = 11;
 606:main.c        ****     hltdc.Init.AccumulatedActiveW = 533;
 607:main.c        ****     hltdc.Init.AccumulatedActiveH = 283;
 608:main.c        ****     hltdc.Init.TotalWidth = 565;
 609:main.c        ****     hltdc.Init.TotalHeigh = 285;
 610:main.c        ****     hltdc.Init.Backcolor.Blue = 0;
 611:main.c        ****     hltdc.Init.Backcolor.Green = 0;
 612:main.c        ****     hltdc.Init.Backcolor.Red = 0;
 613:main.c        ****     if (HAL_LTDC_Init(&hltdc) != HAL_OK) {
 614:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 615:main.c        ****     }
 616:main.c        **** 
 617:main.c        ****     pLayerCfg.WindowX0 = 0;
 618:main.c        ****     pLayerCfg.WindowX1 = 480;
 619:main.c        ****     pLayerCfg.WindowY0 = 0;
 620:main.c        ****     pLayerCfg.WindowY1 = 272;
 621:main.c        ****     pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 622:main.c        ****     pLayerCfg.Alpha = 255;
 623:main.c        ****     pLayerCfg.Alpha0 = 0;
 624:main.c        ****     pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 625:main.c        ****     pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 626:main.c        ****     pLayerCfg.FBStartAdress = 0xC0000000;
 627:main.c        ****     pLayerCfg.ImageWidth = 480;
 628:main.c        ****     pLayerCfg.ImageHeight = 272;
 629:main.c        ****     pLayerCfg.Backcolor.Blue = 0;
 630:main.c        ****     pLayerCfg.Backcolor.Green = 0;
 631:main.c        ****     pLayerCfg.Backcolor.Red = 0;
 632:main.c        ****     if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK) {
 633:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 634:main.c        ****     }
 635:main.c        **** 
 636:main.c        **** }
 637:main.c        **** 
 638:main.c        **** /* QUADSPI init function */
 639:main.c        **** static void MX_QUADSPI_Init(void) {
 640:main.c        **** 
 641:main.c        ****     /* QUADSPI parameter configuration*/
 642:main.c        ****     hqspi.Instance = QUADSPI;
 643:main.c        ****     hqspi.Init.ClockPrescaler = 255;
 644:main.c        ****     hqspi.Init.FifoThreshold = 1;
 645:main.c        ****     hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 646:main.c        ****     hqspi.Init.FlashSize = 1;
 647:main.c        ****     hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 648:main.c        ****     hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 649:main.c        ****     hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 650:main.c        ****     hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 651:main.c        ****     if (HAL_QSPI_Init(&hqspi) != HAL_OK) {
 652:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 653:main.c        ****     }
 654:main.c        **** 
 655:main.c        **** }
 656:main.c        **** 
 657:main.c        **** /* RTC init function */
 658:main.c        **** static void MX_RTC_Init(void) {
 659:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 13


 660:main.c        ****     /* USER CODE BEGIN RTC_Init 0 */
 661:main.c        **** 
 662:main.c        ****     /* USER CODE END RTC_Init 0 */
 663:main.c        **** 
 664:main.c        ****     RTC_TimeTypeDef sTime;
 665:main.c        ****     RTC_DateTypeDef sDate;
 666:main.c        ****     RTC_AlarmTypeDef sAlarm;
 667:main.c        **** 
 668:main.c        ****     /* USER CODE BEGIN RTC_Init 1 */
 669:main.c        **** 
 670:main.c        ****     /* USER CODE END RTC_Init 1 */
 671:main.c        **** 
 672:main.c        ****     /**Initialize RTC Only 
 673:main.c        ****     */
 674:main.c        ****     hrtc.Instance = RTC;
 675:main.c        ****     hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 676:main.c        ****     hrtc.Init.AsynchPrediv = 127;
 677:main.c        ****     hrtc.Init.SynchPrediv = 255;
 678:main.c        ****     hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 679:main.c        ****     hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 680:main.c        ****     hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 681:main.c        ****     if (HAL_RTC_Init(&hrtc) != HAL_OK) {
 682:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 683:main.c        ****     }
 684:main.c        **** 
 685:main.c        ****     /**Initialize RTC and set the Time and Date 
 686:main.c        ****     */
 687:main.c        ****     sTime.Hours = 0x0;
 688:main.c        ****     sTime.Minutes = 0x0;
 689:main.c        ****     sTime.Seconds = 0x0;
 690:main.c        ****     sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 691:main.c        ****     sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 692:main.c        ****     if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK) {
 693:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 694:main.c        ****     }
 695:main.c        **** 
 696:main.c        ****     sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 697:main.c        ****     sDate.Month = RTC_MONTH_JANUARY;
 698:main.c        ****     sDate.Date = 0x1;
 699:main.c        ****     sDate.Year = 0x0;
 700:main.c        **** 
 701:main.c        ****     if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK) {
 702:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 703:main.c        ****     }
 704:main.c        **** 
 705:main.c        ****     /**Enable the Alarm A 
 706:main.c        ****     */
 707:main.c        ****     sAlarm.AlarmTime.Hours = 0x0;
 708:main.c        ****     sAlarm.AlarmTime.Minutes = 0x0;
 709:main.c        ****     sAlarm.AlarmTime.Seconds = 0x0;
 710:main.c        ****     sAlarm.AlarmTime.SubSeconds = 0x0;
 711:main.c        ****     sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 712:main.c        ****     sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 713:main.c        ****     sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 714:main.c        ****     sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 715:main.c        ****     sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 716:main.c        ****     sAlarm.AlarmDateWeekDay = 0x1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 14


 717:main.c        ****     sAlarm.Alarm = RTC_ALARM_A;
 718:main.c        ****     if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
 719:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 720:main.c        ****     }
 721:main.c        **** 
 722:main.c        ****     /**Enable the Alarm B 
 723:main.c        ****     */
 724:main.c        ****     sAlarm.AlarmDateWeekDay = 0x1;
 725:main.c        ****     sAlarm.Alarm = RTC_ALARM_B;
 726:main.c        ****     if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
 727:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 728:main.c        ****     }
 729:main.c        **** 
 730:main.c        ****     /**Enable the TimeStamp 
 731:main.c        ****     */
 732:main.c        ****     if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK) {
 733:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 734:main.c        ****     }
 735:main.c        **** 
 736:main.c        **** }
 737:main.c        **** 
 738:main.c        **** /* SAI2 init function */
 739:main.c        **** static void MX_SAI2_Init(void) {
 740:main.c        **** 
 741:main.c        ****     hsai_BlockA2.Instance = SAI2_Block_A;
 742:main.c        ****     hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 743:main.c        ****     hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 744:main.c        ****     hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 745:main.c        ****     hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 746:main.c        ****     hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 747:main.c        ****     hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 748:main.c        ****     hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 749:main.c        ****     hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 750:main.c        ****     hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 751:main.c        ****     hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 752:main.c        ****     hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 753:main.c        ****     hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 754:main.c        ****     hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 755:main.c        ****     hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 756:main.c        ****     hsai_BlockA2.FrameInit.FrameLength = 8;
 757:main.c        ****     hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 758:main.c        ****     hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 759:main.c        ****     hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 760:main.c        ****     hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 761:main.c        ****     hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 762:main.c        ****     hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 763:main.c        ****     hsai_BlockA2.SlotInit.SlotNumber = 1;
 764:main.c        ****     hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 765:main.c        ****     if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK) {
 766:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 767:main.c        ****     }
 768:main.c        **** 
 769:main.c        ****     hsai_BlockB2.Instance = SAI2_Block_B;
 770:main.c        ****     hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 771:main.c        ****     hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 772:main.c        ****     hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 773:main.c        ****     hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 15


 774:main.c        ****     hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 775:main.c        ****     hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 776:main.c        ****     hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 777:main.c        ****     hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 778:main.c        ****     hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 779:main.c        ****     hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 780:main.c        ****     hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 781:main.c        ****     hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 782:main.c        ****     hsai_BlockB2.FrameInit.FrameLength = 8;
 783:main.c        ****     hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 784:main.c        ****     hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 785:main.c        ****     hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 786:main.c        ****     hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 787:main.c        ****     hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 788:main.c        ****     hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 789:main.c        ****     hsai_BlockB2.SlotInit.SlotNumber = 1;
 790:main.c        ****     hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 791:main.c        ****     if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK) {
 792:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 793:main.c        ****     }
 794:main.c        **** 
 795:main.c        **** }
 796:main.c        **** 
 797:main.c        **** /* SDMMC1 init function */
 798:main.c        **** static void MX_SDMMC1_SD_Init(void) {
  27              		.loc 1 798 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 799:main.c        **** 
 800:main.c        ****     hsd1.Instance = SDMMC1;
  32              		.loc 1 800 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 064A     		ldr	r2, .L2+4
  35 0004 1A60     		str	r2, [r3]
 801:main.c        ****     hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  36              		.loc 1 801 0
  37 0006 0022     		movs	r2, #0
  38 0008 5A60     		str	r2, [r3, #4]
 802:main.c        ****     hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  39              		.loc 1 802 0
  40 000a 9A60     		str	r2, [r3, #8]
 803:main.c        ****     hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 803 0
  42 000c DA60     		str	r2, [r3, #12]
 804:main.c        ****     hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
  43              		.loc 1 804 0
  44 000e 1A61     		str	r2, [r3, #16]
 805:main.c        ****     hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  45              		.loc 1 805 0
  46 0010 5A61     		str	r2, [r3, #20]
 806:main.c        ****     hsd1.Init.ClockDiv = 0;
  47              		.loc 1 806 0
  48 0012 9A61     		str	r2, [r3, #24]
  49 0014 7047     		bx	lr
  50              	.L3:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 16


  51 0016 00BF     		.align	2
  52              	.L2:
  53 0018 00000000 		.word	hsd1
  54 001c 002C0140 		.word	1073818624
  55              		.cfi_endproc
  56              	.LFE176:
  58              		.section	.text.MX_GPIO_Init,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-sp-d16
  65              	MX_GPIO_Init:
  66              	.LFB189:
 807:main.c        **** 
 808:main.c        **** }
 809:main.c        **** 
 810:main.c        **** /* SPDIFRX init function */
 811:main.c        **** static void MX_SPDIFRX_Init(void) {
 812:main.c        **** 
 813:main.c        ****     hspdif.Instance = SPDIFRX;
 814:main.c        ****     hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 815:main.c        ****     hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 816:main.c        ****     hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 817:main.c        ****     hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 818:main.c        ****     hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 819:main.c        ****     hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 820:main.c        ****     hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 821:main.c        ****     hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 822:main.c        ****     hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 823:main.c        ****     hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 824:main.c        ****     if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK) {
 825:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 826:main.c        ****     }
 827:main.c        **** 
 828:main.c        **** }
 829:main.c        **** 
 830:main.c        **** /* SPI2 init function */
 831:main.c        **** static void MX_SPI2_Init(void) {
 832:main.c        **** 
 833:main.c        ****     /* SPI2 parameter configuration*/
 834:main.c        ****     hspi2.Instance = SPI2;
 835:main.c        ****     hspi2.Init.Mode = SPI_MODE_MASTER;
 836:main.c        ****     hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 837:main.c        ****     hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 838:main.c        ****     hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 839:main.c        ****     hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 840:main.c        ****     hspi2.Init.NSS = SPI_NSS_SOFT;
 841:main.c        ****     hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 842:main.c        ****     hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 843:main.c        ****     hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 844:main.c        ****     hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 845:main.c        ****     hspi2.Init.CRCPolynomial = 7;
 846:main.c        ****     hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 847:main.c        ****     hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 848:main.c        ****     if (HAL_SPI_Init(&hspi2) != HAL_OK) {
 849:main.c        ****         _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 17


 850:main.c        ****     }
 851:main.c        **** 
 852:main.c        **** }
 853:main.c        **** 
 854:main.c        **** /* TIM1 init function */
 855:main.c        **** static void MX_TIM1_Init(void) {
 856:main.c        **** 
 857:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
 858:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
 859:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
 860:main.c        ****     TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 861:main.c        **** 
 862:main.c        ****     htim1.Instance = TIM1;
 863:main.c        ****     htim1.Init.Prescaler = 0;
 864:main.c        ****     htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 865:main.c        ****     htim1.Init.Period = 0;
 866:main.c        ****     htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 867:main.c        ****     htim1.Init.RepetitionCounter = 0;
 868:main.c        ****     htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 869:main.c        ****     if (HAL_TIM_Base_Init(&htim1) != HAL_OK) {
 870:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 871:main.c        ****     }
 872:main.c        **** 
 873:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 874:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK) {
 875:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 876:main.c        ****     }
 877:main.c        **** 
 878:main.c        ****     if (HAL_TIM_PWM_Init(&htim1) != HAL_OK) {
 879:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 880:main.c        ****     }
 881:main.c        **** 
 882:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 883:main.c        ****     sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 884:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 885:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK) {
 886:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 887:main.c        ****     }
 888:main.c        **** 
 889:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
 890:main.c        ****     sConfigOC.Pulse = 0;
 891:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 892:main.c        ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 893:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 894:main.c        ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 895:main.c        ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 896:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 897:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 898:main.c        ****     }
 899:main.c        **** 
 900:main.c        ****     sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 901:main.c        ****     sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 902:main.c        ****     sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 903:main.c        ****     sBreakDeadTimeConfig.DeadTime = 0;
 904:main.c        ****     sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 905:main.c        ****     sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 906:main.c        ****     sBreakDeadTimeConfig.BreakFilter = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 18


 907:main.c        ****     sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 908:main.c        ****     sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 909:main.c        ****     sBreakDeadTimeConfig.Break2Filter = 0;
 910:main.c        ****     sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 911:main.c        ****     if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK) {
 912:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 913:main.c        ****     }
 914:main.c        **** 
 915:main.c        ****     HAL_TIM_MspPostInit(&htim1);
 916:main.c        **** 
 917:main.c        **** }
 918:main.c        **** 
 919:main.c        **** /* TIM2 init function */
 920:main.c        **** static void MX_TIM2_Init(void) {
 921:main.c        **** 
 922:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
 923:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
 924:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
 925:main.c        **** 
 926:main.c        ****     htim2.Instance = TIM2;
 927:main.c        ****     htim2.Init.Prescaler = 0;
 928:main.c        ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 929:main.c        ****     htim2.Init.Period = 0;
 930:main.c        ****     htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 931:main.c        ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 932:main.c        ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 933:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 934:main.c        ****     }
 935:main.c        **** 
 936:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 937:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 938:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 939:main.c        ****     }
 940:main.c        **** 
 941:main.c        ****     if (HAL_TIM_PWM_Init(&htim2) != HAL_OK) {
 942:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 943:main.c        ****     }
 944:main.c        **** 
 945:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 946:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 947:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 948:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 949:main.c        ****     }
 950:main.c        **** 
 951:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
 952:main.c        ****     sConfigOC.Pulse = 0;
 953:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 954:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 955:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 956:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 957:main.c        ****     }
 958:main.c        **** 
 959:main.c        ****     HAL_TIM_MspPostInit(&htim2);
 960:main.c        **** 
 961:main.c        **** }
 962:main.c        **** 
 963:main.c        **** /* TIM3 init function */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 19


 964:main.c        **** static void MX_TIM3_Init(void) {
 965:main.c        **** 
 966:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
 967:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
 968:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
 969:main.c        **** 
 970:main.c        ****     htim3.Instance = TIM3;
 971:main.c        ****     htim3.Init.Prescaler = 0;
 972:main.c        ****     htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 973:main.c        ****     htim3.Init.Period = 0;
 974:main.c        ****     htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 975:main.c        ****     htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 976:main.c        ****     if (HAL_TIM_Base_Init(&htim3) != HAL_OK) {
 977:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 978:main.c        ****     }
 979:main.c        **** 
 980:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 981:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK) {
 982:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 983:main.c        ****     }
 984:main.c        **** 
 985:main.c        ****     if (HAL_TIM_PWM_Init(&htim3) != HAL_OK) {
 986:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 987:main.c        ****     }
 988:main.c        **** 
 989:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 990:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 991:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK) {
 992:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 993:main.c        ****     }
 994:main.c        **** 
 995:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
 996:main.c        ****     sConfigOC.Pulse = 0;
 997:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 998:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 999:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
1000:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1001:main.c        ****     }
1002:main.c        **** 
1003:main.c        ****     HAL_TIM_MspPostInit(&htim3);
1004:main.c        **** 
1005:main.c        **** }
1006:main.c        **** 
1007:main.c        **** /* TIM5 init function */
1008:main.c        **** static void MX_TIM5_Init(void) {
1009:main.c        **** 
1010:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
1011:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
1012:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
1013:main.c        **** 
1014:main.c        ****     htim5.Instance = TIM5;
1015:main.c        ****     htim5.Init.Prescaler = 0;
1016:main.c        ****     htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
1017:main.c        ****     htim5.Init.Period = 0;
1018:main.c        ****     htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1019:main.c        ****     htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1020:main.c        ****     if (HAL_TIM_Base_Init(&htim5) != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 20


1021:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1022:main.c        ****     }
1023:main.c        **** 
1024:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1025:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK) {
1026:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1027:main.c        ****     }
1028:main.c        **** 
1029:main.c        ****     if (HAL_TIM_PWM_Init(&htim5) != HAL_OK) {
1030:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1031:main.c        ****     }
1032:main.c        **** 
1033:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1034:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1035:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK) {
1036:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1037:main.c        ****     }
1038:main.c        **** 
1039:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1040:main.c        ****     sConfigOC.Pulse = 0;
1041:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1042:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1043:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK) {
1044:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1045:main.c        ****     }
1046:main.c        **** 
1047:main.c        ****     HAL_TIM_MspPostInit(&htim5);
1048:main.c        **** 
1049:main.c        **** }
1050:main.c        **** 
1051:main.c        **** /* TIM7 init function */
1052:main.c        **** static void MX_TIM7_Init(void) {
1053:main.c        **** 
1054:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
1055:main.c        **** 
1056:main.c        ****     htim7.Instance = TIM7;
1057:main.c        ****     htim7.Init.Prescaler = 0;
1058:main.c        ****     htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
1059:main.c        ****     htim7.Init.Period = 0;
1060:main.c        ****     htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1061:main.c        ****     if (HAL_TIM_Base_Init(&htim7) != HAL_OK) {
1062:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1063:main.c        ****     }
1064:main.c        **** 
1065:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1066:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1067:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK) {
1068:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1069:main.c        ****     }
1070:main.c        **** 
1071:main.c        **** }
1072:main.c        **** 
1073:main.c        **** /* TIM8 init function */
1074:main.c        **** static void MX_TIM8_Init(void) {
1075:main.c        **** 
1076:main.c        ****     TIM_ClockConfigTypeDef sClockSourceConfig;
1077:main.c        ****     TIM_MasterConfigTypeDef sMasterConfig;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 21


1078:main.c        **** 
1079:main.c        ****     htim8.Instance = TIM8;
1080:main.c        ****     htim8.Init.Prescaler = 0;
1081:main.c        ****     htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
1082:main.c        ****     htim8.Init.Period = 0;
1083:main.c        ****     htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1084:main.c        ****     htim8.Init.RepetitionCounter = 0;
1085:main.c        ****     htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1086:main.c        ****     if (HAL_TIM_Base_Init(&htim8) != HAL_OK) {
1087:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1088:main.c        ****     }
1089:main.c        **** 
1090:main.c        ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1091:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK) {
1092:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1093:main.c        ****     }
1094:main.c        **** 
1095:main.c        ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1096:main.c        ****     sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
1097:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1098:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK) {
1099:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1100:main.c        ****     }
1101:main.c        **** 
1102:main.c        **** }
1103:main.c        **** 
1104:main.c        **** /* TIM12 init function */
1105:main.c        **** static void MX_TIM12_Init(void) {
1106:main.c        **** 
1107:main.c        ****     TIM_OC_InitTypeDef sConfigOC;
1108:main.c        **** 
1109:main.c        ****     htim12.Instance = TIM12;
1110:main.c        ****     htim12.Init.Prescaler = 0;
1111:main.c        ****     htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
1112:main.c        ****     htim12.Init.Period = 0;
1113:main.c        ****     htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1114:main.c        ****     htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1115:main.c        ****     if (HAL_TIM_PWM_Init(&htim12) != HAL_OK) {
1116:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1117:main.c        ****     }
1118:main.c        **** 
1119:main.c        ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
1120:main.c        ****     sConfigOC.Pulse = 0;
1121:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1122:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1123:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
1124:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1125:main.c        ****     }
1126:main.c        **** 
1127:main.c        ****     HAL_TIM_MspPostInit(&htim12);
1128:main.c        **** 
1129:main.c        **** }
1130:main.c        **** 
1131:main.c        **** /* USART1 init function */
1132:main.c        **** static void MX_USART1_UART_Init(void) {
1133:main.c        **** 
1134:main.c        ****     huart1.Instance = USART1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 22


1135:main.c        ****     huart1.Init.BaudRate = 115200;
1136:main.c        ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
1137:main.c        ****     huart1.Init.StopBits = UART_STOPBITS_1;
1138:main.c        ****     huart1.Init.Parity = UART_PARITY_NONE;
1139:main.c        ****     huart1.Init.Mode = UART_MODE_TX_RX;
1140:main.c        ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1141:main.c        ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1142:main.c        ****     huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1143:main.c        ****     huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1144:main.c        ****     if (HAL_UART_Init(&huart1) != HAL_OK) {
1145:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1146:main.c        ****     }
1147:main.c        **** 
1148:main.c        **** }
1149:main.c        **** 
1150:main.c        **** /* USART6 init function */
1151:main.c        **** static void MX_USART6_UART_Init(void) {
1152:main.c        **** 
1153:main.c        ****     huart6.Instance = USART6;
1154:main.c        ****     huart6.Init.BaudRate = 115200;
1155:main.c        ****     huart6.Init.WordLength = UART_WORDLENGTH_8B;
1156:main.c        ****     huart6.Init.StopBits = UART_STOPBITS_1;
1157:main.c        ****     huart6.Init.Parity = UART_PARITY_NONE;
1158:main.c        ****     huart6.Init.Mode = UART_MODE_TX_RX;
1159:main.c        ****     huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1160:main.c        ****     huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1161:main.c        ****     huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1162:main.c        ****     huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1163:main.c        ****     if (HAL_UART_Init(&huart6) != HAL_OK) {
1164:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1165:main.c        ****     }
1166:main.c        **** 
1167:main.c        **** }
1168:main.c        **** 
1169:main.c        **** /* FMC initialization function */
1170:main.c        **** static void MX_FMC_Init(void) {
1171:main.c        ****     FMC_SDRAM_TimingTypeDef SdramTiming;
1172:main.c        **** 
1173:main.c        ****     /** Perform the SDRAM1 memory initialization sequence
1174:main.c        ****     */
1175:main.c        ****     hsdram1.Instance = FMC_SDRAM_DEVICE;
1176:main.c        ****     /* hsdram1.Init */
1177:main.c        ****     hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
1178:main.c        ****     hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
1179:main.c        ****     hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
1180:main.c        ****     hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
1181:main.c        ****     hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
1182:main.c        ****     hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
1183:main.c        ****     hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
1184:main.c        ****     hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
1185:main.c        ****     hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
1186:main.c        ****     hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
1187:main.c        ****     /* SdramTiming */
1188:main.c        ****     SdramTiming.LoadToActiveDelay = 2;
1189:main.c        ****     SdramTiming.ExitSelfRefreshDelay = 7;
1190:main.c        ****     SdramTiming.SelfRefreshTime = 4;
1191:main.c        ****     SdramTiming.RowCycleDelay = 7;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 23


1192:main.c        ****     SdramTiming.WriteRecoveryTime = 3;
1193:main.c        ****     SdramTiming.RPDelay = 2;
1194:main.c        ****     SdramTiming.RCDDelay = 2;
1195:main.c        **** 
1196:main.c        ****     if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK) {
1197:main.c        ****         _Error_Handler(__FILE__, __LINE__);
1198:main.c        ****     }
1199:main.c        **** 
1200:main.c        **** }
1201:main.c        **** 
1202:main.c        **** /** Configure pins as 
1203:main.c        ****         * Analog 
1204:main.c        ****         * Input 
1205:main.c        ****         * Output
1206:main.c        ****         * EVENT_OUT
1207:main.c        ****         * EXTI
1208:main.c        ****      PB5   ------> USB_OTG_HS_ULPI_D7
1209:main.c        ****      PH4   ------> USB_OTG_HS_ULPI_NXT
1210:main.c        ****      PB13   ------> USB_OTG_HS_ULPI_D6
1211:main.c        ****      PB12   ------> USB_OTG_HS_ULPI_D5
1212:main.c        ****      PC0   ------> USB_OTG_HS_ULPI_STP
1213:main.c        ****      PC2   ------> USB_OTG_HS_ULPI_DIR
1214:main.c        ****      PA5   ------> USB_OTG_HS_ULPI_CK
1215:main.c        ****      PB10   ------> USB_OTG_HS_ULPI_D3
1216:main.c        ****      PA3   ------> USB_OTG_HS_ULPI_D0
1217:main.c        ****      PB1   ------> USB_OTG_HS_ULPI_D2
1218:main.c        ****      PB0   ------> USB_OTG_HS_ULPI_D1
1219:main.c        ****      PB11   ------> USB_OTG_HS_ULPI_D4
1220:main.c        **** */
1221:main.c        **** static void MX_GPIO_Init(void) {
  67              		.loc 1 1221 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 64
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 36
  74              		.cfi_offset 4, -36
  75              		.cfi_offset 5, -32
  76              		.cfi_offset 6, -28
  77              		.cfi_offset 7, -24
  78              		.cfi_offset 8, -20
  79              		.cfi_offset 9, -16
  80              		.cfi_offset 10, -12
  81              		.cfi_offset 11, -8
  82              		.cfi_offset 14, -4
  83 0004 91B0     		sub	sp, sp, #68
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 104
  86              	.LBB2:
1222:main.c        **** 
1223:main.c        ****     GPIO_InitTypeDef GPIO_InitStruct;
1224:main.c        **** 
1225:main.c        ****     /* GPIO Ports Clock Enable */
1226:main.c        ****     __HAL_RCC_GPIOE_CLK_ENABLE();
  87              		.loc 1 1226 0
  88 0006 9A4B     		ldr	r3, .L6
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 24


  89 0008 1A6B     		ldr	r2, [r3, #48]
  90 000a 42F01002 		orr	r2, r2, #16
  91 000e 1A63     		str	r2, [r3, #48]
  92 0010 1A6B     		ldr	r2, [r3, #48]
  93 0012 02F01002 		and	r2, r2, #16
  94 0016 0092     		str	r2, [sp]
  95 0018 009A     		ldr	r2, [sp]
  96              	.LBE2:
  97              	.LBB3:
1227:main.c        ****     __HAL_RCC_GPIOG_CLK_ENABLE();
  98              		.loc 1 1227 0
  99 001a 1A6B     		ldr	r2, [r3, #48]
 100 001c 42F04002 		orr	r2, r2, #64
 101 0020 1A63     		str	r2, [r3, #48]
 102 0022 1A6B     		ldr	r2, [r3, #48]
 103 0024 02F04002 		and	r2, r2, #64
 104 0028 0192     		str	r2, [sp, #4]
 105 002a 019A     		ldr	r2, [sp, #4]
 106              	.LBE3:
 107              	.LBB4:
1228:main.c        ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 108              		.loc 1 1228 0
 109 002c 1A6B     		ldr	r2, [r3, #48]
 110 002e 42F00202 		orr	r2, r2, #2
 111 0032 1A63     		str	r2, [r3, #48]
 112 0034 1A6B     		ldr	r2, [r3, #48]
 113 0036 02F00202 		and	r2, r2, #2
 114 003a 0292     		str	r2, [sp, #8]
 115 003c 029A     		ldr	r2, [sp, #8]
 116              	.LBE4:
 117              	.LBB5:
1229:main.c        ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 118              		.loc 1 1229 0
 119 003e 1A6B     		ldr	r2, [r3, #48]
 120 0040 42F00802 		orr	r2, r2, #8
 121 0044 1A63     		str	r2, [r3, #48]
 122 0046 1A6B     		ldr	r2, [r3, #48]
 123 0048 02F00802 		and	r2, r2, #8
 124 004c 0392     		str	r2, [sp, #12]
 125 004e 039A     		ldr	r2, [sp, #12]
 126              	.LBE5:
 127              	.LBB6:
1230:main.c        ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 128              		.loc 1 1230 0
 129 0050 1A6B     		ldr	r2, [r3, #48]
 130 0052 42F00402 		orr	r2, r2, #4
 131 0056 1A63     		str	r2, [r3, #48]
 132 0058 1A6B     		ldr	r2, [r3, #48]
 133 005a 02F00402 		and	r2, r2, #4
 134 005e 0492     		str	r2, [sp, #16]
 135 0060 049A     		ldr	r2, [sp, #16]
 136              	.LBE6:
 137              	.LBB7:
1231:main.c        ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 138              		.loc 1 1231 0
 139 0062 1A6B     		ldr	r2, [r3, #48]
 140 0064 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 25


 141 0068 1A63     		str	r2, [r3, #48]
 142 006a 1A6B     		ldr	r2, [r3, #48]
 143 006c 02F00102 		and	r2, r2, #1
 144 0070 0592     		str	r2, [sp, #20]
 145 0072 059A     		ldr	r2, [sp, #20]
 146              	.LBE7:
 147              	.LBB8:
1232:main.c        ****     __HAL_RCC_GPIOJ_CLK_ENABLE();
 148              		.loc 1 1232 0
 149 0074 1A6B     		ldr	r2, [r3, #48]
 150 0076 42F40072 		orr	r2, r2, #512
 151 007a 1A63     		str	r2, [r3, #48]
 152 007c 1A6B     		ldr	r2, [r3, #48]
 153 007e 02F40072 		and	r2, r2, #512
 154 0082 0692     		str	r2, [sp, #24]
 155 0084 069A     		ldr	r2, [sp, #24]
 156              	.LBE8:
 157              	.LBB9:
1233:main.c        ****     __HAL_RCC_GPIOI_CLK_ENABLE();
 158              		.loc 1 1233 0
 159 0086 1A6B     		ldr	r2, [r3, #48]
 160 0088 42F48072 		orr	r2, r2, #256
 161 008c 1A63     		str	r2, [r3, #48]
 162 008e 1A6B     		ldr	r2, [r3, #48]
 163 0090 02F48072 		and	r2, r2, #256
 164 0094 0792     		str	r2, [sp, #28]
 165 0096 079A     		ldr	r2, [sp, #28]
 166              	.LBE9:
 167              	.LBB10:
1234:main.c        ****     __HAL_RCC_GPIOK_CLK_ENABLE();
 168              		.loc 1 1234 0
 169 0098 1A6B     		ldr	r2, [r3, #48]
 170 009a 42F48062 		orr	r2, r2, #1024
 171 009e 1A63     		str	r2, [r3, #48]
 172 00a0 1A6B     		ldr	r2, [r3, #48]
 173 00a2 02F48062 		and	r2, r2, #1024
 174 00a6 0892     		str	r2, [sp, #32]
 175 00a8 089A     		ldr	r2, [sp, #32]
 176              	.LBE10:
 177              	.LBB11:
1235:main.c        ****     __HAL_RCC_GPIOF_CLK_ENABLE();
 178              		.loc 1 1235 0
 179 00aa 1A6B     		ldr	r2, [r3, #48]
 180 00ac 42F02002 		orr	r2, r2, #32
 181 00b0 1A63     		str	r2, [r3, #48]
 182 00b2 1A6B     		ldr	r2, [r3, #48]
 183 00b4 02F02002 		and	r2, r2, #32
 184 00b8 0992     		str	r2, [sp, #36]
 185 00ba 099A     		ldr	r2, [sp, #36]
 186              	.LBE11:
 187              	.LBB12:
1236:main.c        ****     __HAL_RCC_GPIOH_CLK_ENABLE();
 188              		.loc 1 1236 0
 189 00bc 1A6B     		ldr	r2, [r3, #48]
 190 00be 42F08002 		orr	r2, r2, #128
 191 00c2 1A63     		str	r2, [r3, #48]
 192 00c4 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 26


 193 00c6 03F08003 		and	r3, r3, #128
 194 00ca 0A93     		str	r3, [sp, #40]
 195 00cc 0A9B     		ldr	r3, [sp, #40]
 196              	.LBE12:
1237:main.c        **** 
1238:main.c        ****     /*Configure GPIO pin Output Level */
1239:main.c        ****     HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 197              		.loc 1 1239 0
 198 00ce 0122     		movs	r2, #1
 199 00d0 2021     		movs	r1, #32
 200 00d2 6848     		ldr	r0, .L6+4
 201 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL0:
1240:main.c        **** 
1241:main.c        ****     /*Configure GPIO pin Output Level */
1242:main.c        ****     HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin | ARDUINO_D8_Pin, GPIO_PIN_RESET);
 203              		.loc 1 1242 0
 204 00d8 0022     		movs	r2, #0
 205 00da 0C21     		movs	r1, #12
 206 00dc 6648     		ldr	r0, .L6+8
 207 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL1:
1243:main.c        **** 
1244:main.c        ****     /*Configure GPIO pin Output Level */
1245:main.c        ****     HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 209              		.loc 1 1245 0
 210 00e2 0122     		movs	r2, #1
 211 00e4 0821     		movs	r1, #8
 212 00e6 6548     		ldr	r0, .L6+12
 213 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL2:
1246:main.c        **** 
1247:main.c        ****     /*Configure GPIO pin Output Level */
1248:main.c        ****     HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 215              		.loc 1 1248 0
 216 00ec 0122     		movs	r2, #1
 217 00ee 4FF48051 		mov	r1, #4096
 218 00f2 6148     		ldr	r0, .L6+8
 219 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL3:
1249:main.c        **** 
1250:main.c        ****     /*Configure GPIO pin Output Level */
1251:main.c        ****     HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 221              		.loc 1 1251 0
 222 00f8 0022     		movs	r2, #0
 223 00fa 4FF40051 		mov	r1, #8192
 224 00fe 6048     		ldr	r0, .L6+16
 225 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 226              	.LVL4:
1252:main.c        **** 
1253:main.c        ****     /*Configure GPIO pin Output Level */
1254:main.c        ****     HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin | ARDUINO_D2_Pin | EXT_RST_Pin, GPIO_PIN_RESET);
 227              		.loc 1 1254 0
 228 0104 0022     		movs	r2, #0
 229 0106 C821     		movs	r1, #200
 230 0108 5E48     		ldr	r0, .L6+20
 231 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 27


 232              	.LVL5:
1255:main.c        **** 
1256:main.c        ****     /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
1257:main.c        ****     GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 233              		.loc 1 1257 0
 234 010e 4FF0080A 		mov	r10, #8
 235 0112 CDF82CA0 		str	r10, [sp, #44]
1258:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 236              		.loc 1 1258 0
 237 0116 0024     		movs	r4, #0
 238 0118 0C94     		str	r4, [sp, #48]
1259:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 239              		.loc 1 1259 0
 240 011a 0D94     		str	r4, [sp, #52]
1260:main.c        ****     HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 241              		.loc 1 1260 0
 242 011c 0BA9     		add	r1, sp, #44
 243 011e 5A48     		ldr	r0, .L6+24
 244 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL6:
1261:main.c        **** 
1262:main.c        ****     /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin
1263:main.c        ****                              ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
1264:main.c        ****     GPIO_InitStruct.Pin = ULPI_D7_Pin | ULPI_D6_Pin | ULPI_D5_Pin | ULPI_D3_Pin
 246              		.loc 1 1264 0
 247 0124 43F62343 		movw	r3, #15395
 248 0128 0B93     		str	r3, [sp, #44]
1265:main.c        ****                           | ULPI_D2_Pin | ULPI_D1_Pin | ULPI_D4_Pin;
1266:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 249              		.loc 1 1266 0
 250 012a 4FF00208 		mov	r8, #2
 251 012e CDF83080 		str	r8, [sp, #48]
1267:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 1267 0
 253 0132 0D94     		str	r4, [sp, #52]
1268:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 254              		.loc 1 1268 0
 255 0134 0327     		movs	r7, #3
 256 0136 0E97     		str	r7, [sp, #56]
1269:main.c        ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 257              		.loc 1 1269 0
 258 0138 0A26     		movs	r6, #10
 259 013a 0F96     		str	r6, [sp, #60]
1270:main.c        ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 260              		.loc 1 1270 0
 261 013c 0BA9     		add	r1, sp, #44
 262 013e 5348     		ldr	r0, .L6+28
 263 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 264              	.LVL7:
1271:main.c        **** 
1272:main.c        ****     /*Configure GPIO pin : OTG_FS_VBUS_Pin */
1273:main.c        ****     GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 265              		.loc 1 1273 0
 266 0144 4FF48053 		mov	r3, #4096
 267 0148 0B93     		str	r3, [sp, #44]
1274:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 268              		.loc 1 1274 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 28


 269 014a 0C94     		str	r4, [sp, #48]
1275:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 270              		.loc 1 1275 0
 271 014c 0D94     		str	r4, [sp, #52]
1276:main.c        ****     HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 272              		.loc 1 1276 0
 273 014e 0BA9     		add	r1, sp, #44
 274 0150 4F48     		ldr	r0, .L6+32
 275 0152 FFF7FEFF 		bl	HAL_GPIO_Init
 276              	.LVL8:
1277:main.c        **** 
1278:main.c        ****     /*Configure GPIO pin : Audio_INT_Pin */
1279:main.c        ****     GPIO_InitStruct.Pin = Audio_INT_Pin;
 277              		.loc 1 1279 0
 278 0156 4023     		movs	r3, #64
 279 0158 0B93     		str	r3, [sp, #44]
1280:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 280              		.loc 1 1280 0
 281 015a DFF840B1 		ldr	fp, .L6+44
 282 015e CDF830B0 		str	fp, [sp, #48]
1281:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 283              		.loc 1 1281 0
 284 0162 0D94     		str	r4, [sp, #52]
1282:main.c        ****     HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 285              		.loc 1 1282 0
 286 0164 0BA9     		add	r1, sp, #44
 287 0166 4348     		ldr	r0, .L6+4
 288 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 289              	.LVL9:
1283:main.c        **** 
1284:main.c        ****     /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
1285:main.c        ****     GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 290              		.loc 1 1285 0
 291 016c 2023     		movs	r3, #32
 292 016e 0B93     		str	r3, [sp, #44]
1286:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 293              		.loc 1 1286 0
 294 0170 0125     		movs	r5, #1
 295 0172 0C95     		str	r5, [sp, #48]
1287:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 296              		.loc 1 1287 0
 297 0174 0D94     		str	r4, [sp, #52]
1288:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 298              		.loc 1 1288 0
 299 0176 0E94     		str	r4, [sp, #56]
1289:main.c        ****     HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 300              		.loc 1 1289 0
 301 0178 0BA9     		add	r1, sp, #44
 302 017a 3E48     		ldr	r0, .L6+4
 303 017c FFF7FEFF 		bl	HAL_GPIO_Init
 304              	.LVL10:
1290:main.c        **** 
1291:main.c        ****     /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
1292:main.c        ****     GPIO_InitStruct.Pin = ARDUINO_D7_Pin | ARDUINO_D8_Pin | LCD_DISP_Pin;
 305              		.loc 1 1292 0
 306 0180 41F20C03 		movw	r3, #4108
 307 0184 0B93     		str	r3, [sp, #44]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 29


1293:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 308              		.loc 1 1293 0
 309 0186 0C95     		str	r5, [sp, #48]
1294:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 310              		.loc 1 1294 0
 311 0188 0D94     		str	r4, [sp, #52]
1295:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 312              		.loc 1 1295 0
 313 018a 0E94     		str	r4, [sp, #56]
1296:main.c        ****     HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 314              		.loc 1 1296 0
 315 018c 0BA9     		add	r1, sp, #44
 316 018e 3A48     		ldr	r0, .L6+8
 317 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 318              	.LVL11:
1297:main.c        **** 
1298:main.c        ****     /*Configure GPIO pin : uSD_Detect_Pin */
1299:main.c        ****     GPIO_InitStruct.Pin = uSD_Detect_Pin;
 319              		.loc 1 1299 0
 320 0194 4FF40059 		mov	r9, #8192
 321 0198 CDF82C90 		str	r9, [sp, #44]
1300:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 322              		.loc 1 1300 0
 323 019c 0C94     		str	r4, [sp, #48]
1301:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 324              		.loc 1 1301 0
 325 019e 0D94     		str	r4, [sp, #52]
1302:main.c        ****     HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 326              		.loc 1 1302 0
 327 01a0 0BA9     		add	r1, sp, #44
 328 01a2 3C48     		ldr	r0, .L6+36
 329 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 330              	.LVL12:
1303:main.c        **** 
1304:main.c        ****     /*Configure GPIO pin : LCD_BL_CTRL_Pin */
1305:main.c        ****     GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 331              		.loc 1 1305 0
 332 01a8 CDF82CA0 		str	r10, [sp, #44]
1306:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 333              		.loc 1 1306 0
 334 01ac 0C95     		str	r5, [sp, #48]
1307:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 335              		.loc 1 1307 0
 336 01ae 0D94     		str	r4, [sp, #52]
1308:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 337              		.loc 1 1308 0
 338 01b0 0E94     		str	r4, [sp, #56]
1309:main.c        ****     HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 339              		.loc 1 1309 0
 340 01b2 0BA9     		add	r1, sp, #44
 341 01b4 3148     		ldr	r0, .L6+12
 342 01b6 FFF7FEFF 		bl	HAL_GPIO_Init
 343              	.LVL13:
1310:main.c        **** 
1311:main.c        ****     /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
1312:main.c        ****     GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 344              		.loc 1 1312 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 30


 345 01ba 4FF0100A 		mov	r10, #16
 346 01be CDF82CA0 		str	r10, [sp, #44]
1313:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 347              		.loc 1 1313 0
 348 01c2 0C94     		str	r4, [sp, #48]
1314:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 349              		.loc 1 1314 0
 350 01c4 0D94     		str	r4, [sp, #52]
1315:main.c        ****     HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 351              		.loc 1 1315 0
 352 01c6 0BA9     		add	r1, sp, #44
 353 01c8 2A48     		ldr	r0, .L6+4
 354 01ca FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL14:
1316:main.c        **** 
1317:main.c        ****     /*Configure GPIO pins : TP3_Pin NC2_Pin */
1318:main.c        ****     GPIO_InitStruct.Pin = TP3_Pin | NC2_Pin;
 356              		.loc 1 1318 0
 357 01ce 48F20403 		movw	r3, #32772
 358 01d2 0B93     		str	r3, [sp, #44]
1319:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 359              		.loc 1 1319 0
 360 01d4 0C94     		str	r4, [sp, #48]
1320:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 1320 0
 362 01d6 0D94     		str	r4, [sp, #52]
1321:main.c        ****     HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 363              		.loc 1 1321 0
 364 01d8 0BA9     		add	r1, sp, #44
 365 01da 2948     		ldr	r0, .L6+16
 366 01dc FFF7FEFF 		bl	HAL_GPIO_Init
 367              	.LVL15:
1322:main.c        **** 
1323:main.c        ****     /*Configure GPIO pin : DCMI_PWR_EN_Pin */
1324:main.c        ****     GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 368              		.loc 1 1324 0
 369 01e0 CDF82C90 		str	r9, [sp, #44]
1325:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 370              		.loc 1 1325 0
 371 01e4 0C95     		str	r5, [sp, #48]
1326:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 372              		.loc 1 1326 0
 373 01e6 0D94     		str	r4, [sp, #52]
1327:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 374              		.loc 1 1327 0
 375 01e8 0E94     		str	r4, [sp, #56]
1328:main.c        ****     HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 376              		.loc 1 1328 0
 377 01ea 0BA9     		add	r1, sp, #44
 378 01ec 2448     		ldr	r0, .L6+16
 379 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 380              	.LVL16:
1329:main.c        **** 
1330:main.c        ****     /*Configure GPIO pin : LCD_INT_Pin */
1331:main.c        ****     GPIO_InitStruct.Pin = LCD_INT_Pin;
 381              		.loc 1 1331 0
 382 01f2 CDF82C90 		str	r9, [sp, #44]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 31


1332:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 383              		.loc 1 1332 0
 384 01f6 CDF830B0 		str	fp, [sp, #48]
1333:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 385              		.loc 1 1333 0
 386 01fa 0D94     		str	r4, [sp, #52]
1334:main.c        ****     HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 387              		.loc 1 1334 0
 388 01fc 0BA9     		add	r1, sp, #44
 389 01fe 1E48     		ldr	r0, .L6+8
 390 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 391              	.LVL17:
1335:main.c        **** 
1336:main.c        ****     /*Configure GPIO pin : ULPI_NXT_Pin */
1337:main.c        ****     GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 392              		.loc 1 1337 0
 393 0204 CDF82CA0 		str	r10, [sp, #44]
1338:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 394              		.loc 1 1338 0
 395 0208 CDF83080 		str	r8, [sp, #48]
1339:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 396              		.loc 1 1339 0
 397 020c 0D94     		str	r4, [sp, #52]
1340:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 398              		.loc 1 1340 0
 399 020e 0E97     		str	r7, [sp, #56]
1341:main.c        ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 400              		.loc 1 1341 0
 401 0210 0F96     		str	r6, [sp, #60]
1342:main.c        ****     HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 402              		.loc 1 1342 0
 403 0212 0BA9     		add	r1, sp, #44
 404 0214 1A48     		ldr	r0, .L6+16
 405 0216 FFF7FEFF 		bl	HAL_GPIO_Init
 406              	.LVL18:
1343:main.c        **** 
1344:main.c        ****     /*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
1345:main.c        ****     GPIO_InitStruct.Pin = ARDUINO_D4_Pin | ARDUINO_D2_Pin | EXT_RST_Pin;
 407              		.loc 1 1345 0
 408 021a C823     		movs	r3, #200
 409 021c 0B93     		str	r3, [sp, #44]
1346:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 410              		.loc 1 1346 0
 411 021e 0C95     		str	r5, [sp, #48]
1347:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 412              		.loc 1 1347 0
 413 0220 0D94     		str	r4, [sp, #52]
1348:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 414              		.loc 1 1348 0
 415 0222 0E94     		str	r4, [sp, #56]
1349:main.c        ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 416              		.loc 1 1349 0
 417 0224 0BA9     		add	r1, sp, #44
 418 0226 1748     		ldr	r0, .L6+20
 419 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 420              	.LVL19:
1350:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 32


1351:main.c        ****     /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
1352:main.c        ****     GPIO_InitStruct.Pin = ULPI_STP_Pin | ULPI_DIR_Pin;
 421              		.loc 1 1352 0
 422 022c 0523     		movs	r3, #5
 423 022e 0B93     		str	r3, [sp, #44]
1353:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 424              		.loc 1 1353 0
 425 0230 CDF83080 		str	r8, [sp, #48]
1354:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 426              		.loc 1 1354 0
 427 0234 0D94     		str	r4, [sp, #52]
1355:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 428              		.loc 1 1355 0
 429 0236 0E97     		str	r7, [sp, #56]
1356:main.c        ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 430              		.loc 1 1356 0
 431 0238 0F96     		str	r6, [sp, #60]
1357:main.c        ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 432              		.loc 1 1357 0
 433 023a 0BA9     		add	r1, sp, #44
 434 023c 1548     		ldr	r0, .L6+36
 435 023e FFF7FEFF 		bl	HAL_GPIO_Init
 436              	.LVL20:
1358:main.c        **** 
1359:main.c        ****     /*Configure GPIO pin : RMII_RXER_Pin */
1360:main.c        ****     GPIO_InitStruct.Pin = RMII_RXER_Pin;
 437              		.loc 1 1360 0
 438 0242 0423     		movs	r3, #4
 439 0244 0B93     		str	r3, [sp, #44]
1361:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 440              		.loc 1 1361 0
 441 0246 0C94     		str	r4, [sp, #48]
1362:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 442              		.loc 1 1362 0
 443 0248 0D94     		str	r4, [sp, #52]
1363:main.c        ****     HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 444              		.loc 1 1363 0
 445 024a 0BA9     		add	r1, sp, #44
 446 024c 0D48     		ldr	r0, .L6+20
 447 024e FFF7FEFF 		bl	HAL_GPIO_Init
 448              	.LVL21:
1364:main.c        **** 
1365:main.c        ****     /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
1366:main.c        ****     GPIO_InitStruct.Pin = ULPI_CLK_Pin | ULPI_D0_Pin;
 449              		.loc 1 1366 0
 450 0252 2823     		movs	r3, #40
 451 0254 0B93     		str	r3, [sp, #44]
1367:main.c        ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 452              		.loc 1 1367 0
 453 0256 CDF83080 		str	r8, [sp, #48]
1368:main.c        ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 454              		.loc 1 1368 0
 455 025a 0D94     		str	r4, [sp, #52]
1369:main.c        ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 456              		.loc 1 1369 0
 457 025c 0E97     		str	r7, [sp, #56]
1370:main.c        ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 33


 458              		.loc 1 1370 0
 459 025e 0F96     		str	r6, [sp, #60]
1371:main.c        ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 460              		.loc 1 1371 0
 461 0260 0BA9     		add	r1, sp, #44
 462 0262 0D48     		ldr	r0, .L6+40
 463 0264 FFF7FEFF 		bl	HAL_GPIO_Init
 464              	.LVL22:
1372:main.c        **** 
1373:main.c        **** }
 465              		.loc 1 1373 0
 466 0268 11B0     		add	sp, sp, #68
 467              	.LCFI2:
 468              		.cfi_def_cfa_offset 36
 469              		@ sp needed
 470 026a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 471              	.L7:
 472 026e 00BF     		.align	2
 473              	.L6:
 474 0270 00380240 		.word	1073887232
 475 0274 000C0240 		.word	1073875968
 476 0278 00200240 		.word	1073881088
 477 027c 00280240 		.word	1073883136
 478 0280 001C0240 		.word	1073880064
 479 0284 00180240 		.word	1073879040
 480 0288 00100240 		.word	1073876992
 481 028c 00040240 		.word	1073873920
 482 0290 00240240 		.word	1073882112
 483 0294 00080240 		.word	1073874944
 484 0298 00000240 		.word	1073872896
 485 029c 00001210 		.word	269615104
 486              		.cfi_endproc
 487              	.LFE189:
 489              		.section	.text.LCD_Initialize_Screen,"ax",%progbits
 490              		.align	1
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv5-sp-d16
 496              	LCD_Initialize_Screen:
 497              	.LFB160:
  80:main.c        ****     /* LCD Initialization */
 498              		.loc 1 80 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 08B5     		push	{r3, lr}
 503              	.LCFI3:
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 3, -8
 506              		.cfi_offset 14, -4
  82:main.c        **** 
 507              		.loc 1 82 0
 508 0002 FFF7FEFF 		bl	BSP_LCD_Init
 509              	.LVL23:
  85:main.c        ****     //BSP_LCD_LayerDefaultInit(1, (unsigned int)lcd_image_bg+(LCD_X_SIZE*LCD_Y_SIZE*4));
 510              		.loc 1 85 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 34


 511 0006 1749     		ldr	r1, .L10
 512 0008 0020     		movs	r0, #0
 513 000a FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 514              	.LVL24:
  87:main.c        **** 
 515              		.loc 1 87 0
 516 000e 1649     		ldr	r1, .L10+4
 517 0010 0120     		movs	r0, #1
 518 0012 FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 519              	.LVL25:
  90:main.c        **** 
 520              		.loc 1 90 0
 521 0016 FFF7FEFF 		bl	BSP_LCD_DisplayOn
 522              	.LVL26:
  93:main.c        **** 
 523              		.loc 1 93 0
 524 001a 0020     		movs	r0, #0
 525 001c FFF7FEFF 		bl	BSP_LCD_SelectLayer
 526              	.LVL27:
  96:main.c        ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 527              		.loc 1 96 0
 528 0020 4FF0FF30 		mov	r0, #-1
 529 0024 FFF7FEFF 		bl	BSP_LCD_Clear
 530              	.LVL28:
  97:main.c        **** 
 531              		.loc 1 97 0
 532 0028 4FF0FF30 		mov	r0, #-1
 533 002c FFF7FEFF 		bl	BSP_LCD_SetBackColor
 534              	.LVL29:
  99:main.c        **** 
 535              		.loc 1 99 0
 536 0030 4FF0FF31 		mov	r1, #-1
 537 0034 0120     		movs	r0, #1
 538 0036 FFF7FEFF 		bl	BSP_LCD_SetColorKeying
 539              	.LVL30:
 102:main.c        **** 
 540              		.loc 1 102 0
 541 003a 0120     		movs	r0, #1
 542 003c FFF7FEFF 		bl	BSP_LCD_SelectLayer
 543              	.LVL31:
 105:main.c        ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 544              		.loc 1 105 0
 545 0040 4FF0FF30 		mov	r0, #-1
 546 0044 FFF7FEFF 		bl	BSP_LCD_Clear
 547              	.LVL32:
 106:main.c        **** 
 548              		.loc 1 106 0
 549 0048 4FF0FF30 		mov	r0, #-1
 550 004c FFF7FEFF 		bl	BSP_LCD_SetBackColor
 551              	.LVL33:
 110:main.c        ****     BSP_LCD_SetTransparency(1, 255);
 552              		.loc 1 110 0
 553 0050 FF21     		movs	r1, #255
 554 0052 0020     		movs	r0, #0
 555 0054 FFF7FEFF 		bl	BSP_LCD_SetTransparency
 556              	.LVL34:
 111:main.c        **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 35


 557              		.loc 1 111 0
 558 0058 FF21     		movs	r1, #255
 559 005a 0120     		movs	r0, #1
 560 005c FFF7FEFF 		bl	BSP_LCD_SetTransparency
 561              	.LVL35:
 562 0060 08BD     		pop	{r3, pc}
 563              	.L11:
 564 0062 00BF     		.align	2
 565              	.L10:
 566 0064 00000000 		.word	.LANCHOR0
 567 0068 00F80700 		.word	.LANCHOR1+960
 568              		.cfi_endproc
 569              	.LFE160:
 571              		.section	.text.TS_Initialize_Touchscreen,"ax",%progbits
 572              		.align	1
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv5-sp-d16
 578              	TS_Initialize_Touchscreen:
 579              	.LFB159:
  73:main.c        ****     uint8_t status = 0;
 580              		.loc 1 73 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584 0000 10B5     		push	{r4, lr}
 585              	.LCFI4:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 4, -8
 588              		.cfi_offset 14, -4
 589              	.LVL36:
  75:main.c        ****     if (status != TS_OK) return -1;
 590              		.loc 1 75 0
 591 0002 FFF7FEFF 		bl	BSP_LCD_GetXSize
 592              	.LVL37:
 593 0006 84B2     		uxth	r4, r0
 594 0008 FFF7FEFF 		bl	BSP_LCD_GetYSize
 595              	.LVL38:
 596 000c 81B2     		uxth	r1, r0
 597 000e 2046     		mov	r0, r4
 598 0010 FFF7FEFF 		bl	BSP_TS_Init
 599              	.LVL39:
  76:main.c        ****     return 0;
 600              		.loc 1 76 0
 601 0014 08B9     		cbnz	r0, .L16
  77:main.c        **** }
 602              		.loc 1 77 0
 603 0016 0020     		movs	r0, #0
 604              	.LVL40:
  78:main.c        **** 
 605              		.loc 1 78 0
 606 0018 10BD     		pop	{r4, pc}
 607              	.LVL41:
 608              	.L16:
  76:main.c        ****     return 0;
 609              		.loc 1 76 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 36


 610 001a 4FF0FF30 		mov	r0, #-1
 611              	.LVL42:
 612 001e 10BD     		pop	{r4, pc}
 613              		.cfi_endproc
 614              	.LFE159:
 616              		.section	.text.StartTouchscreenTask,"ax",%progbits
 617              		.align	1
 618              		.global	StartTouchscreenTask
 619              		.syntax unified
 620              		.thumb
 621              		.thumb_func
 622              		.fpu fpv5-sp-d16
 624              	StartTouchscreenTask:
 625              	.LFB163:
 324:main.c        ****     for (;;) {
 626              		.loc 1 324 0
 627              		.cfi_startproc
 628              		@ Volatile: function does not return.
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              	.LVL43:
 632 0000 08B5     		push	{r3, lr}
 633              	.LCFI5:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 3, -8
 636              		.cfi_offset 14, -4
 637              	.LVL44:
 638              	.L18:
 326:main.c        ****         BSP_TS_GetState(&TS_State);
 639              		.loc 1 326 0
 640 0002 4FF49670 		mov	r0, #300
 641 0006 FFF7FEFF 		bl	vTaskDelay
 642              	.LVL45:
 327:main.c        ****         if (TS_State.touchDetected > 0) {
 643              		.loc 1 327 0
 644 000a 074C     		ldr	r4, .L21
 645 000c 2046     		mov	r0, r4
 646 000e FFF7FEFF 		bl	BSP_TS_GetState
 647              	.LVL46:
 328:main.c        **** 			APP_STATE.IS_TOUCHED = 1;
 648              		.loc 1 328 0
 649 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 650 0014 002B     		cmp	r3, #0
 651 0016 F4D0     		beq	.L18
 329:main.c        ****             GUI_HandleTouch(&TS_State, CON_HandleButtonTouched);
 652              		.loc 1 329 0
 653 0018 0122     		movs	r2, #1
 654 001a 044B     		ldr	r3, .L21+4
 655 001c 9A60     		str	r2, [r3, #8]
 330:main.c        ****         }
 656              		.loc 1 330 0
 657 001e 0449     		ldr	r1, .L21+8
 658 0020 2046     		mov	r0, r4
 659 0022 FFF7FEFF 		bl	GUI_HandleTouch
 660              	.LVL47:
 661 0026 ECE7     		b	.L18
 662              	.L22:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 37


 663              		.align	2
 664              	.L21:
 665 0028 00000000 		.word	.LANCHOR2
 666 002c 00000000 		.word	.LANCHOR3
 667 0030 00000000 		.word	CON_HandleButtonTouched
 668              		.cfi_endproc
 669              	.LFE163:
 671              		.section	.text.StartGuiTask,"ax",%progbits
 672              		.align	1
 673              		.global	StartGuiTask
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv5-sp-d16
 679              	StartGuiTask:
 680              	.LFB164:
 335:main.c        ****     for (;;) {
 681              		.loc 1 335 0
 682              		.cfi_startproc
 683              		@ Volatile: function does not return.
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              	.LVL48:
 687 0000 08B5     		push	{r3, lr}
 688              	.LCFI6:
 689              		.cfi_def_cfa_offset 8
 690              		.cfi_offset 3, -8
 691              		.cfi_offset 14, -4
 692 0002 04E0     		b	.L26
 693              	.LVL49:
 694              	.L25:
 346:main.c        ****             GUI_HighlightButton(APP_STATE.SELECTED_SOUND_BUTTON);
 695              		.loc 1 346 0
 696 0004 0E4B     		ldr	r3, .L30
 697 0006 1868     		ldr	r0, [r3]
 698 0008 B0F1FF3F 		cmp	r0, #-1
 699 000c 15D1     		bne	.L29
 700              	.L26:
 337:main.c        **** 		if (APP_STATE.IS_TOUCHED != -1){
 701              		.loc 1 337 0
 702 000e 3220     		movs	r0, #50
 703 0010 FFF7FEFF 		bl	vTaskDelay
 704              	.LVL50:
 338:main.c        **** 			APP_STATE.IS_TOUCHED = -1;
 705              		.loc 1 338 0
 706 0014 0A4B     		ldr	r3, .L30
 707 0016 9B68     		ldr	r3, [r3, #8]
 708 0018 B3F1FF3F 		cmp	r3, #-1
 709 001c 05D0     		beq	.L24
 339:main.c        **** 			GUI_DrawAllButtons();
 710              		.loc 1 339 0
 711 001e 4FF0FF32 		mov	r2, #-1
 712 0022 074B     		ldr	r3, .L30
 713 0024 9A60     		str	r2, [r3, #8]
 340:main.c        **** 		}
 714              		.loc 1 340 0
 715 0026 FFF7FEFF 		bl	GUI_DrawAllButtons
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 38


 716              	.LVL51:
 717              	.L24:
 343:main.c        **** 			GUI_HighlightButton(APP_STATE.SELECTED_OPTION);		
 718              		.loc 1 343 0
 719 002a 054B     		ldr	r3, .L30
 720 002c 5868     		ldr	r0, [r3, #4]
 721 002e B0F1FF3F 		cmp	r0, #-1
 722 0032 E7D0     		beq	.L25
 344:main.c        ****  
 723              		.loc 1 344 0
 724 0034 FFF7FEFF 		bl	GUI_HighlightButton
 725              	.LVL52:
 726 0038 E4E7     		b	.L25
 727              	.L29:
 347:main.c        ****     }
 728              		.loc 1 347 0
 729 003a FFF7FEFF 		bl	GUI_HighlightButton
 730              	.LVL53:
 731 003e E6E7     		b	.L26
 732              	.L31:
 733              		.align	2
 734              	.L30:
 735 0040 00000000 		.word	.LANCHOR3
 736              		.cfi_endproc
 737              	.LFE164:
 739              		.section	.text.__io_putchar,"ax",%progbits
 740              		.align	1
 741              		.global	__io_putchar
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv5-sp-d16
 747              	__io_putchar:
 748              	.LFB157:
  52:main.c        ****     uint8_t data = ch;
 749              		.loc 1 52 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 754              	.LVL54:
 755              	.L33:
  57:main.c        ****     huart1.Instance->TDR = (uint16_t) data;
 756              		.loc 1 57 0 discriminator 1
 757 0000 044B     		ldr	r3, .L34
 758 0002 1B68     		ldr	r3, [r3]
 759 0004 DA69     		ldr	r2, [r3, #28]
 760 0006 12F0800F 		tst	r2, #128
 761 000a F9D0     		beq	.L33
  58:main.c        **** #endif
 762              		.loc 1 58 0
 763 000c C0B2     		uxtb	r0, r0
 764              	.LVL55:
 765 000e 9862     		str	r0, [r3, #40]
  61:main.c        **** 
 766              		.loc 1 61 0
 767 0010 0020     		movs	r0, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 39


 768 0012 7047     		bx	lr
 769              	.L35:
 770              		.align	2
 771              	.L34:
 772 0014 00000000 		.word	huart1
 773              		.cfi_endproc
 774              	.LFE157:
 776              		.section	.text.inkey,"ax",%progbits
 777              		.align	1
 778              		.global	inkey
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 782              		.fpu fpv5-sp-d16
 784              	inkey:
 785              	.LFB158:
  63:main.c        ****     uint32_t flags = huart1.Instance->ISR;
 786              		.loc 1 63 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
  64:main.c        **** 
 791              		.loc 1 64 0
 792 0000 064B     		ldr	r3, .L39
 793 0002 1B68     		ldr	r3, [r3]
 794 0004 DA69     		ldr	r2, [r3, #28]
 795              	.LVL56:
  66:main.c        ****         __HAL_UART_CLEAR_OREFLAG(&huart1);
 796              		.loc 1 66 0
 797 0006 12F0280F 		tst	r2, #40
 798 000a 04D0     		beq	.L38
  67:main.c        ****         return (huart1.Instance->RDR);
 799              		.loc 1 67 0
 800 000c 0822     		movs	r2, #8
 801              	.LVL57:
 802 000e 1A62     		str	r2, [r3, #32]
  68:main.c        ****     } else
 803              		.loc 1 68 0
 804 0010 586A     		ldr	r0, [r3, #36]
 805 0012 C0B2     		uxtb	r0, r0
 806 0014 7047     		bx	lr
 807              	.LVL58:
 808              	.L38:
  70:main.c        **** }
 809              		.loc 1 70 0
 810 0016 0020     		movs	r0, #0
  71:main.c        **** 
 811              		.loc 1 71 0
 812 0018 7047     		bx	lr
 813              	.L40:
 814 001a 00BF     		.align	2
 815              	.L39:
 816 001c 00000000 		.word	huart1
 817              		.cfi_endproc
 818              	.LFE158:
 820              		.section	.text.StartDefaultTask,"ax",%progbits
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 40


 821              		.align	1
 822              		.global	StartDefaultTask
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 826              		.fpu fpv5-sp-d16
 828              	StartDefaultTask:
 829              	.LFB162:
 219:main.c        ****     /* init code for FATFS */
 830              		.loc 1 219 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 8
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              	.LVL59:
 835 0000 00B5     		push	{lr}
 836              	.LCFI7:
 837              		.cfi_def_cfa_offset 4
 838              		.cfi_offset 14, -4
 839 0002 83B0     		sub	sp, sp, #12
 840              	.LCFI8:
 841              		.cfi_def_cfa_offset 16
 221:main.c        **** 
 842              		.loc 1 221 0
 843 0004 FFF7FEFF 		bl	MX_FATFS_Init
 844              	.LVL60:
 224:main.c        **** 
 845              		.loc 1 224 0
 846 0008 FFF7FEFF 		bl	MX_USB_HOST_Init
 847              	.LVL61:
 226:main.c        ****     xprintf("Waiting for USB mass storage.\r\n");
 848              		.loc 1 226 0
 849 000c 4FF47A70 		mov	r0, #1000
 850 0010 FFF7FEFF 		bl	vTaskDelay
 851              	.LVL62:
 227:main.c        **** 
 852              		.loc 1 227 0
 853 0014 5748     		ldr	r0, .L66
 854 0016 FFF7FEFF 		bl	xprintf
 855              	.LVL63:
 856              	.L42:
 230:main.c        ****     } while (Appli_state != APPLICATION_READY);
 857              		.loc 1 230 0 discriminator 1
 858 001a FA20     		movs	r0, #250
 859 001c FFF7FEFF 		bl	vTaskDelay
 860              	.LVL64:
 231:main.c        **** 
 861              		.loc 1 231 0 discriminator 1
 862 0020 554B     		ldr	r3, .L66+4
 863 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 0024 022B     		cmp	r3, #2
 865 0026 F8D1     		bne	.L42
 233:main.c        ****     if (BSP_AUDIO_OUT_Init(OUTPUT_DEVICE_HEADPHONE1, 60, AUDIO_FREQUENCY_44K) == 0) {
 866              		.loc 1 233 0
 867 0028 5448     		ldr	r0, .L66+8
 868 002a FFF7FEFF 		bl	xprintf
 869              	.LVL65:
 234:main.c        ****         xprintf("Audio codec initialized successfully.\r\n");
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 41


 870              		.loc 1 234 0
 871 002e 4AF64442 		movw	r2, #44100
 872 0032 3C21     		movs	r1, #60
 873 0034 0220     		movs	r0, #2
 874 0036 FFF7FEFF 		bl	BSP_AUDIO_OUT_Init
 875              	.LVL66:
 876 003a 40B9     		cbnz	r0, .L43
 235:main.c        ****     } else {
 877              		.loc 1 235 0
 878 003c 5048     		ldr	r0, .L66+12
 879 003e FFF7FEFF 		bl	xprintf
 880              	.LVL67:
 881              	.L44:
 239:main.c        **** 
 882              		.loc 1 239 0
 883 0042 0520     		movs	r0, #5
 884 0044 FFF7FEFF 		bl	BSP_AUDIO_OUT_SetAudioFrameSlot
 885              	.LVL68:
 242:main.c        **** 
 886              		.loc 1 242 0
 887 0048 FFF7FEFF 		bl	AUDIO_L_PerformScan
 888              	.LVL69:
 889 004c 1CE0     		b	.L58
 890              	.L43:
 237:main.c        ****     }
 891              		.loc 1 237 0
 892 004e 4D48     		ldr	r0, .L66+16
 893 0050 FFF7FEFF 		bl	xprintf
 894              	.LVL70:
 895 0054 F5E7     		b	.L44
 896              	.LVL71:
 897              	.L46:
 898              	.LBB13:
 252:main.c        ****                 break;
 899              		.loc 1 252 0
 900 0056 4C48     		ldr	r0, .L66+20
 901              	.LVL72:
 902 0058 FFF7FEFF 		bl	xprintf
 903              	.LVL73:
 904              	.L48:
 282:main.c        ****             uint32_t br;
 905              		.loc 1 282 0
 906 005c 4B4B     		ldr	r3, .L66+24
 907 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 908 0060 7BB1     		cbz	r3, .L52
 909              	.LBB14:
 285:main.c        ****                 if (f_read(&testFile,
 910              		.loc 1 285 0
 911 0062 4B4B     		ldr	r3, .L66+28
 912 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 913 0066 012B     		cmp	r3, #1
 914 0068 42D0     		beq	.L61
 915              	.L53:
 298:main.c        ****                 if (f_read(&testFile,
 916              		.loc 1 298 0
 917 006a 494B     		ldr	r3, .L66+28
 918 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 42


 919 006e 022B     		cmp	r3, #2
 920 0070 56D0     		beq	.L62
 921              	.L55:
 311:main.c        ****                 xprintf("stop at eof\n");
 922              		.loc 1 311 0
 923 0072 019B     		ldr	r3, [sp, #4]
 924 0074 B3F5805F 		cmp	r3, #4096
 925 0078 03D2     		bcs	.L52
 311:main.c        ****                 xprintf("stop at eof\n");
 926              		.loc 1 311 0 is_stmt 0 discriminator 1
 927 007a 464B     		ldr	r3, .L66+32
 928 007c 1B68     		ldr	r3, [r3]
 929 007e 002B     		cmp	r3, #0
 930 0080 66D1     		bne	.L63
 931              	.L52:
 932              	.LBE14:
 320:main.c        ****     }
 933              		.loc 1 320 0 is_stmt 1
 934 0082 6420     		movs	r0, #100
 935 0084 FFF7FEFF 		bl	vTaskDelay
 936              	.LVL74:
 937              	.L58:
 246:main.c        **** 
 938              		.loc 1 246 0
 939 0088 FFF7FEFF 		bl	inkey
 940              	.LVL75:
 248:main.c        ****             case 0:
 941              		.loc 1 248 0
 942 008c 6128     		cmp	r0, #97
 943 008e E2D0     		beq	.L46
 944 0090 7028     		cmp	r0, #112
 945 0092 07D0     		beq	.L47
 946 0094 0028     		cmp	r0, #0
 947 0096 E1D0     		beq	.L48
 277:main.c        ****                 break;
 948              		.loc 1 277 0
 949 0098 0246     		mov	r2, r0
 950 009a 0146     		mov	r1, r0
 951 009c 3E48     		ldr	r0, .L66+36
 952              	.LVL76:
 953 009e FFF7FEFF 		bl	xprintf
 954              	.LVL77:
 278:main.c        ****             }
 955              		.loc 1 278 0
 956 00a2 DBE7     		b	.L48
 957              	.LVL78:
 958              	.L47:
 959              	.LBB15:
 257:main.c        ****                 if (player_state) {
 960              		.loc 1 257 0
 961 00a4 3D48     		ldr	r0, .L66+40
 962              	.LVL79:
 963 00a6 FFF7FEFF 		bl	xprintf
 964              	.LVL80:
 258:main.c        ****                     xprintf("already playing\n");
 965              		.loc 1 258 0
 966 00aa 384B     		ldr	r3, .L66+24
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 43


 967 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 968 00ae 1BB1     		cbz	r3, .L49
 259:main.c        ****                     break;
 969              		.loc 1 259 0
 970 00b0 3B48     		ldr	r0, .L66+44
 971 00b2 FFF7FEFF 		bl	xprintf
 972              	.LVL81:
 260:main.c        ****                 }
 973              		.loc 1 260 0
 974 00b6 D1E7     		b	.L48
 975              	.L49:
 264:main.c        ****                 if (res == FR_OK) {
 976              		.loc 1 264 0
 977 00b8 0122     		movs	r2, #1
 978 00ba 3A49     		ldr	r1, .L66+48
 979 00bc 3A48     		ldr	r0, .L66+52
 980 00be FFF7FEFF 		bl	f_open
 981              	.LVL82:
 265:main.c        ****                     xprintf("wave file open OK\n");
 982              		.loc 1 265 0
 983 00c2 0146     		mov	r1, r0
 984 00c4 80B9     		cbnz	r0, .L50
 266:main.c        ****                 } else {
 985              		.loc 1 266 0
 986 00c6 3948     		ldr	r0, .L66+56
 987              	.LVL83:
 988 00c8 FFF7FEFF 		bl	xprintf
 989              	.LVL84:
 990              	.L51:
 270:main.c        ****                 BSP_AUDIO_OUT_Play((uint16_t *) &buff[0], AUDIO_OUT_BUFFER_SIZE);
 991              		.loc 1 270 0
 992 00cc 0122     		movs	r2, #1
 993 00ce 2F4B     		ldr	r3, .L66+24
 994 00d0 1A70     		strb	r2, [r3]
 271:main.c        ****                 fpos = 0;
 995              		.loc 1 271 0
 996 00d2 4FF40051 		mov	r1, #8192
 997 00d6 3648     		ldr	r0, .L66+60
 998 00d8 FFF7FEFF 		bl	BSP_AUDIO_OUT_Play
 999              	.LVL85:
 272:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 1000              		.loc 1 272 0
 1001 00dc 0023     		movs	r3, #0
 1002 00de 2D4A     		ldr	r2, .L66+32
 1003 00e0 1360     		str	r3, [r2]
 273:main.c        ****                 break;
 1004              		.loc 1 273 0
 1005 00e2 2B4A     		ldr	r2, .L66+28
 1006 00e4 1370     		strb	r3, [r2]
 274:main.c        ****             }
 1007              		.loc 1 274 0
 1008 00e6 B9E7     		b	.L48
 1009              	.LVL86:
 1010              	.L50:
 268:main.c        ****                 }
 1011              		.loc 1 268 0
 1012 00e8 3248     		ldr	r0, .L66+64
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 44


 1013              	.LVL87:
 1014 00ea FFF7FEFF 		bl	xprintf
 1015              	.LVL88:
 1016 00ee EDE7     		b	.L51
 1017              	.L61:
 1018              	.LBE15:
 1019              	.LBB16:
 286:main.c        ****                            &buff[0],
 1020              		.loc 1 286 0
 1021 00f0 01AB     		add	r3, sp, #4
 1022 00f2 4FF48052 		mov	r2, #4096
 1023 00f6 2E49     		ldr	r1, .L66+60
 1024 00f8 2B48     		ldr	r0, .L66+52
 1025 00fa FFF7FEFF 		bl	f_read
 1026              	.LVL89:
 1027 00fe 40B9     		cbnz	r0, .L64
 1028              	.L54:
 293:main.c        ****                 fpos += br;
 1029              		.loc 1 293 0
 1030 0100 0022     		movs	r2, #0
 1031 0102 234B     		ldr	r3, .L66+28
 1032 0104 1A70     		strb	r2, [r3]
 294:main.c        **** 
 1033              		.loc 1 294 0
 1034 0106 234A     		ldr	r2, .L66+32
 1035 0108 1368     		ldr	r3, [r2]
 1036 010a 0199     		ldr	r1, [sp, #4]
 1037 010c 0B44     		add	r3, r3, r1
 1038 010e 1360     		str	r3, [r2]
 1039 0110 ABE7     		b	.L53
 1040              	.L64:
 290:main.c        ****                     xprintf("f_read error on half\n");
 1041              		.loc 1 290 0
 1042 0112 0220     		movs	r0, #2
 1043 0114 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 1044              	.LVL90:
 291:main.c        ****                 }
 1045              		.loc 1 291 0
 1046 0118 2748     		ldr	r0, .L66+68
 1047 011a FFF7FEFF 		bl	xprintf
 1048              	.LVL91:
 1049 011e EFE7     		b	.L54
 1050              	.L62:
 299:main.c        ****                            &buff[AUDIO_OUT_BUFFER_SIZE / 2],
 1051              		.loc 1 299 0
 1052 0120 01AB     		add	r3, sp, #4
 1053 0122 4FF48052 		mov	r2, #4096
 1054 0126 2549     		ldr	r1, .L66+72
 1055 0128 1F48     		ldr	r0, .L66+52
 1056 012a FFF7FEFF 		bl	f_read
 1057              	.LVL92:
 1058 012e 40B9     		cbnz	r0, .L65
 1059              	.L56:
 307:main.c        ****                 fpos += br;
 1060              		.loc 1 307 0
 1061 0130 0022     		movs	r2, #0
 1062 0132 174B     		ldr	r3, .L66+28
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 45


 1063 0134 1A70     		strb	r2, [r3]
 308:main.c        ****             }
 1064              		.loc 1 308 0
 1065 0136 174A     		ldr	r2, .L66+32
 1066 0138 1368     		ldr	r3, [r2]
 1067 013a 0199     		ldr	r1, [sp, #4]
 1068 013c 0B44     		add	r3, r3, r1
 1069 013e 1360     		str	r3, [r2]
 1070 0140 97E7     		b	.L55
 1071              	.L65:
 303:main.c        ****                     xprintf("f_read error on full\n");
 1072              		.loc 1 303 0
 1073 0142 0220     		movs	r0, #2
 1074 0144 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 1075              	.LVL93:
 304:main.c        ****                 }
 1076              		.loc 1 304 0
 1077 0148 1D48     		ldr	r0, .L66+76
 1078 014a FFF7FEFF 		bl	xprintf
 1079              	.LVL94:
 1080 014e EFE7     		b	.L56
 1081              	.L63:
 312:main.c        ****                 BSP_AUDIO_OUT_Stop(CODEC_PDWN_SW);
 1082              		.loc 1 312 0
 1083 0150 1C48     		ldr	r0, .L66+80
 1084 0152 FFF7FEFF 		bl	xprintf
 1085              	.LVL95:
 313:main.c        ****                 f_close(&testFile);
 1086              		.loc 1 313 0
 1087 0156 0220     		movs	r0, #2
 1088 0158 FFF7FEFF 		bl	BSP_AUDIO_OUT_Stop
 1089              	.LVL96:
 314:main.c        ****                 player_state = 0;
 1090              		.loc 1 314 0
 1091 015c 1248     		ldr	r0, .L66+52
 1092 015e FFF7FEFF 		bl	f_close
 1093              	.LVL97:
 315:main.c        ****                 fpos = 0;
 1094              		.loc 1 315 0
 1095 0162 0023     		movs	r3, #0
 1096 0164 094A     		ldr	r2, .L66+24
 1097 0166 1370     		strb	r3, [r2]
 316:main.c        ****                 buf_offs = BUFFER_OFFSET_NONE;
 1098              		.loc 1 316 0
 1099 0168 0A4A     		ldr	r2, .L66+32
 1100 016a 1360     		str	r3, [r2]
 317:main.c        ****             }
 1101              		.loc 1 317 0
 1102 016c 084A     		ldr	r2, .L66+28
 1103 016e 1370     		strb	r3, [r2]
 1104 0170 87E7     		b	.L52
 1105              	.L67:
 1106 0172 00BF     		.align	2
 1107              	.L66:
 1108 0174 00000000 		.word	.LC6
 1109 0178 00000000 		.word	Appli_state
 1110 017c 20000000 		.word	.LC7
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 46


 1111 0180 3C000000 		.word	.LC8
 1112 0184 64000000 		.word	.LC9
 1113 0188 8C000000 		.word	.LC10
 1114 018c 00000000 		.word	.LANCHOR4
 1115 0190 00000000 		.word	.LANCHOR7
 1116 0194 00000000 		.word	.LANCHOR6
 1117 0198 10010000 		.word	.LC16
 1118 019c A4000000 		.word	.LC11
 1119 01a0 B8000000 		.word	.LC12
 1120 01a4 CC000000 		.word	.LC13
 1121 01a8 00000000 		.word	.LANCHOR5
 1122 01ac DC000000 		.word	.LC14
 1123 01b0 00000000 		.word	buff
 1124 01b4 F0000000 		.word	.LC15
 1125 01b8 38010000 		.word	.LC17
 1126 01bc 00100000 		.word	buff+4096
 1127 01c0 50010000 		.word	.LC18
 1128 01c4 68010000 		.word	.LC19
 1129              	.LBE16:
 1130              	.LBE13:
 1131              		.cfi_endproc
 1132              	.LFE162:
 1134              		.section	.text.BSP_AUDIO_OUT_TransferComplete_CallBack,"ax",%progbits
 1135              		.align	1
 1136              		.global	BSP_AUDIO_OUT_TransferComplete_CallBack
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1140              		.fpu fpv5-sp-d16
 1142              	BSP_AUDIO_OUT_TransferComplete_CallBack:
 1143              	.LFB190:
1374:main.c        **** 
1375:main.c        **** void BSP_AUDIO_OUT_TransferComplete_CallBack(void) {
 1144              		.loc 1 1375 0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
1376:main.c        ****     buf_offs = BUFFER_OFFSET_FULL;
 1149              		.loc 1 1376 0
 1150 0000 0222     		movs	r2, #2
 1151 0002 014B     		ldr	r3, .L69
 1152 0004 1A70     		strb	r2, [r3]
 1153 0006 7047     		bx	lr
 1154              	.L70:
 1155              		.align	2
 1156              	.L69:
 1157 0008 00000000 		.word	.LANCHOR7
 1158              		.cfi_endproc
 1159              	.LFE190:
 1161              		.section	.text.BSP_AUDIO_OUT_HalfTransfer_CallBack,"ax",%progbits
 1162              		.align	1
 1163              		.global	BSP_AUDIO_OUT_HalfTransfer_CallBack
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1167              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 47


 1169              	BSP_AUDIO_OUT_HalfTransfer_CallBack:
 1170              	.LFB191:
1377:main.c        **** }
1378:main.c        **** 
1379:main.c        **** void BSP_AUDIO_OUT_HalfTransfer_CallBack(void) {
 1171              		.loc 1 1379 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
1380:main.c        ****     buf_offs = BUFFER_OFFSET_HALF;
 1176              		.loc 1 1380 0
 1177 0000 0122     		movs	r2, #1
 1178 0002 014B     		ldr	r3, .L72
 1179 0004 1A70     		strb	r2, [r3]
 1180 0006 7047     		bx	lr
 1181              	.L73:
 1182              		.align	2
 1183              	.L72:
 1184 0008 00000000 		.word	.LANCHOR7
 1185              		.cfi_endproc
 1186              	.LFE191:
 1188              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1189              		.align	1
 1190              		.global	HAL_TIM_PeriodElapsedCallback
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv5-sp-d16
 1196              	HAL_TIM_PeriodElapsedCallback:
 1197              	.LFB192:
1381:main.c        **** }
1382:main.c        **** 
1383:main.c        **** /**
1384:main.c        ****   * @brief  Period elapsed callback in non blocking mode
1385:main.c        ****   * @note   This function is called  when TIM6 interrupt took place, inside
1386:main.c        ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1387:main.c        ****   * a global variable "uwTick" used as application time base.
1388:main.c        ****   * @param  htim : TIM handle
1389:main.c        ****   * @retval None
1390:main.c        ****   */
1391:main.c        **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 1198              		.loc 1 1391 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              	.LVL98:
 1203 0000 08B5     		push	{r3, lr}
 1204              	.LCFI9:
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 3, -8
 1207              		.cfi_offset 14, -4
1392:main.c        ****     /* USER CODE BEGIN Callback 0 */
1393:main.c        **** 
1394:main.c        ****     /* USER CODE END Callback 0 */
1395:main.c        ****     if (htim->Instance == TIM6) {
 1208              		.loc 1 1395 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 48


 1209 0002 0268     		ldr	r2, [r0]
 1210 0004 034B     		ldr	r3, .L78
 1211 0006 9A42     		cmp	r2, r3
 1212 0008 00D0     		beq	.L77
 1213              	.LVL99:
 1214              	.L74:
 1215 000a 08BD     		pop	{r3, pc}
 1216              	.LVL100:
 1217              	.L77:
1396:main.c        ****         HAL_IncTick();
 1218              		.loc 1 1396 0
 1219 000c FFF7FEFF 		bl	HAL_IncTick
 1220              	.LVL101:
1397:main.c        ****     }
1398:main.c        ****     /* USER CODE BEGIN Callback 1 */
1399:main.c        **** 
1400:main.c        ****     /* USER CODE END Callback 1 */
1401:main.c        **** }
 1221              		.loc 1 1401 0
 1222 0010 FBE7     		b	.L74
 1223              	.L79:
 1224 0012 00BF     		.align	2
 1225              	.L78:
 1226 0014 00100040 		.word	1073745920
 1227              		.cfi_endproc
 1228              	.LFE192:
 1230              		.section	.text._Error_Handler,"ax",%progbits
 1231              		.align	1
 1232              		.global	_Error_Handler
 1233              		.syntax unified
 1234              		.thumb
 1235              		.thumb_func
 1236              		.fpu fpv5-sp-d16
 1238              	_Error_Handler:
 1239              	.LFB193:
1402:main.c        **** 
1403:main.c        **** /**
1404:main.c        ****   * @brief  This function is executed in case of error occurrence.
1405:main.c        ****   * @param  file: The file name as string.
1406:main.c        ****   * @param  line: The line in file as a number.
1407:main.c        ****   * @retval None
1408:main.c        ****   */
1409:main.c        **** void _Error_Handler(char *file, int line) {
 1240              		.loc 1 1409 0
 1241              		.cfi_startproc
 1242              		@ Volatile: function does not return.
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245              		@ link register save eliminated.
 1246              	.LVL102:
 1247              	.L81:
 1248 0000 FEE7     		b	.L81
 1249              		.cfi_endproc
 1250              	.LFE193:
 1252              		.section	.text.MX_ADC3_Init,"ax",%progbits
 1253              		.align	1
 1254              		.syntax unified
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 49


 1255              		.thumb
 1256              		.thumb_func
 1257              		.fpu fpv5-sp-d16
 1259              	MX_ADC3_Init:
 1260              	.LFB166:
 442:main.c        **** 
 1261              		.loc 1 442 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 16
 1264              		@ frame_needed = 0, uses_anonymous_args = 0
 442:main.c        **** 
 1265              		.loc 1 442 0
 1266 0000 00B5     		push	{lr}
 1267              	.LCFI10:
 1268              		.cfi_def_cfa_offset 4
 1269              		.cfi_offset 14, -4
 1270 0002 85B0     		sub	sp, sp, #20
 1271              	.LCFI11:
 1272              		.cfi_def_cfa_offset 24
 448:main.c        ****     hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1273              		.loc 1 448 0
 1274 0004 1648     		ldr	r0, .L88
 1275 0006 174B     		ldr	r3, .L88+4
 1276 0008 0360     		str	r3, [r0]
 449:main.c        ****     hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 1277              		.loc 1 449 0
 1278 000a 4FF48033 		mov	r3, #65536
 1279 000e 4360     		str	r3, [r0, #4]
 450:main.c        ****     hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1280              		.loc 1 450 0
 1281 0010 0023     		movs	r3, #0
 1282 0012 8360     		str	r3, [r0, #8]
 451:main.c        ****     hadc3.Init.ContinuousConvMode = DISABLE;
 1283              		.loc 1 451 0
 1284 0014 0361     		str	r3, [r0, #16]
 452:main.c        ****     hadc3.Init.DiscontinuousConvMode = DISABLE;
 1285              		.loc 1 452 0
 1286 0016 8361     		str	r3, [r0, #24]
 453:main.c        ****     hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1287              		.loc 1 453 0
 1288 0018 0362     		str	r3, [r0, #32]
 454:main.c        ****     hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1289              		.loc 1 454 0
 1290 001a C362     		str	r3, [r0, #44]
 455:main.c        ****     hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1291              		.loc 1 455 0
 1292 001c 124A     		ldr	r2, .L88+8
 1293 001e 8262     		str	r2, [r0, #40]
 456:main.c        ****     hadc3.Init.NbrOfConversion = 1;
 1294              		.loc 1 456 0
 1295 0020 C360     		str	r3, [r0, #12]
 457:main.c        ****     hadc3.Init.DMAContinuousRequests = DISABLE;
 1296              		.loc 1 457 0
 1297 0022 0122     		movs	r2, #1
 1298 0024 C261     		str	r2, [r0, #28]
 458:main.c        ****     hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1299              		.loc 1 458 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 50


 1300 0026 0363     		str	r3, [r0, #48]
 459:main.c        ****     if (HAL_ADC_Init(&hadc3) != HAL_OK) {
 1301              		.loc 1 459 0
 1302 0028 4261     		str	r2, [r0, #20]
 460:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1303              		.loc 1 460 0
 1304 002a FFF7FEFF 		bl	HAL_ADC_Init
 1305              	.LVL103:
 1306 002e 68B9     		cbnz	r0, .L86
 466:main.c        ****     sConfig.Rank = ADC_REGULAR_RANK_1;
 1307              		.loc 1 466 0
 1308 0030 0423     		movs	r3, #4
 1309 0032 0093     		str	r3, [sp]
 467:main.c        ****     sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1310              		.loc 1 467 0
 1311 0034 0123     		movs	r3, #1
 1312 0036 0193     		str	r3, [sp, #4]
 468:main.c        ****     if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK) {
 1313              		.loc 1 468 0
 1314 0038 0023     		movs	r3, #0
 1315 003a 0293     		str	r3, [sp, #8]
 469:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1316              		.loc 1 469 0
 1317 003c 6946     		mov	r1, sp
 1318 003e 0848     		ldr	r0, .L88
 1319 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1320              	.LVL104:
 1321 0044 38B9     		cbnz	r0, .L87
 473:main.c        **** 
 1322              		.loc 1 473 0
 1323 0046 05B0     		add	sp, sp, #20
 1324              	.LCFI12:
 1325              		.cfi_remember_state
 1326              		.cfi_def_cfa_offset 4
 1327              		@ sp needed
 1328 0048 5DF804FB 		ldr	pc, [sp], #4
 1329              	.L86:
 1330              	.LCFI13:
 1331              		.cfi_restore_state
 461:main.c        ****     }
 1332              		.loc 1 461 0
 1333 004c 40F2CD11 		movw	r1, #461
 1334 0050 0648     		ldr	r0, .L88+12
 1335 0052 FFF7FEFF 		bl	_Error_Handler
 1336              	.LVL105:
 1337              	.L87:
 470:main.c        ****     }
 1338              		.loc 1 470 0
 1339 0056 4FF4EB71 		mov	r1, #470
 1340 005a 0448     		ldr	r0, .L88+12
 1341 005c FFF7FEFF 		bl	_Error_Handler
 1342              	.LVL106:
 1343              	.L89:
 1344              		.align	2
 1345              	.L88:
 1346 0060 00000000 		.word	hadc3
 1347 0064 00220140 		.word	1073816064
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 51


 1348 0068 0100000F 		.word	251658241
 1349 006c 00000000 		.word	.LC20
 1350              		.cfi_endproc
 1351              	.LFE166:
 1353              		.section	.text.MX_CRC_Init,"ax",%progbits
 1354              		.align	1
 1355              		.syntax unified
 1356              		.thumb
 1357              		.thumb_func
 1358              		.fpu fpv5-sp-d16
 1360              	MX_CRC_Init:
 1361              	.LFB167:
 476:main.c        **** 
 1362              		.loc 1 476 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366 0000 08B5     		push	{r3, lr}
 1367              	.LCFI14:
 1368              		.cfi_def_cfa_offset 8
 1369              		.cfi_offset 3, -8
 1370              		.cfi_offset 14, -4
 478:main.c        ****     hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 1371              		.loc 1 478 0
 1372 0002 0948     		ldr	r0, .L94
 1373 0004 094B     		ldr	r3, .L94+4
 1374 0006 0360     		str	r3, [r0]
 479:main.c        ****     hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 1375              		.loc 1 479 0
 1376 0008 0023     		movs	r3, #0
 1377 000a 0371     		strb	r3, [r0, #4]
 480:main.c        ****     hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 1378              		.loc 1 480 0
 1379 000c 4371     		strb	r3, [r0, #5]
 481:main.c        ****     hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 1380              		.loc 1 481 0
 1381 000e 4361     		str	r3, [r0, #20]
 482:main.c        ****     hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 1382              		.loc 1 482 0
 1383 0010 8361     		str	r3, [r0, #24]
 483:main.c        ****     if (HAL_CRC_Init(&hcrc) != HAL_OK) {
 1384              		.loc 1 483 0
 1385 0012 0123     		movs	r3, #1
 1386 0014 0362     		str	r3, [r0, #32]
 484:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1387              		.loc 1 484 0
 1388 0016 FFF7FEFF 		bl	HAL_CRC_Init
 1389              	.LVL107:
 1390 001a 00B9     		cbnz	r0, .L93
 1391 001c 08BD     		pop	{r3, pc}
 1392              	.L93:
 485:main.c        ****     }
 1393              		.loc 1 485 0
 1394 001e 40F2E511 		movw	r1, #485
 1395 0022 0348     		ldr	r0, .L94+8
 1396 0024 FFF7FEFF 		bl	_Error_Handler
 1397              	.LVL108:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 52


 1398              	.L95:
 1399              		.align	2
 1400              	.L94:
 1401 0028 00000000 		.word	hcrc
 1402 002c 00300240 		.word	1073885184
 1403 0030 00000000 		.word	.LC20
 1404              		.cfi_endproc
 1405              	.LFE167:
 1407              		.section	.text.MX_DCMI_Init,"ax",%progbits
 1408              		.align	1
 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1412              		.fpu fpv5-sp-d16
 1414              	MX_DCMI_Init:
 1415              	.LFB168:
 491:main.c        **** 
 1416              		.loc 1 491 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420 0000 08B5     		push	{r3, lr}
 1421              	.LCFI15:
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 3, -8
 1424              		.cfi_offset 14, -4
 493:main.c        ****     hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 1425              		.loc 1 493 0
 1426 0002 0C48     		ldr	r0, .L100
 1427 0004 0C4B     		ldr	r3, .L100+4
 1428 0006 0360     		str	r3, [r0]
 494:main.c        ****     hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 1429              		.loc 1 494 0
 1430 0008 0023     		movs	r3, #0
 1431 000a 4360     		str	r3, [r0, #4]
 495:main.c        ****     hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 1432              		.loc 1 495 0
 1433 000c 8360     		str	r3, [r0, #8]
 496:main.c        ****     hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 1434              		.loc 1 496 0
 1435 000e C360     		str	r3, [r0, #12]
 497:main.c        ****     hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 1436              		.loc 1 497 0
 1437 0010 0361     		str	r3, [r0, #16]
 498:main.c        ****     hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 1438              		.loc 1 498 0
 1439 0012 4361     		str	r3, [r0, #20]
 499:main.c        ****     hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 1440              		.loc 1 499 0
 1441 0014 8361     		str	r3, [r0, #24]
 500:main.c        ****     hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 1442              		.loc 1 500 0
 1443 0016 0362     		str	r3, [r0, #32]
 501:main.c        ****     hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 1444              		.loc 1 501 0
 1445 0018 4362     		str	r3, [r0, #36]
 502:main.c        ****     hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 53


 1446              		.loc 1 502 0
 1447 001a 8362     		str	r3, [r0, #40]
 503:main.c        ****     hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 1448              		.loc 1 503 0
 1449 001c C362     		str	r3, [r0, #44]
 504:main.c        ****     if (HAL_DCMI_Init(&hdcmi) != HAL_OK) {
 1450              		.loc 1 504 0
 1451 001e 0363     		str	r3, [r0, #48]
 505:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1452              		.loc 1 505 0
 1453 0020 FFF7FEFF 		bl	HAL_DCMI_Init
 1454              	.LVL109:
 1455 0024 00B9     		cbnz	r0, .L99
 1456 0026 08BD     		pop	{r3, pc}
 1457              	.L99:
 506:main.c        ****     }
 1458              		.loc 1 506 0
 1459 0028 4FF4FD71 		mov	r1, #506
 1460 002c 0348     		ldr	r0, .L100+8
 1461 002e FFF7FEFF 		bl	_Error_Handler
 1462              	.LVL110:
 1463              	.L101:
 1464 0032 00BF     		.align	2
 1465              	.L100:
 1466 0034 00000000 		.word	hdcmi
 1467 0038 00000550 		.word	1342504960
 1468 003c 00000000 		.word	.LC20
 1469              		.cfi_endproc
 1470              	.LFE168:
 1472              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 1473              		.align	1
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1477              		.fpu fpv5-sp-d16
 1479              	MX_DMA2D_Init:
 1480              	.LFB169:
 512:main.c        **** 
 1481              		.loc 1 512 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485 0000 08B5     		push	{r3, lr}
 1486              	.LCFI16:
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 3, -8
 1489              		.cfi_offset 14, -4
 514:main.c        ****     hdma2d.Init.Mode = DMA2D_M2M;
 1490              		.loc 1 514 0
 1491 0002 0F48     		ldr	r0, .L108
 1492 0004 0F4B     		ldr	r3, .L108+4
 1493 0006 0360     		str	r3, [r0]
 515:main.c        ****     hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 1494              		.loc 1 515 0
 1495 0008 0023     		movs	r3, #0
 1496 000a 4360     		str	r3, [r0, #4]
 516:main.c        ****     hdma2d.Init.OutputOffset = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 54


 1497              		.loc 1 516 0
 1498 000c 8360     		str	r3, [r0, #8]
 517:main.c        ****     hdma2d.LayerCfg[1].InputOffset = 0;
 1499              		.loc 1 517 0
 1500 000e C360     		str	r3, [r0, #12]
 518:main.c        ****     hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 1501              		.loc 1 518 0
 1502 0010 8362     		str	r3, [r0, #40]
 519:main.c        ****     hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 1503              		.loc 1 519 0
 1504 0012 C362     		str	r3, [r0, #44]
 520:main.c        ****     hdma2d.LayerCfg[1].InputAlpha = 0;
 1505              		.loc 1 520 0
 1506 0014 0363     		str	r3, [r0, #48]
 521:main.c        ****     if (HAL_DMA2D_Init(&hdma2d) != HAL_OK) {
 1507              		.loc 1 521 0
 1508 0016 4363     		str	r3, [r0, #52]
 522:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1509              		.loc 1 522 0
 1510 0018 FFF7FEFF 		bl	HAL_DMA2D_Init
 1511              	.LVL111:
 1512 001c 28B9     		cbnz	r0, .L106
 526:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1513              		.loc 1 526 0
 1514 001e 0121     		movs	r1, #1
 1515 0020 0748     		ldr	r0, .L108
 1516 0022 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 1517              	.LVL112:
 1518 0026 28B9     		cbnz	r0, .L107
 1519 0028 08BD     		pop	{r3, pc}
 1520              	.L106:
 523:main.c        ****     }
 1521              		.loc 1 523 0
 1522 002a 40F20B21 		movw	r1, #523
 1523 002e 0648     		ldr	r0, .L108+8
 1524 0030 FFF7FEFF 		bl	_Error_Handler
 1525              	.LVL113:
 1526              	.L107:
 527:main.c        ****     }
 1527              		.loc 1 527 0
 1528 0034 40F20F21 		movw	r1, #527
 1529 0038 0348     		ldr	r0, .L108+8
 1530 003a FFF7FEFF 		bl	_Error_Handler
 1531              	.LVL114:
 1532              	.L109:
 1533 003e 00BF     		.align	2
 1534              	.L108:
 1535 0040 00000000 		.word	hdma2d
 1536 0044 00B00240 		.word	1073917952
 1537 0048 00000000 		.word	.LC20
 1538              		.cfi_endproc
 1539              	.LFE169:
 1541              		.section	.text.MX_FMC_Init,"ax",%progbits
 1542              		.align	1
 1543              		.syntax unified
 1544              		.thumb
 1545              		.thumb_func
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 55


 1546              		.fpu fpv5-sp-d16
 1548              	MX_FMC_Init:
 1549              	.LFB188:
1170:main.c        ****     FMC_SDRAM_TimingTypeDef SdramTiming;
 1550              		.loc 1 1170 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 32
 1553              		@ frame_needed = 0, uses_anonymous_args = 0
 1554 0000 00B5     		push	{lr}
 1555              	.LCFI17:
 1556              		.cfi_def_cfa_offset 4
 1557              		.cfi_offset 14, -4
 1558 0002 89B0     		sub	sp, sp, #36
 1559              	.LCFI18:
 1560              		.cfi_def_cfa_offset 40
1175:main.c        ****     /* hsdram1.Init */
 1561              		.loc 1 1175 0
 1562 0004 1648     		ldr	r0, .L114
 1563 0006 174B     		ldr	r3, .L114+4
 1564 0008 0360     		str	r3, [r0]
1177:main.c        ****     hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 1565              		.loc 1 1177 0
 1566 000a 0023     		movs	r3, #0
 1567 000c 4360     		str	r3, [r0, #4]
1178:main.c        ****     hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 1568              		.loc 1 1178 0
 1569 000e 8360     		str	r3, [r0, #8]
1179:main.c        ****     hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 1570              		.loc 1 1179 0
 1571 0010 0421     		movs	r1, #4
 1572 0012 C160     		str	r1, [r0, #12]
1180:main.c        ****     hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1573              		.loc 1 1180 0
 1574 0014 1022     		movs	r2, #16
 1575 0016 0261     		str	r2, [r0, #16]
1181:main.c        ****     hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 1576              		.loc 1 1181 0
 1577 0018 4022     		movs	r2, #64
 1578 001a 4261     		str	r2, [r0, #20]
1182:main.c        ****     hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1579              		.loc 1 1182 0
 1580 001c 4FF4C072 		mov	r2, #384
 1581 0020 8261     		str	r2, [r0, #24]
1183:main.c        ****     hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 1582              		.loc 1 1183 0
 1583 0022 C361     		str	r3, [r0, #28]
1184:main.c        ****     hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 1584              		.loc 1 1184 0
 1585 0024 4FF40062 		mov	r2, #2048
 1586 0028 0262     		str	r2, [r0, #32]
1185:main.c        ****     hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1587              		.loc 1 1185 0
 1588 002a 4FF48052 		mov	r2, #4096
 1589 002e 4262     		str	r2, [r0, #36]
1186:main.c        ****     /* SdramTiming */
 1590              		.loc 1 1186 0
 1591 0030 8362     		str	r3, [r0, #40]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 56


1188:main.c        ****     SdramTiming.ExitSelfRefreshDelay = 7;
 1592              		.loc 1 1188 0
 1593 0032 0223     		movs	r3, #2
 1594 0034 0193     		str	r3, [sp, #4]
1189:main.c        ****     SdramTiming.SelfRefreshTime = 4;
 1595              		.loc 1 1189 0
 1596 0036 0722     		movs	r2, #7
 1597 0038 0292     		str	r2, [sp, #8]
1190:main.c        ****     SdramTiming.RowCycleDelay = 7;
 1598              		.loc 1 1190 0
 1599 003a 0391     		str	r1, [sp, #12]
1191:main.c        ****     SdramTiming.WriteRecoveryTime = 3;
 1600              		.loc 1 1191 0
 1601 003c 0492     		str	r2, [sp, #16]
1192:main.c        ****     SdramTiming.RPDelay = 2;
 1602              		.loc 1 1192 0
 1603 003e 0322     		movs	r2, #3
 1604 0040 0592     		str	r2, [sp, #20]
1193:main.c        ****     SdramTiming.RCDDelay = 2;
 1605              		.loc 1 1193 0
 1606 0042 0693     		str	r3, [sp, #24]
1194:main.c        **** 
 1607              		.loc 1 1194 0
 1608 0044 0793     		str	r3, [sp, #28]
1196:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1609              		.loc 1 1196 0
 1610 0046 6944     		add	r1, sp, r1
 1611 0048 FFF7FEFF 		bl	HAL_SDRAM_Init
 1612              	.LVL115:
 1613 004c 10B9     		cbnz	r0, .L113
1200:main.c        **** 
 1614              		.loc 1 1200 0
 1615 004e 09B0     		add	sp, sp, #36
 1616              	.LCFI19:
 1617              		.cfi_remember_state
 1618              		.cfi_def_cfa_offset 4
 1619              		@ sp needed
 1620 0050 5DF804FB 		ldr	pc, [sp], #4
 1621              	.L113:
 1622              	.LCFI20:
 1623              		.cfi_restore_state
1197:main.c        ****     }
 1624              		.loc 1 1197 0
 1625 0054 40F2AD41 		movw	r1, #1197
 1626 0058 0348     		ldr	r0, .L114+8
 1627 005a FFF7FEFF 		bl	_Error_Handler
 1628              	.LVL116:
 1629              	.L115:
 1630 005e 00BF     		.align	2
 1631              	.L114:
 1632 0060 00000000 		.word	hsdram1
 1633 0064 400100A0 		.word	-1610612416
 1634 0068 00000000 		.word	.LC20
 1635              		.cfi_endproc
 1636              	.LFE188:
 1638              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1639              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 57


 1640              		.syntax unified
 1641              		.thumb
 1642              		.thumb_func
 1643              		.fpu fpv5-sp-d16
 1645              	MX_I2C1_Init:
 1646              	.LFB170:
 533:main.c        **** 
 1647              		.loc 1 533 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 1651 0000 08B5     		push	{r3, lr}
 1652              	.LCFI21:
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 3, -8
 1655              		.cfi_offset 14, -4
 535:main.c        ****     hi2c1.Init.Timing = 0x00C0EAFF;
 1656              		.loc 1 535 0
 1657 0002 1548     		ldr	r0, .L124
 1658 0004 154B     		ldr	r3, .L124+4
 1659 0006 0360     		str	r3, [r0]
 536:main.c        ****     hi2c1.Init.OwnAddress1 = 0;
 1660              		.loc 1 536 0
 1661 0008 154B     		ldr	r3, .L124+8
 1662 000a 4360     		str	r3, [r0, #4]
 537:main.c        ****     hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1663              		.loc 1 537 0
 1664 000c 0023     		movs	r3, #0
 1665 000e 8360     		str	r3, [r0, #8]
 538:main.c        ****     hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1666              		.loc 1 538 0
 1667 0010 0122     		movs	r2, #1
 1668 0012 C260     		str	r2, [r0, #12]
 539:main.c        ****     hi2c1.Init.OwnAddress2 = 0;
 1669              		.loc 1 539 0
 1670 0014 0361     		str	r3, [r0, #16]
 540:main.c        ****     hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1671              		.loc 1 540 0
 1672 0016 4361     		str	r3, [r0, #20]
 541:main.c        ****     hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1673              		.loc 1 541 0
 1674 0018 8361     		str	r3, [r0, #24]
 542:main.c        ****     hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1675              		.loc 1 542 0
 1676 001a C361     		str	r3, [r0, #28]
 543:main.c        ****     if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 1677              		.loc 1 543 0
 1678 001c 0362     		str	r3, [r0, #32]
 544:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1679              		.loc 1 544 0
 1680 001e FFF7FEFF 		bl	HAL_I2C_Init
 1681              	.LVL117:
 1682 0022 50B9     		cbnz	r0, .L121
 550:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1683              		.loc 1 550 0
 1684 0024 0021     		movs	r1, #0
 1685 0026 0C48     		ldr	r0, .L124
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 58


 1686 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1687              	.LVL118:
 1688 002c 50B9     		cbnz	r0, .L122
 556:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1689              		.loc 1 556 0
 1690 002e 0021     		movs	r1, #0
 1691 0030 0948     		ldr	r0, .L124
 1692 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1693              	.LVL119:
 1694 0036 50B9     		cbnz	r0, .L123
 1695 0038 08BD     		pop	{r3, pc}
 1696              	.L121:
 545:main.c        ****     }
 1697              		.loc 1 545 0
 1698 003a 40F22121 		movw	r1, #545
 1699 003e 0948     		ldr	r0, .L124+12
 1700 0040 FFF7FEFF 		bl	_Error_Handler
 1701              	.LVL120:
 1702              	.L122:
 551:main.c        ****     }
 1703              		.loc 1 551 0
 1704 0044 40F22721 		movw	r1, #551
 1705 0048 0648     		ldr	r0, .L124+12
 1706 004a FFF7FEFF 		bl	_Error_Handler
 1707              	.LVL121:
 1708              	.L123:
 557:main.c        ****     }
 1709              		.loc 1 557 0
 1710 004e 40F22D21 		movw	r1, #557
 1711 0052 0448     		ldr	r0, .L124+12
 1712 0054 FFF7FEFF 		bl	_Error_Handler
 1713              	.LVL122:
 1714              	.L125:
 1715              		.align	2
 1716              	.L124:
 1717 0058 00000000 		.word	hi2c1
 1718 005c 00540040 		.word	1073763328
 1719 0060 FFEAC000 		.word	12643071
 1720 0064 00000000 		.word	.LC20
 1721              		.cfi_endproc
 1722              	.LFE170:
 1724              		.section	.text.MX_I2C3_Init,"ax",%progbits
 1725              		.align	1
 1726              		.syntax unified
 1727              		.thumb
 1728              		.thumb_func
 1729              		.fpu fpv5-sp-d16
 1731              	MX_I2C3_Init:
 1732              	.LFB171:
 563:main.c        **** 
 1733              		.loc 1 563 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 0
 1736              		@ frame_needed = 0, uses_anonymous_args = 0
 1737 0000 08B5     		push	{r3, lr}
 1738              	.LCFI22:
 1739              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 59


 1740              		.cfi_offset 3, -8
 1741              		.cfi_offset 14, -4
 565:main.c        ****     hi2c3.Init.Timing = 0x00C0EAFF;
 1742              		.loc 1 565 0
 1743 0002 1548     		ldr	r0, .L134
 1744 0004 154B     		ldr	r3, .L134+4
 1745 0006 0360     		str	r3, [r0]
 566:main.c        ****     hi2c3.Init.OwnAddress1 = 0;
 1746              		.loc 1 566 0
 1747 0008 154B     		ldr	r3, .L134+8
 1748 000a 4360     		str	r3, [r0, #4]
 567:main.c        ****     hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1749              		.loc 1 567 0
 1750 000c 0023     		movs	r3, #0
 1751 000e 8360     		str	r3, [r0, #8]
 568:main.c        ****     hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1752              		.loc 1 568 0
 1753 0010 0122     		movs	r2, #1
 1754 0012 C260     		str	r2, [r0, #12]
 569:main.c        ****     hi2c3.Init.OwnAddress2 = 0;
 1755              		.loc 1 569 0
 1756 0014 0361     		str	r3, [r0, #16]
 570:main.c        ****     hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1757              		.loc 1 570 0
 1758 0016 4361     		str	r3, [r0, #20]
 571:main.c        ****     hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1759              		.loc 1 571 0
 1760 0018 8361     		str	r3, [r0, #24]
 572:main.c        ****     hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1761              		.loc 1 572 0
 1762 001a C361     		str	r3, [r0, #28]
 573:main.c        ****     if (HAL_I2C_Init(&hi2c3) != HAL_OK) {
 1763              		.loc 1 573 0
 1764 001c 0362     		str	r3, [r0, #32]
 574:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1765              		.loc 1 574 0
 1766 001e FFF7FEFF 		bl	HAL_I2C_Init
 1767              	.LVL123:
 1768 0022 50B9     		cbnz	r0, .L131
 580:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1769              		.loc 1 580 0
 1770 0024 0021     		movs	r1, #0
 1771 0026 0C48     		ldr	r0, .L134
 1772 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1773              	.LVL124:
 1774 002c 50B9     		cbnz	r0, .L132
 586:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1775              		.loc 1 586 0
 1776 002e 0021     		movs	r1, #0
 1777 0030 0948     		ldr	r0, .L134
 1778 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1779              	.LVL125:
 1780 0036 50B9     		cbnz	r0, .L133
 1781 0038 08BD     		pop	{r3, pc}
 1782              	.L131:
 575:main.c        ****     }
 1783              		.loc 1 575 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 60


 1784 003a 40F23F21 		movw	r1, #575
 1785 003e 0948     		ldr	r0, .L134+12
 1786 0040 FFF7FEFF 		bl	_Error_Handler
 1787              	.LVL126:
 1788              	.L132:
 581:main.c        ****     }
 1789              		.loc 1 581 0
 1790 0044 40F24521 		movw	r1, #581
 1791 0048 0648     		ldr	r0, .L134+12
 1792 004a FFF7FEFF 		bl	_Error_Handler
 1793              	.LVL127:
 1794              	.L133:
 587:main.c        ****     }
 1795              		.loc 1 587 0
 1796 004e 40F24B21 		movw	r1, #587
 1797 0052 0448     		ldr	r0, .L134+12
 1798 0054 FFF7FEFF 		bl	_Error_Handler
 1799              	.LVL128:
 1800              	.L135:
 1801              		.align	2
 1802              	.L134:
 1803 0058 00000000 		.word	hi2c3
 1804 005c 005C0040 		.word	1073765376
 1805 0060 FFEAC000 		.word	12643071
 1806 0064 00000000 		.word	.LC20
 1807              		.cfi_endproc
 1808              	.LFE171:
 1810              		.section	.text.MX_LTDC_Init,"ax",%progbits
 1811              		.align	1
 1812              		.syntax unified
 1813              		.thumb
 1814              		.thumb_func
 1815              		.fpu fpv5-sp-d16
 1817              	MX_LTDC_Init:
 1818              	.LFB172:
 593:main.c        **** 
 1819              		.loc 1 593 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 56
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 1823 0000 00B5     		push	{lr}
 1824              	.LCFI23:
 1825              		.cfi_def_cfa_offset 4
 1826              		.cfi_offset 14, -4
 1827 0002 8FB0     		sub	sp, sp, #60
 1828              	.LCFI24:
 1829              		.cfi_def_cfa_offset 64
 597:main.c        ****     hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 1830              		.loc 1 597 0
 1831 0004 2948     		ldr	r0, .L142
 1832 0006 2A4B     		ldr	r3, .L142+4
 1833 0008 0360     		str	r3, [r0]
 598:main.c        ****     hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 1834              		.loc 1 598 0
 1835 000a 0023     		movs	r3, #0
 1836 000c 4360     		str	r3, [r0, #4]
 599:main.c        ****     hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 61


 1837              		.loc 1 599 0
 1838 000e 8360     		str	r3, [r0, #8]
 600:main.c        ****     hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 1839              		.loc 1 600 0
 1840 0010 C360     		str	r3, [r0, #12]
 601:main.c        ****     hltdc.Init.HorizontalSync = 40;
 1841              		.loc 1 601 0
 1842 0012 0361     		str	r3, [r0, #16]
 602:main.c        ****     hltdc.Init.VerticalSync = 9;
 1843              		.loc 1 602 0
 1844 0014 2822     		movs	r2, #40
 1845 0016 4261     		str	r2, [r0, #20]
 603:main.c        ****     hltdc.Init.AccumulatedHBP = 53;
 1846              		.loc 1 603 0
 1847 0018 0922     		movs	r2, #9
 1848 001a 8261     		str	r2, [r0, #24]
 604:main.c        ****     hltdc.Init.AccumulatedVBP = 11;
 1849              		.loc 1 604 0
 1850 001c 3522     		movs	r2, #53
 1851 001e C261     		str	r2, [r0, #28]
 605:main.c        ****     hltdc.Init.AccumulatedActiveW = 533;
 1852              		.loc 1 605 0
 1853 0020 0B22     		movs	r2, #11
 1854 0022 0262     		str	r2, [r0, #32]
 606:main.c        ****     hltdc.Init.AccumulatedActiveH = 283;
 1855              		.loc 1 606 0
 1856 0024 40F21522 		movw	r2, #533
 1857 0028 4262     		str	r2, [r0, #36]
 607:main.c        ****     hltdc.Init.TotalWidth = 565;
 1858              		.loc 1 607 0
 1859 002a 40F21B12 		movw	r2, #283
 1860 002e 8262     		str	r2, [r0, #40]
 608:main.c        ****     hltdc.Init.TotalHeigh = 285;
 1861              		.loc 1 608 0
 1862 0030 40F23522 		movw	r2, #565
 1863 0034 C262     		str	r2, [r0, #44]
 609:main.c        ****     hltdc.Init.Backcolor.Blue = 0;
 1864              		.loc 1 609 0
 1865 0036 40F21D12 		movw	r2, #285
 1866 003a 0263     		str	r2, [r0, #48]
 610:main.c        ****     hltdc.Init.Backcolor.Green = 0;
 1867              		.loc 1 610 0
 1868 003c 80F83430 		strb	r3, [r0, #52]
 611:main.c        ****     hltdc.Init.Backcolor.Red = 0;
 1869              		.loc 1 611 0
 1870 0040 80F83530 		strb	r3, [r0, #53]
 612:main.c        ****     if (HAL_LTDC_Init(&hltdc) != HAL_OK) {
 1871              		.loc 1 612 0
 1872 0044 80F83630 		strb	r3, [r0, #54]
 613:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1873              		.loc 1 613 0
 1874 0048 FFF7FEFF 		bl	HAL_LTDC_Init
 1875              	.LVL129:
 1876 004c 20BB     		cbnz	r0, .L140
 617:main.c        ****     pLayerCfg.WindowX1 = 480;
 1877              		.loc 1 617 0
 1878 004e 0022     		movs	r2, #0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 62


 1879 0050 0192     		str	r2, [sp, #4]
 618:main.c        ****     pLayerCfg.WindowY0 = 0;
 1880              		.loc 1 618 0
 1881 0052 4FF4F071 		mov	r1, #480
 1882 0056 0291     		str	r1, [sp, #8]
 619:main.c        ****     pLayerCfg.WindowY1 = 272;
 1883              		.loc 1 619 0
 1884 0058 0392     		str	r2, [sp, #12]
 620:main.c        ****     pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 1885              		.loc 1 620 0
 1886 005a 4FF48873 		mov	r3, #272
 1887 005e 0493     		str	r3, [sp, #16]
 621:main.c        ****     pLayerCfg.Alpha = 255;
 1888              		.loc 1 621 0
 1889 0060 0592     		str	r2, [sp, #20]
 622:main.c        ****     pLayerCfg.Alpha0 = 0;
 1890              		.loc 1 622 0
 1891 0062 FF20     		movs	r0, #255
 1892 0064 0690     		str	r0, [sp, #24]
 623:main.c        ****     pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 1893              		.loc 1 623 0
 1894 0066 0792     		str	r2, [sp, #28]
 624:main.c        ****     pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 1895              		.loc 1 624 0
 1896 0068 4FF4C060 		mov	r0, #1536
 1897 006c 0890     		str	r0, [sp, #32]
 625:main.c        ****     pLayerCfg.FBStartAdress = 0xC0000000;
 1898              		.loc 1 625 0
 1899 006e 0720     		movs	r0, #7
 1900 0070 0990     		str	r0, [sp, #36]
 626:main.c        ****     pLayerCfg.ImageWidth = 480;
 1901              		.loc 1 626 0
 1902 0072 4FF04040 		mov	r0, #-1073741824
 1903 0076 0A90     		str	r0, [sp, #40]
 627:main.c        ****     pLayerCfg.ImageHeight = 272;
 1904              		.loc 1 627 0
 1905 0078 0B91     		str	r1, [sp, #44]
 628:main.c        ****     pLayerCfg.Backcolor.Blue = 0;
 1906              		.loc 1 628 0
 1907 007a 0C93     		str	r3, [sp, #48]
 629:main.c        ****     pLayerCfg.Backcolor.Green = 0;
 1908              		.loc 1 629 0
 1909 007c 8DF83420 		strb	r2, [sp, #52]
 630:main.c        ****     pLayerCfg.Backcolor.Red = 0;
 1910              		.loc 1 630 0
 1911 0080 8DF83520 		strb	r2, [sp, #53]
 631:main.c        ****     if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK) {
 1912              		.loc 1 631 0
 1913 0084 8DF83620 		strb	r2, [sp, #54]
 632:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1914              		.loc 1 632 0
 1915 0088 01A9     		add	r1, sp, #4
 1916 008a 0848     		ldr	r0, .L142
 1917 008c FFF7FEFF 		bl	HAL_LTDC_ConfigLayer
 1918              	.LVL130:
 1919 0090 38B9     		cbnz	r0, .L141
 636:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 63


 1920              		.loc 1 636 0
 1921 0092 0FB0     		add	sp, sp, #60
 1922              	.LCFI25:
 1923              		.cfi_remember_state
 1924              		.cfi_def_cfa_offset 4
 1925              		@ sp needed
 1926 0094 5DF804FB 		ldr	pc, [sp], #4
 1927              	.L140:
 1928              	.LCFI26:
 1929              		.cfi_restore_state
 614:main.c        ****     }
 1930              		.loc 1 614 0
 1931 0098 40F26621 		movw	r1, #614
 1932 009c 0548     		ldr	r0, .L142+8
 1933 009e FFF7FEFF 		bl	_Error_Handler
 1934              	.LVL131:
 1935              	.L141:
 633:main.c        ****     }
 1936              		.loc 1 633 0
 1937 00a2 40F27921 		movw	r1, #633
 1938 00a6 0348     		ldr	r0, .L142+8
 1939 00a8 FFF7FEFF 		bl	_Error_Handler
 1940              	.LVL132:
 1941              	.L143:
 1942              		.align	2
 1943              	.L142:
 1944 00ac 00000000 		.word	hltdc
 1945 00b0 00680140 		.word	1073833984
 1946 00b4 00000000 		.word	.LC20
 1947              		.cfi_endproc
 1948              	.LFE172:
 1950              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
 1951              		.align	1
 1952              		.syntax unified
 1953              		.thumb
 1954              		.thumb_func
 1955              		.fpu fpv5-sp-d16
 1957              	MX_QUADSPI_Init:
 1958              	.LFB173:
 639:main.c        **** 
 1959              		.loc 1 639 0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 0
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
 1963 0000 08B5     		push	{r3, lr}
 1964              	.LCFI27:
 1965              		.cfi_def_cfa_offset 8
 1966              		.cfi_offset 3, -8
 1967              		.cfi_offset 14, -4
 642:main.c        ****     hqspi.Init.ClockPrescaler = 255;
 1968              		.loc 1 642 0
 1969 0002 0B48     		ldr	r0, .L148
 1970 0004 0B4B     		ldr	r3, .L148+4
 1971 0006 0360     		str	r3, [r0]
 643:main.c        ****     hqspi.Init.FifoThreshold = 1;
 1972              		.loc 1 643 0
 1973 0008 FF23     		movs	r3, #255
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 64


 1974 000a 4360     		str	r3, [r0, #4]
 644:main.c        ****     hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 1975              		.loc 1 644 0
 1976 000c 0122     		movs	r2, #1
 1977 000e 8260     		str	r2, [r0, #8]
 645:main.c        ****     hqspi.Init.FlashSize = 1;
 1978              		.loc 1 645 0
 1979 0010 0023     		movs	r3, #0
 1980 0012 C360     		str	r3, [r0, #12]
 646:main.c        ****     hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 1981              		.loc 1 646 0
 1982 0014 0261     		str	r2, [r0, #16]
 647:main.c        ****     hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 1983              		.loc 1 647 0
 1984 0016 4361     		str	r3, [r0, #20]
 648:main.c        ****     hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 1985              		.loc 1 648 0
 1986 0018 8361     		str	r3, [r0, #24]
 649:main.c        ****     hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 1987              		.loc 1 649 0
 1988 001a C361     		str	r3, [r0, #28]
 650:main.c        ****     if (HAL_QSPI_Init(&hqspi) != HAL_OK) {
 1989              		.loc 1 650 0
 1990 001c 0362     		str	r3, [r0, #32]
 651:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 1991              		.loc 1 651 0
 1992 001e FFF7FEFF 		bl	HAL_QSPI_Init
 1993              	.LVL133:
 1994 0022 00B9     		cbnz	r0, .L147
 1995 0024 08BD     		pop	{r3, pc}
 1996              	.L147:
 652:main.c        ****     }
 1997              		.loc 1 652 0
 1998 0026 4FF42371 		mov	r1, #652
 1999 002a 0348     		ldr	r0, .L148+8
 2000 002c FFF7FEFF 		bl	_Error_Handler
 2001              	.LVL134:
 2002              	.L149:
 2003              		.align	2
 2004              	.L148:
 2005 0030 00000000 		.word	hqspi
 2006 0034 001000A0 		.word	-1610608640
 2007 0038 00000000 		.word	.LC20
 2008              		.cfi_endproc
 2009              	.LFE173:
 2011              		.section	.text.MX_RTC_Init,"ax",%progbits
 2012              		.align	1
 2013              		.syntax unified
 2014              		.thumb
 2015              		.thumb_func
 2016              		.fpu fpv5-sp-d16
 2018              	MX_RTC_Init:
 2019              	.LFB174:
 658:main.c        **** 
 2020              		.loc 1 658 0
 2021              		.cfi_startproc
 2022              		@ args = 0, pretend = 0, frame = 72
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 65


 2023              		@ frame_needed = 0, uses_anonymous_args = 0
 2024 0000 00B5     		push	{lr}
 2025              	.LCFI28:
 2026              		.cfi_def_cfa_offset 4
 2027              		.cfi_offset 14, -4
 2028 0002 93B0     		sub	sp, sp, #76
 2029              	.LCFI29:
 2030              		.cfi_def_cfa_offset 80
 674:main.c        ****     hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 2031              		.loc 1 674 0
 2032 0004 3C48     		ldr	r0, .L164
 2033 0006 3D4B     		ldr	r3, .L164+4
 2034 0008 0360     		str	r3, [r0]
 675:main.c        ****     hrtc.Init.AsynchPrediv = 127;
 2035              		.loc 1 675 0
 2036 000a 0023     		movs	r3, #0
 2037 000c 4360     		str	r3, [r0, #4]
 676:main.c        ****     hrtc.Init.SynchPrediv = 255;
 2038              		.loc 1 676 0
 2039 000e 7F22     		movs	r2, #127
 2040 0010 8260     		str	r2, [r0, #8]
 677:main.c        ****     hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 2041              		.loc 1 677 0
 2042 0012 FF22     		movs	r2, #255
 2043 0014 C260     		str	r2, [r0, #12]
 678:main.c        ****     hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 2044              		.loc 1 678 0
 2045 0016 0361     		str	r3, [r0, #16]
 679:main.c        ****     hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 2046              		.loc 1 679 0
 2047 0018 4361     		str	r3, [r0, #20]
 680:main.c        ****     if (HAL_RTC_Init(&hrtc) != HAL_OK) {
 2048              		.loc 1 680 0
 2049 001a 8361     		str	r3, [r0, #24]
 681:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2050              		.loc 1 681 0
 2051 001c FFF7FEFF 		bl	HAL_RTC_Init
 2052              	.LVL135:
 2053 0020 0028     		cmp	r0, #0
 2054 0022 4BD1     		bne	.L158
 687:main.c        ****     sTime.Minutes = 0x0;
 2055              		.loc 1 687 0
 2056 0024 0023     		movs	r3, #0
 2057 0026 8DF83030 		strb	r3, [sp, #48]
 688:main.c        ****     sTime.Seconds = 0x0;
 2058              		.loc 1 688 0
 2059 002a 8DF83130 		strb	r3, [sp, #49]
 689:main.c        ****     sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 2060              		.loc 1 689 0
 2061 002e 8DF83230 		strb	r3, [sp, #50]
 690:main.c        ****     sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 2062              		.loc 1 690 0
 2063 0032 1093     		str	r3, [sp, #64]
 691:main.c        ****     if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK) {
 2064              		.loc 1 691 0
 2065 0034 1193     		str	r3, [sp, #68]
 692:main.c        ****         _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 66


 2066              		.loc 1 692 0
 2067 0036 0122     		movs	r2, #1
 2068 0038 0CA9     		add	r1, sp, #48
 2069 003a 2F48     		ldr	r0, .L164
 2070 003c FFF7FEFF 		bl	HAL_RTC_SetTime
 2071              	.LVL136:
 2072 0040 0028     		cmp	r0, #0
 2073 0042 40D1     		bne	.L159
 696:main.c        ****     sDate.Month = RTC_MONTH_JANUARY;
 2074              		.loc 1 696 0
 2075 0044 0122     		movs	r2, #1
 2076 0046 8DF82C20 		strb	r2, [sp, #44]
 697:main.c        ****     sDate.Date = 0x1;
 2077              		.loc 1 697 0
 2078 004a 8DF82D20 		strb	r2, [sp, #45]
 698:main.c        ****     sDate.Year = 0x0;
 2079              		.loc 1 698 0
 2080 004e 8DF82E20 		strb	r2, [sp, #46]
 699:main.c        **** 
 2081              		.loc 1 699 0
 2082 0052 0023     		movs	r3, #0
 2083 0054 8DF82F30 		strb	r3, [sp, #47]
 701:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2084              		.loc 1 701 0
 2085 0058 0BA9     		add	r1, sp, #44
 2086 005a 2748     		ldr	r0, .L164
 2087 005c FFF7FEFF 		bl	HAL_RTC_SetDate
 2088              	.LVL137:
 2089 0060 0028     		cmp	r0, #0
 2090 0062 35D1     		bne	.L160
 707:main.c        ****     sAlarm.AlarmTime.Minutes = 0x0;
 2091              		.loc 1 707 0
 2092 0064 0023     		movs	r3, #0
 2093 0066 8DF80030 		strb	r3, [sp]
 708:main.c        ****     sAlarm.AlarmTime.Seconds = 0x0;
 2094              		.loc 1 708 0
 2095 006a 8DF80130 		strb	r3, [sp, #1]
 709:main.c        ****     sAlarm.AlarmTime.SubSeconds = 0x0;
 2096              		.loc 1 709 0
 2097 006e 8DF80230 		strb	r3, [sp, #2]
 710:main.c        ****     sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 2098              		.loc 1 710 0
 2099 0072 0193     		str	r3, [sp, #4]
 711:main.c        ****     sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 2100              		.loc 1 711 0
 2101 0074 0493     		str	r3, [sp, #16]
 712:main.c        ****     sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 2102              		.loc 1 712 0
 2103 0076 0593     		str	r3, [sp, #20]
 713:main.c        ****     sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 2104              		.loc 1 713 0
 2105 0078 0693     		str	r3, [sp, #24]
 714:main.c        ****     sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 2106              		.loc 1 714 0
 2107 007a 0793     		str	r3, [sp, #28]
 715:main.c        ****     sAlarm.AlarmDateWeekDay = 0x1;
 2108              		.loc 1 715 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 67


 2109 007c 0893     		str	r3, [sp, #32]
 716:main.c        ****     sAlarm.Alarm = RTC_ALARM_A;
 2110              		.loc 1 716 0
 2111 007e 0122     		movs	r2, #1
 2112 0080 8DF82420 		strb	r2, [sp, #36]
 717:main.c        ****     if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
 2113              		.loc 1 717 0
 2114 0084 4FF48073 		mov	r3, #256
 2115 0088 0A93     		str	r3, [sp, #40]
 718:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2116              		.loc 1 718 0
 2117 008a 6946     		mov	r1, sp
 2118 008c 1A48     		ldr	r0, .L164
 2119 008e FFF7FEFF 		bl	HAL_RTC_SetAlarm
 2120              	.LVL138:
 2121 0092 10BB     		cbnz	r0, .L161
 724:main.c        ****     sAlarm.Alarm = RTC_ALARM_B;
 2122              		.loc 1 724 0
 2123 0094 0122     		movs	r2, #1
 2124 0096 8DF82420 		strb	r2, [sp, #36]
 725:main.c        ****     if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
 2125              		.loc 1 725 0
 2126 009a 4FF40073 		mov	r3, #512
 2127 009e 0A93     		str	r3, [sp, #40]
 726:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2128              		.loc 1 726 0
 2129 00a0 6946     		mov	r1, sp
 2130 00a2 1548     		ldr	r0, .L164
 2131 00a4 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 2132              	.LVL139:
 2133 00a8 E0B9     		cbnz	r0, .L162
 732:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2134              		.loc 1 732 0
 2135 00aa 0222     		movs	r2, #2
 2136 00ac 0021     		movs	r1, #0
 2137 00ae 1248     		ldr	r0, .L164
 2138 00b0 FFF7FEFF 		bl	HAL_RTCEx_SetTimeStamp
 2139              	.LVL140:
 2140 00b4 D8B9     		cbnz	r0, .L163
 736:main.c        **** 
 2141              		.loc 1 736 0
 2142 00b6 13B0     		add	sp, sp, #76
 2143              	.LCFI30:
 2144              		.cfi_remember_state
 2145              		.cfi_def_cfa_offset 4
 2146              		@ sp needed
 2147 00b8 5DF804FB 		ldr	pc, [sp], #4
 2148              	.L158:
 2149              	.LCFI31:
 2150              		.cfi_restore_state
 682:main.c        ****     }
 2151              		.loc 1 682 0
 2152 00bc 40F2AA21 		movw	r1, #682
 2153 00c0 0F48     		ldr	r0, .L164+8
 2154 00c2 FFF7FEFF 		bl	_Error_Handler
 2155              	.LVL141:
 2156              	.L159:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 68


 693:main.c        ****     }
 2157              		.loc 1 693 0
 2158 00c6 40F2B521 		movw	r1, #693
 2159 00ca 0D48     		ldr	r0, .L164+8
 2160 00cc FFF7FEFF 		bl	_Error_Handler
 2161              	.LVL142:
 2162              	.L160:
 702:main.c        ****     }
 2163              		.loc 1 702 0
 2164 00d0 40F2BE21 		movw	r1, #702
 2165 00d4 0A48     		ldr	r0, .L164+8
 2166 00d6 FFF7FEFF 		bl	_Error_Handler
 2167              	.LVL143:
 2168              	.L161:
 719:main.c        ****     }
 2169              		.loc 1 719 0
 2170 00da 40F2CF21 		movw	r1, #719
 2171 00de 0848     		ldr	r0, .L164+8
 2172 00e0 FFF7FEFF 		bl	_Error_Handler
 2173              	.LVL144:
 2174              	.L162:
 727:main.c        ****     }
 2175              		.loc 1 727 0
 2176 00e4 40F2D721 		movw	r1, #727
 2177 00e8 0548     		ldr	r0, .L164+8
 2178 00ea FFF7FEFF 		bl	_Error_Handler
 2179              	.LVL145:
 2180              	.L163:
 733:main.c        ****     }
 2181              		.loc 1 733 0
 2182 00ee 40F2DD21 		movw	r1, #733
 2183 00f2 0348     		ldr	r0, .L164+8
 2184 00f4 FFF7FEFF 		bl	_Error_Handler
 2185              	.LVL146:
 2186              	.L165:
 2187              		.align	2
 2188              	.L164:
 2189 00f8 00000000 		.word	hrtc
 2190 00fc 00280040 		.word	1073752064
 2191 0100 00000000 		.word	.LC20
 2192              		.cfi_endproc
 2193              	.LFE174:
 2195              		.section	.text.MX_SAI2_Init,"ax",%progbits
 2196              		.align	1
 2197              		.syntax unified
 2198              		.thumb
 2199              		.thumb_func
 2200              		.fpu fpv5-sp-d16
 2202              	MX_SAI2_Init:
 2203              	.LFB175:
 739:main.c        **** 
 2204              		.loc 1 739 0
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 0
 2207              		@ frame_needed = 0, uses_anonymous_args = 0
 2208 0000 08B5     		push	{r3, lr}
 2209              	.LCFI32:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 69


 2210              		.cfi_def_cfa_offset 8
 2211              		.cfi_offset 3, -8
 2212              		.cfi_offset 14, -4
 741:main.c        ****     hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 2213              		.loc 1 741 0
 2214 0002 2648     		ldr	r0, .L172
 2215 0004 264B     		ldr	r3, .L172+4
 2216 0006 0360     		str	r3, [r0]
 742:main.c        ****     hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 2217              		.loc 1 742 0
 2218 0008 0023     		movs	r3, #0
 2219 000a 0363     		str	r3, [r0, #48]
 743:main.c        ****     hsai_BlockA2.Init.DataSize = SAI_DATASIZE_24;
 2220              		.loc 1 743 0
 2221 000c 4360     		str	r3, [r0, #4]
 744:main.c        ****     hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 2222              		.loc 1 744 0
 2223 000e C022     		movs	r2, #192
 2224 0010 4263     		str	r2, [r0, #52]
 745:main.c        ****     hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 2225              		.loc 1 745 0
 2226 0012 8363     		str	r3, [r0, #56]
 746:main.c        ****     hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 2227              		.loc 1 746 0
 2228 0014 C363     		str	r3, [r0, #60]
 747:main.c        ****     hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 2229              		.loc 1 747 0
 2230 0016 8360     		str	r3, [r0, #8]
 748:main.c        ****     hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 2231              		.loc 1 748 0
 2232 0018 0361     		str	r3, [r0, #16]
 749:main.c        ****     hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 2233              		.loc 1 749 0
 2234 001a 4361     		str	r3, [r0, #20]
 750:main.c        ****     hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 2235              		.loc 1 750 0
 2236 001c 8361     		str	r3, [r0, #24]
 751:main.c        ****     hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 2237              		.loc 1 751 0
 2238 001e 214A     		ldr	r2, .L172+8
 2239 0020 C261     		str	r2, [r0, #28]
 752:main.c        ****     hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 2240              		.loc 1 752 0
 2241 0022 C360     		str	r3, [r0, #12]
 753:main.c        ****     hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 2242              		.loc 1 753 0
 2243 0024 4362     		str	r3, [r0, #36]
 754:main.c        ****     hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 2244              		.loc 1 754 0
 2245 0026 8362     		str	r3, [r0, #40]
 755:main.c        ****     hsai_BlockA2.FrameInit.FrameLength = 8;
 2246              		.loc 1 755 0
 2247 0028 C362     		str	r3, [r0, #44]
 756:main.c        ****     hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 2248              		.loc 1 756 0
 2249 002a 0822     		movs	r2, #8
 2250 002c 0264     		str	r2, [r0, #64]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 70


 757:main.c        ****     hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 2251              		.loc 1 757 0
 2252 002e 0122     		movs	r2, #1
 2253 0030 4264     		str	r2, [r0, #68]
 758:main.c        ****     hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 2254              		.loc 1 758 0
 2255 0032 8364     		str	r3, [r0, #72]
 759:main.c        ****     hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 2256              		.loc 1 759 0
 2257 0034 C364     		str	r3, [r0, #76]
 760:main.c        ****     hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 2258              		.loc 1 760 0
 2259 0036 0365     		str	r3, [r0, #80]
 761:main.c        ****     hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 2260              		.loc 1 761 0
 2261 0038 4365     		str	r3, [r0, #84]
 762:main.c        ****     hsai_BlockA2.SlotInit.SlotNumber = 1;
 2262              		.loc 1 762 0
 2263 003a 8365     		str	r3, [r0, #88]
 763:main.c        ****     hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 2264              		.loc 1 763 0
 2265 003c C265     		str	r2, [r0, #92]
 764:main.c        ****     if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK) {
 2266              		.loc 1 764 0
 2267 003e 0366     		str	r3, [r0, #96]
 765:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2268              		.loc 1 765 0
 2269 0040 FFF7FEFF 		bl	HAL_SAI_Init
 2270              	.LVL147:
 2271 0044 00BB     		cbnz	r0, .L170
 769:main.c        ****     hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 2272              		.loc 1 769 0
 2273 0046 1848     		ldr	r0, .L172+12
 2274 0048 184B     		ldr	r3, .L172+16
 2275 004a 0360     		str	r3, [r0]
 770:main.c        ****     hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 2276              		.loc 1 770 0
 2277 004c 0023     		movs	r3, #0
 2278 004e 0363     		str	r3, [r0, #48]
 771:main.c        ****     hsai_BlockB2.Init.DataSize = SAI_DATASIZE_24;
 2279              		.loc 1 771 0
 2280 0050 0322     		movs	r2, #3
 2281 0052 4260     		str	r2, [r0, #4]
 772:main.c        ****     hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 2282              		.loc 1 772 0
 2283 0054 C022     		movs	r2, #192
 2284 0056 4263     		str	r2, [r0, #52]
 773:main.c        ****     hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 2285              		.loc 1 773 0
 2286 0058 8363     		str	r3, [r0, #56]
 774:main.c        ****     hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 2287              		.loc 1 774 0
 2288 005a C363     		str	r3, [r0, #60]
 775:main.c        ****     hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 2289              		.loc 1 775 0
 2290 005c 0122     		movs	r2, #1
 2291 005e 8260     		str	r2, [r0, #8]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 71


 776:main.c        ****     hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 2292              		.loc 1 776 0
 2293 0060 0361     		str	r3, [r0, #16]
 777:main.c        ****     hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 2294              		.loc 1 777 0
 2295 0062 8361     		str	r3, [r0, #24]
 778:main.c        ****     hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 2296              		.loc 1 778 0
 2297 0064 C360     		str	r3, [r0, #12]
 779:main.c        ****     hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 2298              		.loc 1 779 0
 2299 0066 4362     		str	r3, [r0, #36]
 780:main.c        ****     hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 2300              		.loc 1 780 0
 2301 0068 8362     		str	r3, [r0, #40]
 781:main.c        ****     hsai_BlockB2.FrameInit.FrameLength = 8;
 2302              		.loc 1 781 0
 2303 006a C362     		str	r3, [r0, #44]
 782:main.c        ****     hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 2304              		.loc 1 782 0
 2305 006c 0821     		movs	r1, #8
 2306 006e 0164     		str	r1, [r0, #64]
 783:main.c        ****     hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 2307              		.loc 1 783 0
 2308 0070 4264     		str	r2, [r0, #68]
 784:main.c        ****     hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 2309              		.loc 1 784 0
 2310 0072 8364     		str	r3, [r0, #72]
 785:main.c        ****     hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 2311              		.loc 1 785 0
 2312 0074 C364     		str	r3, [r0, #76]
 786:main.c        ****     hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 2313              		.loc 1 786 0
 2314 0076 0365     		str	r3, [r0, #80]
 787:main.c        ****     hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 2315              		.loc 1 787 0
 2316 0078 4365     		str	r3, [r0, #84]
 788:main.c        ****     hsai_BlockB2.SlotInit.SlotNumber = 1;
 2317              		.loc 1 788 0
 2318 007a 8365     		str	r3, [r0, #88]
 789:main.c        ****     hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 2319              		.loc 1 789 0
 2320 007c C265     		str	r2, [r0, #92]
 790:main.c        ****     if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK) {
 2321              		.loc 1 790 0
 2322 007e 0366     		str	r3, [r0, #96]
 791:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2323              		.loc 1 791 0
 2324 0080 FFF7FEFF 		bl	HAL_SAI_Init
 2325              	.LVL148:
 2326 0084 28B9     		cbnz	r0, .L171
 2327 0086 08BD     		pop	{r3, pc}
 2328              	.L170:
 766:main.c        ****     }
 2329              		.loc 1 766 0
 2330 0088 40F2FE21 		movw	r1, #766
 2331 008c 0848     		ldr	r0, .L172+20
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 72


 2332 008e FFF7FEFF 		bl	_Error_Handler
 2333              	.LVL149:
 2334              	.L171:
 792:main.c        ****     }
 2335              		.loc 1 792 0
 2336 0092 4FF44671 		mov	r1, #792
 2337 0096 0648     		ldr	r0, .L172+20
 2338 0098 FFF7FEFF 		bl	_Error_Handler
 2339              	.LVL150:
 2340              	.L173:
 2341              		.align	2
 2342              	.L172:
 2343 009c 00000000 		.word	hsai_BlockA2
 2344 00a0 045C0140 		.word	1073830916
 2345 00a4 00EE0200 		.word	192000
 2346 00a8 00000000 		.word	hsai_BlockB2
 2347 00ac 245C0140 		.word	1073830948
 2348 00b0 00000000 		.word	.LC20
 2349              		.cfi_endproc
 2350              	.LFE175:
 2352              		.section	.text.MX_SPDIFRX_Init,"ax",%progbits
 2353              		.align	1
 2354              		.syntax unified
 2355              		.thumb
 2356              		.thumb_func
 2357              		.fpu fpv5-sp-d16
 2359              	MX_SPDIFRX_Init:
 2360              	.LFB177:
 811:main.c        **** 
 2361              		.loc 1 811 0
 2362              		.cfi_startproc
 2363              		@ args = 0, pretend = 0, frame = 0
 2364              		@ frame_needed = 0, uses_anonymous_args = 0
 2365 0000 08B5     		push	{r3, lr}
 2366              	.LCFI33:
 2367              		.cfi_def_cfa_offset 8
 2368              		.cfi_offset 3, -8
 2369              		.cfi_offset 14, -4
 813:main.c        ****     hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 2370              		.loc 1 813 0
 2371 0002 0C48     		ldr	r0, .L178
 2372 0004 4FF04023 		mov	r3, #1073758208
 2373 0008 0360     		str	r3, [r0]
 814:main.c        ****     hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 2374              		.loc 1 814 0
 2375 000a 0023     		movs	r3, #0
 2376 000c 4360     		str	r3, [r0, #4]
 815:main.c        ****     hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 2377              		.loc 1 815 0
 2378 000e 8360     		str	r3, [r0, #8]
 816:main.c        ****     hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 2379              		.loc 1 816 0
 2380 0010 C360     		str	r3, [r0, #12]
 817:main.c        ****     hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 2381              		.loc 1 817 0
 2382 0012 0361     		str	r3, [r0, #16]
 818:main.c        ****     hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 73


 2383              		.loc 1 818 0
 2384 0014 4361     		str	r3, [r0, #20]
 819:main.c        ****     hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 2385              		.loc 1 819 0
 2386 0016 8361     		str	r3, [r0, #24]
 820:main.c        ****     hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 2387              		.loc 1 820 0
 2388 0018 C361     		str	r3, [r0, #28]
 821:main.c        ****     hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 2389              		.loc 1 821 0
 2390 001a 0362     		str	r3, [r0, #32]
 822:main.c        ****     hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 2391              		.loc 1 822 0
 2392 001c 4362     		str	r3, [r0, #36]
 823:main.c        ****     if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK) {
 2393              		.loc 1 823 0
 2394 001e 8362     		str	r3, [r0, #40]
 824:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2395              		.loc 1 824 0
 2396 0020 FFF7FEFF 		bl	HAL_SPDIFRX_Init
 2397              	.LVL151:
 2398 0024 00B9     		cbnz	r0, .L177
 2399 0026 08BD     		pop	{r3, pc}
 2400              	.L177:
 825:main.c        ****     }
 2401              		.loc 1 825 0
 2402 0028 40F23931 		movw	r1, #825
 2403 002c 0248     		ldr	r0, .L178+4
 2404 002e FFF7FEFF 		bl	_Error_Handler
 2405              	.LVL152:
 2406              	.L179:
 2407 0032 00BF     		.align	2
 2408              	.L178:
 2409 0034 00000000 		.word	hspdif
 2410 0038 00000000 		.word	.LC20
 2411              		.cfi_endproc
 2412              	.LFE177:
 2414              		.section	.text.MX_SPI2_Init,"ax",%progbits
 2415              		.align	1
 2416              		.syntax unified
 2417              		.thumb
 2418              		.thumb_func
 2419              		.fpu fpv5-sp-d16
 2421              	MX_SPI2_Init:
 2422              	.LFB178:
 831:main.c        **** 
 2423              		.loc 1 831 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 0
 2426              		@ frame_needed = 0, uses_anonymous_args = 0
 2427 0000 08B5     		push	{r3, lr}
 2428              	.LCFI34:
 2429              		.cfi_def_cfa_offset 8
 2430              		.cfi_offset 3, -8
 2431              		.cfi_offset 14, -4
 834:main.c        ****     hspi2.Init.Mode = SPI_MODE_MASTER;
 2432              		.loc 1 834 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 74


 2433 0002 1148     		ldr	r0, .L184
 2434 0004 114B     		ldr	r3, .L184+4
 2435 0006 0360     		str	r3, [r0]
 835:main.c        ****     hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2436              		.loc 1 835 0
 2437 0008 4FF48273 		mov	r3, #260
 2438 000c 4360     		str	r3, [r0, #4]
 836:main.c        ****     hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 2439              		.loc 1 836 0
 2440 000e 0023     		movs	r3, #0
 2441 0010 8360     		str	r3, [r0, #8]
 837:main.c        ****     hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2442              		.loc 1 837 0
 2443 0012 4FF44072 		mov	r2, #768
 2444 0016 C260     		str	r2, [r0, #12]
 838:main.c        ****     hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2445              		.loc 1 838 0
 2446 0018 0361     		str	r3, [r0, #16]
 839:main.c        ****     hspi2.Init.NSS = SPI_NSS_SOFT;
 2447              		.loc 1 839 0
 2448 001a 4361     		str	r3, [r0, #20]
 840:main.c        ****     hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 2449              		.loc 1 840 0
 2450 001c 4FF40072 		mov	r2, #512
 2451 0020 8261     		str	r2, [r0, #24]
 841:main.c        ****     hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2452              		.loc 1 841 0
 2453 0022 C361     		str	r3, [r0, #28]
 842:main.c        ****     hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2454              		.loc 1 842 0
 2455 0024 0362     		str	r3, [r0, #32]
 843:main.c        ****     hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2456              		.loc 1 843 0
 2457 0026 4362     		str	r3, [r0, #36]
 844:main.c        ****     hspi2.Init.CRCPolynomial = 7;
 2458              		.loc 1 844 0
 2459 0028 8362     		str	r3, [r0, #40]
 845:main.c        ****     hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2460              		.loc 1 845 0
 2461 002a 0722     		movs	r2, #7
 2462 002c C262     		str	r2, [r0, #44]
 846:main.c        ****     hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2463              		.loc 1 846 0
 2464 002e 0363     		str	r3, [r0, #48]
 847:main.c        ****     if (HAL_SPI_Init(&hspi2) != HAL_OK) {
 2465              		.loc 1 847 0
 2466 0030 0823     		movs	r3, #8
 2467 0032 4363     		str	r3, [r0, #52]
 848:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2468              		.loc 1 848 0
 2469 0034 FFF7FEFF 		bl	HAL_SPI_Init
 2470              	.LVL153:
 2471 0038 00B9     		cbnz	r0, .L183
 2472 003a 08BD     		pop	{r3, pc}
 2473              	.L183:
 849:main.c        ****     }
 2474              		.loc 1 849 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 75


 2475 003c 40F25131 		movw	r1, #849
 2476 0040 0348     		ldr	r0, .L184+8
 2477 0042 FFF7FEFF 		bl	_Error_Handler
 2478              	.LVL154:
 2479              	.L185:
 2480 0046 00BF     		.align	2
 2481              	.L184:
 2482 0048 00000000 		.word	hspi2
 2483 004c 00380040 		.word	1073756160
 2484 0050 00000000 		.word	.LC20
 2485              		.cfi_endproc
 2486              	.LFE178:
 2488              		.section	.text.MX_TIM1_Init,"ax",%progbits
 2489              		.align	1
 2490              		.syntax unified
 2491              		.thumb
 2492              		.thumb_func
 2493              		.fpu fpv5-sp-d16
 2495              	MX_TIM1_Init:
 2496              	.LFB179:
 855:main.c        **** 
 2497              		.loc 1 855 0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 104
 2500              		@ frame_needed = 0, uses_anonymous_args = 0
 2501 0000 00B5     		push	{lr}
 2502              	.LCFI35:
 2503              		.cfi_def_cfa_offset 4
 2504              		.cfi_offset 14, -4
 2505 0002 9BB0     		sub	sp, sp, #108
 2506              	.LCFI36:
 2507              		.cfi_def_cfa_offset 112
 862:main.c        ****     htim1.Init.Prescaler = 0;
 2508              		.loc 1 862 0
 2509 0004 3748     		ldr	r0, .L200
 2510 0006 384B     		ldr	r3, .L200+4
 2511 0008 0360     		str	r3, [r0]
 863:main.c        ****     htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 2512              		.loc 1 863 0
 2513 000a 0023     		movs	r3, #0
 2514 000c 4360     		str	r3, [r0, #4]
 864:main.c        ****     htim1.Init.Period = 0;
 2515              		.loc 1 864 0
 2516 000e 8360     		str	r3, [r0, #8]
 865:main.c        ****     htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2517              		.loc 1 865 0
 2518 0010 C360     		str	r3, [r0, #12]
 866:main.c        ****     htim1.Init.RepetitionCounter = 0;
 2519              		.loc 1 866 0
 2520 0012 0361     		str	r3, [r0, #16]
 867:main.c        ****     htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2521              		.loc 1 867 0
 2522 0014 4361     		str	r3, [r0, #20]
 868:main.c        ****     if (HAL_TIM_Base_Init(&htim1) != HAL_OK) {
 2523              		.loc 1 868 0
 2524 0016 8361     		str	r3, [r0, #24]
 869:main.c        ****         _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 76


 2525              		.loc 1 869 0
 2526 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2527              	.LVL155:
 2528 001c 0028     		cmp	r0, #0
 2529 001e 42D1     		bne	.L194
 873:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK) {
 2530              		.loc 1 873 0
 2531 0020 1AA9     		add	r1, sp, #104
 2532 0022 4FF48053 		mov	r3, #4096
 2533 0026 41F8103D 		str	r3, [r1, #-16]!
 874:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2534              		.loc 1 874 0
 2535 002a 2E48     		ldr	r0, .L200
 2536 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2537              	.LVL156:
 2538 0030 0028     		cmp	r0, #0
 2539 0032 3DD1     		bne	.L195
 878:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2540              		.loc 1 878 0
 2541 0034 2B48     		ldr	r0, .L200
 2542 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2543              	.LVL157:
 2544 003a 0028     		cmp	r0, #0
 2545 003c 3DD1     		bne	.L196
 882:main.c        ****     sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2546              		.loc 1 882 0
 2547 003e 0023     		movs	r3, #0
 2548 0040 1393     		str	r3, [sp, #76]
 883:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2549              		.loc 1 883 0
 2550 0042 1493     		str	r3, [sp, #80]
 884:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK) {
 2551              		.loc 1 884 0
 2552 0044 1593     		str	r3, [sp, #84]
 885:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2553              		.loc 1 885 0
 2554 0046 13A9     		add	r1, sp, #76
 2555 0048 2648     		ldr	r0, .L200
 2556 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2557              	.LVL158:
 2558 004e 0028     		cmp	r0, #0
 2559 0050 38D1     		bne	.L197
 889:main.c        ****     sConfigOC.Pulse = 0;
 2560              		.loc 1 889 0
 2561 0052 6023     		movs	r3, #96
 2562 0054 0C93     		str	r3, [sp, #48]
 890:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2563              		.loc 1 890 0
 2564 0056 0022     		movs	r2, #0
 2565 0058 0D92     		str	r2, [sp, #52]
 891:main.c        ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2566              		.loc 1 891 0
 2567 005a 0E92     		str	r2, [sp, #56]
 892:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2568              		.loc 1 892 0
 2569 005c 0F92     		str	r2, [sp, #60]
 893:main.c        ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 77


 2570              		.loc 1 893 0
 2571 005e 1092     		str	r2, [sp, #64]
 894:main.c        ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2572              		.loc 1 894 0
 2573 0060 1192     		str	r2, [sp, #68]
 895:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 2574              		.loc 1 895 0
 2575 0062 1292     		str	r2, [sp, #72]
 896:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2576              		.loc 1 896 0
 2577 0064 0CA9     		add	r1, sp, #48
 2578 0066 1F48     		ldr	r0, .L200
 2579 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2580              	.LVL159:
 2581 006c 0028     		cmp	r0, #0
 2582 006e 2ED1     		bne	.L198
 900:main.c        ****     sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2583              		.loc 1 900 0
 2584 0070 0023     		movs	r3, #0
 2585 0072 0193     		str	r3, [sp, #4]
 901:main.c        ****     sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2586              		.loc 1 901 0
 2587 0074 0293     		str	r3, [sp, #8]
 902:main.c        ****     sBreakDeadTimeConfig.DeadTime = 0;
 2588              		.loc 1 902 0
 2589 0076 0393     		str	r3, [sp, #12]
 903:main.c        ****     sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2590              		.loc 1 903 0
 2591 0078 0493     		str	r3, [sp, #16]
 904:main.c        ****     sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2592              		.loc 1 904 0
 2593 007a 0593     		str	r3, [sp, #20]
 905:main.c        ****     sBreakDeadTimeConfig.BreakFilter = 0;
 2594              		.loc 1 905 0
 2595 007c 4FF40052 		mov	r2, #8192
 2596 0080 0692     		str	r2, [sp, #24]
 906:main.c        ****     sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 2597              		.loc 1 906 0
 2598 0082 0793     		str	r3, [sp, #28]
 907:main.c        ****     sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 2599              		.loc 1 907 0
 2600 0084 0893     		str	r3, [sp, #32]
 908:main.c        ****     sBreakDeadTimeConfig.Break2Filter = 0;
 2601              		.loc 1 908 0
 2602 0086 4FF00072 		mov	r2, #33554432
 2603 008a 0992     		str	r2, [sp, #36]
 909:main.c        ****     sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2604              		.loc 1 909 0
 2605 008c 0A93     		str	r3, [sp, #40]
 910:main.c        ****     if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK) {
 2606              		.loc 1 910 0
 2607 008e 0B93     		str	r3, [sp, #44]
 911:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2608              		.loc 1 911 0
 2609 0090 01A9     		add	r1, sp, #4
 2610 0092 1448     		ldr	r0, .L200
 2611 0094 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 78


 2612              	.LVL160:
 2613 0098 F0B9     		cbnz	r0, .L199
 915:main.c        **** 
 2614              		.loc 1 915 0
 2615 009a 1248     		ldr	r0, .L200
 2616 009c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2617              	.LVL161:
 917:main.c        **** 
 2618              		.loc 1 917 0
 2619 00a0 1BB0     		add	sp, sp, #108
 2620              	.LCFI37:
 2621              		.cfi_remember_state
 2622              		.cfi_def_cfa_offset 4
 2623              		@ sp needed
 2624 00a2 5DF804FB 		ldr	pc, [sp], #4
 2625              	.L194:
 2626              	.LCFI38:
 2627              		.cfi_restore_state
 870:main.c        ****     }
 2628              		.loc 1 870 0
 2629 00a6 40F26631 		movw	r1, #870
 2630 00aa 1048     		ldr	r0, .L200+8
 2631 00ac FFF7FEFF 		bl	_Error_Handler
 2632              	.LVL162:
 2633              	.L195:
 875:main.c        ****     }
 2634              		.loc 1 875 0
 2635 00b0 40F26B31 		movw	r1, #875
 2636 00b4 0D48     		ldr	r0, .L200+8
 2637 00b6 FFF7FEFF 		bl	_Error_Handler
 2638              	.LVL163:
 2639              	.L196:
 879:main.c        ****     }
 2640              		.loc 1 879 0
 2641 00ba 40F26F31 		movw	r1, #879
 2642 00be 0B48     		ldr	r0, .L200+8
 2643 00c0 FFF7FEFF 		bl	_Error_Handler
 2644              	.LVL164:
 2645              	.L197:
 886:main.c        ****     }
 2646              		.loc 1 886 0
 2647 00c4 40F27631 		movw	r1, #886
 2648 00c8 0848     		ldr	r0, .L200+8
 2649 00ca FFF7FEFF 		bl	_Error_Handler
 2650              	.LVL165:
 2651              	.L198:
 897:main.c        ****     }
 2652              		.loc 1 897 0
 2653 00ce 40F28131 		movw	r1, #897
 2654 00d2 0648     		ldr	r0, .L200+8
 2655 00d4 FFF7FEFF 		bl	_Error_Handler
 2656              	.LVL166:
 2657              	.L199:
 912:main.c        ****     }
 2658              		.loc 1 912 0
 2659 00d8 4FF46471 		mov	r1, #912
 2660 00dc 0348     		ldr	r0, .L200+8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 79


 2661 00de FFF7FEFF 		bl	_Error_Handler
 2662              	.LVL167:
 2663              	.L201:
 2664 00e2 00BF     		.align	2
 2665              	.L200:
 2666 00e4 00000000 		.word	htim1
 2667 00e8 00000140 		.word	1073807360
 2668 00ec 00000000 		.word	.LC20
 2669              		.cfi_endproc
 2670              	.LFE179:
 2672              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2673              		.align	1
 2674              		.syntax unified
 2675              		.thumb
 2676              		.thumb_func
 2677              		.fpu fpv5-sp-d16
 2679              	MX_TIM2_Init:
 2680              	.LFB180:
 920:main.c        **** 
 2681              		.loc 1 920 0
 2682              		.cfi_startproc
 2683              		@ args = 0, pretend = 0, frame = 56
 2684              		@ frame_needed = 0, uses_anonymous_args = 0
 2685 0000 00B5     		push	{lr}
 2686              	.LCFI39:
 2687              		.cfi_def_cfa_offset 4
 2688              		.cfi_offset 14, -4
 2689 0002 8FB0     		sub	sp, sp, #60
 2690              	.LCFI40:
 2691              		.cfi_def_cfa_offset 64
 926:main.c        ****     htim2.Init.Prescaler = 0;
 2692              		.loc 1 926 0
 2693 0004 2548     		ldr	r0, .L214
 2694 0006 4FF08043 		mov	r3, #1073741824
 2695 000a 0360     		str	r3, [r0]
 927:main.c        ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2696              		.loc 1 927 0
 2697 000c 0023     		movs	r3, #0
 2698 000e 4360     		str	r3, [r0, #4]
 928:main.c        ****     htim2.Init.Period = 0;
 2699              		.loc 1 928 0
 2700 0010 8360     		str	r3, [r0, #8]
 929:main.c        ****     htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2701              		.loc 1 929 0
 2702 0012 C360     		str	r3, [r0, #12]
 930:main.c        ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2703              		.loc 1 930 0
 2704 0014 0361     		str	r3, [r0, #16]
 931:main.c        ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 2705              		.loc 1 931 0
 2706 0016 8361     		str	r3, [r0, #24]
 932:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2707              		.loc 1 932 0
 2708 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2709              	.LVL168:
 2710 001c 28BB     		cbnz	r0, .L209
 936:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 80


 2711              		.loc 1 936 0
 2712 001e 0EA9     		add	r1, sp, #56
 2713 0020 4FF48053 		mov	r3, #4096
 2714 0024 41F8103D 		str	r3, [r1, #-16]!
 937:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2715              		.loc 1 937 0
 2716 0028 1C48     		ldr	r0, .L214
 2717 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2718              	.LVL169:
 2719 002e 08BB     		cbnz	r0, .L210
 941:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2720              		.loc 1 941 0
 2721 0030 1A48     		ldr	r0, .L214
 2722 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2723              	.LVL170:
 2724 0036 10BB     		cbnz	r0, .L211
 945:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2725              		.loc 1 945 0
 2726 0038 0023     		movs	r3, #0
 2727 003a 0793     		str	r3, [sp, #28]
 946:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 2728              		.loc 1 946 0
 2729 003c 0993     		str	r3, [sp, #36]
 947:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2730              		.loc 1 947 0
 2731 003e 07A9     		add	r1, sp, #28
 2732 0040 1648     		ldr	r0, .L214
 2733 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2734              	.LVL171:
 2735 0046 F8B9     		cbnz	r0, .L212
 951:main.c        ****     sConfigOC.Pulse = 0;
 2736              		.loc 1 951 0
 2737 0048 6023     		movs	r3, #96
 2738 004a 0093     		str	r3, [sp]
 952:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2739              		.loc 1 952 0
 2740 004c 0022     		movs	r2, #0
 2741 004e 0192     		str	r2, [sp, #4]
 953:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2742              		.loc 1 953 0
 2743 0050 0292     		str	r2, [sp, #8]
 954:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 2744              		.loc 1 954 0
 2745 0052 0492     		str	r2, [sp, #16]
 955:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2746              		.loc 1 955 0
 2747 0054 6946     		mov	r1, sp
 2748 0056 1148     		ldr	r0, .L214
 2749 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2750              	.LVL172:
 2751 005c C8B9     		cbnz	r0, .L213
 959:main.c        **** 
 2752              		.loc 1 959 0
 2753 005e 0F48     		ldr	r0, .L214
 2754 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2755              	.LVL173:
 961:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 81


 2756              		.loc 1 961 0
 2757 0064 0FB0     		add	sp, sp, #60
 2758              	.LCFI41:
 2759              		.cfi_remember_state
 2760              		.cfi_def_cfa_offset 4
 2761              		@ sp needed
 2762 0066 5DF804FB 		ldr	pc, [sp], #4
 2763              	.L209:
 2764              	.LCFI42:
 2765              		.cfi_restore_state
 933:main.c        ****     }
 2766              		.loc 1 933 0
 2767 006a 40F2A531 		movw	r1, #933
 2768 006e 0C48     		ldr	r0, .L214+4
 2769 0070 FFF7FEFF 		bl	_Error_Handler
 2770              	.LVL174:
 2771              	.L210:
 938:main.c        ****     }
 2772              		.loc 1 938 0
 2773 0074 40F2AA31 		movw	r1, #938
 2774 0078 0948     		ldr	r0, .L214+4
 2775 007a FFF7FEFF 		bl	_Error_Handler
 2776              	.LVL175:
 2777              	.L211:
 942:main.c        ****     }
 2778              		.loc 1 942 0
 2779 007e 40F2AE31 		movw	r1, #942
 2780 0082 0748     		ldr	r0, .L214+4
 2781 0084 FFF7FEFF 		bl	_Error_Handler
 2782              	.LVL176:
 2783              	.L212:
 948:main.c        ****     }
 2784              		.loc 1 948 0
 2785 0088 4FF46D71 		mov	r1, #948
 2786 008c 0448     		ldr	r0, .L214+4
 2787 008e FFF7FEFF 		bl	_Error_Handler
 2788              	.LVL177:
 2789              	.L213:
 956:main.c        ****     }
 2790              		.loc 1 956 0
 2791 0092 4FF46F71 		mov	r1, #956
 2792 0096 0248     		ldr	r0, .L214+4
 2793 0098 FFF7FEFF 		bl	_Error_Handler
 2794              	.LVL178:
 2795              	.L215:
 2796              		.align	2
 2797              	.L214:
 2798 009c 00000000 		.word	htim2
 2799 00a0 00000000 		.word	.LC20
 2800              		.cfi_endproc
 2801              	.LFE180:
 2803              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2804              		.align	1
 2805              		.syntax unified
 2806              		.thumb
 2807              		.thumb_func
 2808              		.fpu fpv5-sp-d16
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 82


 2810              	MX_TIM3_Init:
 2811              	.LFB181:
 964:main.c        **** 
 2812              		.loc 1 964 0
 2813              		.cfi_startproc
 2814              		@ args = 0, pretend = 0, frame = 56
 2815              		@ frame_needed = 0, uses_anonymous_args = 0
 2816 0000 00B5     		push	{lr}
 2817              	.LCFI43:
 2818              		.cfi_def_cfa_offset 4
 2819              		.cfi_offset 14, -4
 2820 0002 8FB0     		sub	sp, sp, #60
 2821              	.LCFI44:
 2822              		.cfi_def_cfa_offset 64
 970:main.c        ****     htim3.Init.Prescaler = 0;
 2823              		.loc 1 970 0
 2824 0004 2548     		ldr	r0, .L228
 2825 0006 264B     		ldr	r3, .L228+4
 2826 0008 0360     		str	r3, [r0]
 971:main.c        ****     htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2827              		.loc 1 971 0
 2828 000a 0023     		movs	r3, #0
 2829 000c 4360     		str	r3, [r0, #4]
 972:main.c        ****     htim3.Init.Period = 0;
 2830              		.loc 1 972 0
 2831 000e 8360     		str	r3, [r0, #8]
 973:main.c        ****     htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2832              		.loc 1 973 0
 2833 0010 C360     		str	r3, [r0, #12]
 974:main.c        ****     htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2834              		.loc 1 974 0
 2835 0012 0361     		str	r3, [r0, #16]
 975:main.c        ****     if (HAL_TIM_Base_Init(&htim3) != HAL_OK) {
 2836              		.loc 1 975 0
 2837 0014 8361     		str	r3, [r0, #24]
 976:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2838              		.loc 1 976 0
 2839 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2840              	.LVL179:
 2841 001a 28BB     		cbnz	r0, .L223
 980:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK) {
 2842              		.loc 1 980 0
 2843 001c 0EA9     		add	r1, sp, #56
 2844 001e 4FF48053 		mov	r3, #4096
 2845 0022 41F8103D 		str	r3, [r1, #-16]!
 981:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2846              		.loc 1 981 0
 2847 0026 1D48     		ldr	r0, .L228
 2848 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2849              	.LVL180:
 2850 002c 08BB     		cbnz	r0, .L224
 985:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2851              		.loc 1 985 0
 2852 002e 1B48     		ldr	r0, .L228
 2853 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2854              	.LVL181:
 2855 0034 10BB     		cbnz	r0, .L225
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 83


 989:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2856              		.loc 1 989 0
 2857 0036 0023     		movs	r3, #0
 2858 0038 0793     		str	r3, [sp, #28]
 990:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK) {
 2859              		.loc 1 990 0
 2860 003a 0993     		str	r3, [sp, #36]
 991:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2861              		.loc 1 991 0
 2862 003c 07A9     		add	r1, sp, #28
 2863 003e 1748     		ldr	r0, .L228
 2864 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2865              	.LVL182:
 2866 0044 F8B9     		cbnz	r0, .L226
 995:main.c        ****     sConfigOC.Pulse = 0;
 2867              		.loc 1 995 0
 2868 0046 6023     		movs	r3, #96
 2869 0048 0093     		str	r3, [sp]
 996:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2870              		.loc 1 996 0
 2871 004a 0022     		movs	r2, #0
 2872 004c 0192     		str	r2, [sp, #4]
 997:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2873              		.loc 1 997 0
 2874 004e 0292     		str	r2, [sp, #8]
 998:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 2875              		.loc 1 998 0
 2876 0050 0492     		str	r2, [sp, #16]
 999:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2877              		.loc 1 999 0
 2878 0052 6946     		mov	r1, sp
 2879 0054 1148     		ldr	r0, .L228
 2880 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2881              	.LVL183:
 2882 005a C8B9     		cbnz	r0, .L227
1003:main.c        **** 
 2883              		.loc 1 1003 0
 2884 005c 0F48     		ldr	r0, .L228
 2885 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2886              	.LVL184:
1005:main.c        **** 
 2887              		.loc 1 1005 0
 2888 0062 0FB0     		add	sp, sp, #60
 2889              	.LCFI45:
 2890              		.cfi_remember_state
 2891              		.cfi_def_cfa_offset 4
 2892              		@ sp needed
 2893 0064 5DF804FB 		ldr	pc, [sp], #4
 2894              	.L223:
 2895              	.LCFI46:
 2896              		.cfi_restore_state
 977:main.c        ****     }
 2897              		.loc 1 977 0
 2898 0068 40F2D131 		movw	r1, #977
 2899 006c 0D48     		ldr	r0, .L228+8
 2900 006e FFF7FEFF 		bl	_Error_Handler
 2901              	.LVL185:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 84


 2902              	.L224:
 982:main.c        ****     }
 2903              		.loc 1 982 0
 2904 0072 40F2D631 		movw	r1, #982
 2905 0076 0B48     		ldr	r0, .L228+8
 2906 0078 FFF7FEFF 		bl	_Error_Handler
 2907              	.LVL186:
 2908              	.L225:
 986:main.c        ****     }
 2909              		.loc 1 986 0
 2910 007c 40F2DA31 		movw	r1, #986
 2911 0080 0848     		ldr	r0, .L228+8
 2912 0082 FFF7FEFF 		bl	_Error_Handler
 2913              	.LVL187:
 2914              	.L226:
 992:main.c        ****     }
 2915              		.loc 1 992 0
 2916 0086 4FF47871 		mov	r1, #992
 2917 008a 0648     		ldr	r0, .L228+8
 2918 008c FFF7FEFF 		bl	_Error_Handler
 2919              	.LVL188:
 2920              	.L227:
1000:main.c        ****     }
 2921              		.loc 1 1000 0
 2922 0090 4FF47A71 		mov	r1, #1000
 2923 0094 0348     		ldr	r0, .L228+8
 2924 0096 FFF7FEFF 		bl	_Error_Handler
 2925              	.LVL189:
 2926              	.L229:
 2927 009a 00BF     		.align	2
 2928              	.L228:
 2929 009c 00000000 		.word	htim3
 2930 00a0 00040040 		.word	1073742848
 2931 00a4 00000000 		.word	.LC20
 2932              		.cfi_endproc
 2933              	.LFE181:
 2935              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2936              		.align	1
 2937              		.syntax unified
 2938              		.thumb
 2939              		.thumb_func
 2940              		.fpu fpv5-sp-d16
 2942              	MX_TIM5_Init:
 2943              	.LFB182:
1008:main.c        **** 
 2944              		.loc 1 1008 0
 2945              		.cfi_startproc
 2946              		@ args = 0, pretend = 0, frame = 56
 2947              		@ frame_needed = 0, uses_anonymous_args = 0
 2948 0000 00B5     		push	{lr}
 2949              	.LCFI47:
 2950              		.cfi_def_cfa_offset 4
 2951              		.cfi_offset 14, -4
 2952 0002 8FB0     		sub	sp, sp, #60
 2953              	.LCFI48:
 2954              		.cfi_def_cfa_offset 64
1014:main.c        ****     htim5.Init.Prescaler = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 85


 2955              		.loc 1 1014 0
 2956 0004 2548     		ldr	r0, .L242
 2957 0006 264B     		ldr	r3, .L242+4
 2958 0008 0360     		str	r3, [r0]
1015:main.c        ****     htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2959              		.loc 1 1015 0
 2960 000a 0023     		movs	r3, #0
 2961 000c 4360     		str	r3, [r0, #4]
1016:main.c        ****     htim5.Init.Period = 0;
 2962              		.loc 1 1016 0
 2963 000e 8360     		str	r3, [r0, #8]
1017:main.c        ****     htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2964              		.loc 1 1017 0
 2965 0010 C360     		str	r3, [r0, #12]
1018:main.c        ****     htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2966              		.loc 1 1018 0
 2967 0012 0361     		str	r3, [r0, #16]
1019:main.c        ****     if (HAL_TIM_Base_Init(&htim5) != HAL_OK) {
 2968              		.loc 1 1019 0
 2969 0014 8361     		str	r3, [r0, #24]
1020:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2970              		.loc 1 1020 0
 2971 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2972              	.LVL190:
 2973 001a 30BB     		cbnz	r0, .L237
1024:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK) {
 2974              		.loc 1 1024 0
 2975 001c 0EA9     		add	r1, sp, #56
 2976 001e 4FF48053 		mov	r3, #4096
 2977 0022 41F8103D 		str	r3, [r1, #-16]!
1025:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2978              		.loc 1 1025 0
 2979 0026 1D48     		ldr	r0, .L242
 2980 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2981              	.LVL191:
 2982 002c 10BB     		cbnz	r0, .L238
1029:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2983              		.loc 1 1029 0
 2984 002e 1B48     		ldr	r0, .L242
 2985 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2986              	.LVL192:
 2987 0034 18BB     		cbnz	r0, .L239
1033:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2988              		.loc 1 1033 0
 2989 0036 0023     		movs	r3, #0
 2990 0038 0793     		str	r3, [sp, #28]
1034:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK) {
 2991              		.loc 1 1034 0
 2992 003a 0993     		str	r3, [sp, #36]
1035:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 2993              		.loc 1 1035 0
 2994 003c 07A9     		add	r1, sp, #28
 2995 003e 1748     		ldr	r0, .L242
 2996 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2997              	.LVL193:
 2998 0044 00BB     		cbnz	r0, .L240
1039:main.c        ****     sConfigOC.Pulse = 0;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 86


 2999              		.loc 1 1039 0
 3000 0046 6023     		movs	r3, #96
 3001 0048 0093     		str	r3, [sp]
1040:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 3002              		.loc 1 1040 0
 3003 004a 0023     		movs	r3, #0
 3004 004c 0193     		str	r3, [sp, #4]
1041:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 3005              		.loc 1 1041 0
 3006 004e 0293     		str	r3, [sp, #8]
1042:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK) {
 3007              		.loc 1 1042 0
 3008 0050 0493     		str	r3, [sp, #16]
1043:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3009              		.loc 1 1043 0
 3010 0052 0C22     		movs	r2, #12
 3011 0054 6946     		mov	r1, sp
 3012 0056 1148     		ldr	r0, .L242
 3013 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 3014              	.LVL194:
 3015 005c C8B9     		cbnz	r0, .L241
1047:main.c        **** 
 3016              		.loc 1 1047 0
 3017 005e 0F48     		ldr	r0, .L242
 3018 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 3019              	.LVL195:
1049:main.c        **** 
 3020              		.loc 1 1049 0
 3021 0064 0FB0     		add	sp, sp, #60
 3022              	.LCFI49:
 3023              		.cfi_remember_state
 3024              		.cfi_def_cfa_offset 4
 3025              		@ sp needed
 3026 0066 5DF804FB 		ldr	pc, [sp], #4
 3027              	.L237:
 3028              	.LCFI50:
 3029              		.cfi_restore_state
1021:main.c        ****     }
 3030              		.loc 1 1021 0
 3031 006a 40F2FD31 		movw	r1, #1021
 3032 006e 0D48     		ldr	r0, .L242+8
 3033 0070 FFF7FEFF 		bl	_Error_Handler
 3034              	.LVL196:
 3035              	.L238:
1026:main.c        ****     }
 3036              		.loc 1 1026 0
 3037 0074 40F20241 		movw	r1, #1026
 3038 0078 0A48     		ldr	r0, .L242+8
 3039 007a FFF7FEFF 		bl	_Error_Handler
 3040              	.LVL197:
 3041              	.L239:
1030:main.c        ****     }
 3042              		.loc 1 1030 0
 3043 007e 40F20641 		movw	r1, #1030
 3044 0082 0848     		ldr	r0, .L242+8
 3045 0084 FFF7FEFF 		bl	_Error_Handler
 3046              	.LVL198:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 87


 3047              	.L240:
1036:main.c        ****     }
 3048              		.loc 1 1036 0
 3049 0088 40F20C41 		movw	r1, #1036
 3050 008c 0548     		ldr	r0, .L242+8
 3051 008e FFF7FEFF 		bl	_Error_Handler
 3052              	.LVL199:
 3053              	.L241:
1044:main.c        ****     }
 3054              		.loc 1 1044 0
 3055 0092 40F21441 		movw	r1, #1044
 3056 0096 0348     		ldr	r0, .L242+8
 3057 0098 FFF7FEFF 		bl	_Error_Handler
 3058              	.LVL200:
 3059              	.L243:
 3060              		.align	2
 3061              	.L242:
 3062 009c 00000000 		.word	htim5
 3063 00a0 000C0040 		.word	1073744896
 3064 00a4 00000000 		.word	.LC20
 3065              		.cfi_endproc
 3066              	.LFE182:
 3068              		.section	.text.MX_TIM8_Init,"ax",%progbits
 3069              		.align	1
 3070              		.syntax unified
 3071              		.thumb
 3072              		.thumb_func
 3073              		.fpu fpv5-sp-d16
 3075              	MX_TIM8_Init:
 3076              	.LFB184:
1074:main.c        **** 
 3077              		.loc 1 1074 0
 3078              		.cfi_startproc
 3079              		@ args = 0, pretend = 0, frame = 32
 3080              		@ frame_needed = 0, uses_anonymous_args = 0
 3081 0000 00B5     		push	{lr}
 3082              	.LCFI51:
 3083              		.cfi_def_cfa_offset 4
 3084              		.cfi_offset 14, -4
 3085 0002 89B0     		sub	sp, sp, #36
 3086              	.LCFI52:
 3087              		.cfi_def_cfa_offset 40
1079:main.c        ****     htim8.Init.Prescaler = 0;
 3088              		.loc 1 1079 0
 3089 0004 1848     		ldr	r0, .L252
 3090 0006 194B     		ldr	r3, .L252+4
 3091 0008 0360     		str	r3, [r0]
1080:main.c        ****     htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 3092              		.loc 1 1080 0
 3093 000a 0023     		movs	r3, #0
 3094 000c 4360     		str	r3, [r0, #4]
1081:main.c        ****     htim8.Init.Period = 0;
 3095              		.loc 1 1081 0
 3096 000e 8360     		str	r3, [r0, #8]
1082:main.c        ****     htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3097              		.loc 1 1082 0
 3098 0010 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 88


1083:main.c        ****     htim8.Init.RepetitionCounter = 0;
 3099              		.loc 1 1083 0
 3100 0012 0361     		str	r3, [r0, #16]
1084:main.c        ****     htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3101              		.loc 1 1084 0
 3102 0014 4361     		str	r3, [r0, #20]
1085:main.c        ****     if (HAL_TIM_Base_Init(&htim8) != HAL_OK) {
 3103              		.loc 1 1085 0
 3104 0016 8361     		str	r3, [r0, #24]
1086:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3105              		.loc 1 1086 0
 3106 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 3107              	.LVL201:
 3108 001c A0B9     		cbnz	r0, .L249
1090:main.c        ****     if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK) {
 3109              		.loc 1 1090 0
 3110 001e 08A9     		add	r1, sp, #32
 3111 0020 4FF48053 		mov	r3, #4096
 3112 0024 41F8103D 		str	r3, [r1, #-16]!
1091:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3113              		.loc 1 1091 0
 3114 0028 0F48     		ldr	r0, .L252
 3115 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 3116              	.LVL202:
 3117 002e 80B9     		cbnz	r0, .L250
1095:main.c        ****     sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 3118              		.loc 1 1095 0
 3119 0030 0023     		movs	r3, #0
 3120 0032 0193     		str	r3, [sp, #4]
1096:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 3121              		.loc 1 1096 0
 3122 0034 0293     		str	r3, [sp, #8]
1097:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK) {
 3123              		.loc 1 1097 0
 3124 0036 0393     		str	r3, [sp, #12]
1098:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3125              		.loc 1 1098 0
 3126 0038 01A9     		add	r1, sp, #4
 3127 003a 0B48     		ldr	r0, .L252
 3128 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 3129              	.LVL203:
 3130 0040 60B9     		cbnz	r0, .L251
1102:main.c        **** 
 3131              		.loc 1 1102 0
 3132 0042 09B0     		add	sp, sp, #36
 3133              	.LCFI53:
 3134              		.cfi_remember_state
 3135              		.cfi_def_cfa_offset 4
 3136              		@ sp needed
 3137 0044 5DF804FB 		ldr	pc, [sp], #4
 3138              	.L249:
 3139              	.LCFI54:
 3140              		.cfi_restore_state
1087:main.c        ****     }
 3141              		.loc 1 1087 0
 3142 0048 40F23F41 		movw	r1, #1087
 3143 004c 0848     		ldr	r0, .L252+8
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 89


 3144 004e FFF7FEFF 		bl	_Error_Handler
 3145              	.LVL204:
 3146              	.L250:
1092:main.c        ****     }
 3147              		.loc 1 1092 0
 3148 0052 40F24441 		movw	r1, #1092
 3149 0056 0648     		ldr	r0, .L252+8
 3150 0058 FFF7FEFF 		bl	_Error_Handler
 3151              	.LVL205:
 3152              	.L251:
1099:main.c        ****     }
 3153              		.loc 1 1099 0
 3154 005c 40F24B41 		movw	r1, #1099
 3155 0060 0348     		ldr	r0, .L252+8
 3156 0062 FFF7FEFF 		bl	_Error_Handler
 3157              	.LVL206:
 3158              	.L253:
 3159 0066 00BF     		.align	2
 3160              	.L252:
 3161 0068 00000000 		.word	htim8
 3162 006c 00040140 		.word	1073808384
 3163 0070 00000000 		.word	.LC20
 3164              		.cfi_endproc
 3165              	.LFE184:
 3167              		.section	.text.MX_TIM12_Init,"ax",%progbits
 3168              		.align	1
 3169              		.syntax unified
 3170              		.thumb
 3171              		.thumb_func
 3172              		.fpu fpv5-sp-d16
 3174              	MX_TIM12_Init:
 3175              	.LFB185:
1105:main.c        **** 
 3176              		.loc 1 1105 0
 3177              		.cfi_startproc
 3178              		@ args = 0, pretend = 0, frame = 32
 3179              		@ frame_needed = 0, uses_anonymous_args = 0
 3180 0000 00B5     		push	{lr}
 3181              	.LCFI55:
 3182              		.cfi_def_cfa_offset 4
 3183              		.cfi_offset 14, -4
 3184 0002 89B0     		sub	sp, sp, #36
 3185              	.LCFI56:
 3186              		.cfi_def_cfa_offset 40
1109:main.c        ****     htim12.Init.Prescaler = 0;
 3187              		.loc 1 1109 0
 3188 0004 1348     		ldr	r0, .L260
 3189 0006 144B     		ldr	r3, .L260+4
 3190 0008 0360     		str	r3, [r0]
1110:main.c        ****     htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 3191              		.loc 1 1110 0
 3192 000a 0023     		movs	r3, #0
 3193 000c 4360     		str	r3, [r0, #4]
1111:main.c        ****     htim12.Init.Period = 0;
 3194              		.loc 1 1111 0
 3195 000e 8360     		str	r3, [r0, #8]
1112:main.c        ****     htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 90


 3196              		.loc 1 1112 0
 3197 0010 C360     		str	r3, [r0, #12]
1113:main.c        ****     htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3198              		.loc 1 1113 0
 3199 0012 0361     		str	r3, [r0, #16]
1114:main.c        ****     if (HAL_TIM_PWM_Init(&htim12) != HAL_OK) {
 3200              		.loc 1 1114 0
 3201 0014 8361     		str	r3, [r0, #24]
1115:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3202              		.loc 1 1115 0
 3203 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 3204              	.LVL207:
 3205 001a 80B9     		cbnz	r0, .L258
1119:main.c        ****     sConfigOC.Pulse = 0;
 3206              		.loc 1 1119 0
 3207 001c 6023     		movs	r3, #96
 3208 001e 0193     		str	r3, [sp, #4]
1120:main.c        ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 3209              		.loc 1 1120 0
 3210 0020 0022     		movs	r2, #0
 3211 0022 0292     		str	r2, [sp, #8]
1121:main.c        ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 3212              		.loc 1 1121 0
 3213 0024 0392     		str	r2, [sp, #12]
1122:main.c        ****     if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 3214              		.loc 1 1122 0
 3215 0026 0592     		str	r2, [sp, #20]
1123:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3216              		.loc 1 1123 0
 3217 0028 01A9     		add	r1, sp, #4
 3218 002a 0A48     		ldr	r0, .L260
 3219 002c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 3220              	.LVL208:
 3221 0030 50B9     		cbnz	r0, .L259
1127:main.c        **** 
 3222              		.loc 1 1127 0
 3223 0032 0848     		ldr	r0, .L260
 3224 0034 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 3225              	.LVL209:
1129:main.c        **** 
 3226              		.loc 1 1129 0
 3227 0038 09B0     		add	sp, sp, #36
 3228              	.LCFI57:
 3229              		.cfi_remember_state
 3230              		.cfi_def_cfa_offset 4
 3231              		@ sp needed
 3232 003a 5DF804FB 		ldr	pc, [sp], #4
 3233              	.L258:
 3234              	.LCFI58:
 3235              		.cfi_restore_state
1116:main.c        ****     }
 3236              		.loc 1 1116 0
 3237 003e 40F25C41 		movw	r1, #1116
 3238 0042 0648     		ldr	r0, .L260+8
 3239 0044 FFF7FEFF 		bl	_Error_Handler
 3240              	.LVL210:
 3241              	.L259:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 91


1124:main.c        ****     }
 3242              		.loc 1 1124 0
 3243 0048 40F26441 		movw	r1, #1124
 3244 004c 0348     		ldr	r0, .L260+8
 3245 004e FFF7FEFF 		bl	_Error_Handler
 3246              	.LVL211:
 3247              	.L261:
 3248 0052 00BF     		.align	2
 3249              	.L260:
 3250 0054 00000000 		.word	htim12
 3251 0058 00180040 		.word	1073747968
 3252 005c 00000000 		.word	.LC20
 3253              		.cfi_endproc
 3254              	.LFE185:
 3256              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 3257              		.align	1
 3258              		.syntax unified
 3259              		.thumb
 3260              		.thumb_func
 3261              		.fpu fpv5-sp-d16
 3263              	MX_USART1_UART_Init:
 3264              	.LFB186:
1132:main.c        **** 
 3265              		.loc 1 1132 0
 3266              		.cfi_startproc
 3267              		@ args = 0, pretend = 0, frame = 0
 3268              		@ frame_needed = 0, uses_anonymous_args = 0
 3269 0000 08B5     		push	{r3, lr}
 3270              	.LCFI59:
 3271              		.cfi_def_cfa_offset 8
 3272              		.cfi_offset 3, -8
 3273              		.cfi_offset 14, -4
1134:main.c        ****     huart1.Init.BaudRate = 115200;
 3274              		.loc 1 1134 0
 3275 0002 0C48     		ldr	r0, .L266
 3276 0004 0C4B     		ldr	r3, .L266+4
 3277 0006 0360     		str	r3, [r0]
1135:main.c        ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
 3278              		.loc 1 1135 0
 3279 0008 4FF4E133 		mov	r3, #115200
 3280 000c 4360     		str	r3, [r0, #4]
1136:main.c        ****     huart1.Init.StopBits = UART_STOPBITS_1;
 3281              		.loc 1 1136 0
 3282 000e 0023     		movs	r3, #0
 3283 0010 8360     		str	r3, [r0, #8]
1137:main.c        ****     huart1.Init.Parity = UART_PARITY_NONE;
 3284              		.loc 1 1137 0
 3285 0012 C360     		str	r3, [r0, #12]
1138:main.c        ****     huart1.Init.Mode = UART_MODE_TX_RX;
 3286              		.loc 1 1138 0
 3287 0014 0361     		str	r3, [r0, #16]
1139:main.c        ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3288              		.loc 1 1139 0
 3289 0016 0C22     		movs	r2, #12
 3290 0018 4261     		str	r2, [r0, #20]
1140:main.c        ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 3291              		.loc 1 1140 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 92


 3292 001a 8361     		str	r3, [r0, #24]
1141:main.c        ****     huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3293              		.loc 1 1141 0
 3294 001c C361     		str	r3, [r0, #28]
1142:main.c        ****     huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3295              		.loc 1 1142 0
 3296 001e 0362     		str	r3, [r0, #32]
1143:main.c        ****     if (HAL_UART_Init(&huart1) != HAL_OK) {
 3297              		.loc 1 1143 0
 3298 0020 4362     		str	r3, [r0, #36]
1144:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3299              		.loc 1 1144 0
 3300 0022 FFF7FEFF 		bl	HAL_UART_Init
 3301              	.LVL212:
 3302 0026 00B9     		cbnz	r0, .L265
 3303 0028 08BD     		pop	{r3, pc}
 3304              	.L265:
1145:main.c        ****     }
 3305              		.loc 1 1145 0
 3306 002a 40F27941 		movw	r1, #1145
 3307 002e 0348     		ldr	r0, .L266+8
 3308 0030 FFF7FEFF 		bl	_Error_Handler
 3309              	.LVL213:
 3310              	.L267:
 3311              		.align	2
 3312              	.L266:
 3313 0034 00000000 		.word	huart1
 3314 0038 00100140 		.word	1073811456
 3315 003c 00000000 		.word	.LC20
 3316              		.cfi_endproc
 3317              	.LFE186:
 3319              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 3320              		.align	1
 3321              		.syntax unified
 3322              		.thumb
 3323              		.thumb_func
 3324              		.fpu fpv5-sp-d16
 3326              	MX_USART6_UART_Init:
 3327              	.LFB187:
1151:main.c        **** 
 3328              		.loc 1 1151 0
 3329              		.cfi_startproc
 3330              		@ args = 0, pretend = 0, frame = 0
 3331              		@ frame_needed = 0, uses_anonymous_args = 0
 3332 0000 08B5     		push	{r3, lr}
 3333              	.LCFI60:
 3334              		.cfi_def_cfa_offset 8
 3335              		.cfi_offset 3, -8
 3336              		.cfi_offset 14, -4
1153:main.c        ****     huart6.Init.BaudRate = 115200;
 3337              		.loc 1 1153 0
 3338 0002 0C48     		ldr	r0, .L272
 3339 0004 0C4B     		ldr	r3, .L272+4
 3340 0006 0360     		str	r3, [r0]
1154:main.c        ****     huart6.Init.WordLength = UART_WORDLENGTH_8B;
 3341              		.loc 1 1154 0
 3342 0008 4FF4E133 		mov	r3, #115200
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 93


 3343 000c 4360     		str	r3, [r0, #4]
1155:main.c        ****     huart6.Init.StopBits = UART_STOPBITS_1;
 3344              		.loc 1 1155 0
 3345 000e 0023     		movs	r3, #0
 3346 0010 8360     		str	r3, [r0, #8]
1156:main.c        ****     huart6.Init.Parity = UART_PARITY_NONE;
 3347              		.loc 1 1156 0
 3348 0012 C360     		str	r3, [r0, #12]
1157:main.c        ****     huart6.Init.Mode = UART_MODE_TX_RX;
 3349              		.loc 1 1157 0
 3350 0014 0361     		str	r3, [r0, #16]
1158:main.c        ****     huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3351              		.loc 1 1158 0
 3352 0016 0C22     		movs	r2, #12
 3353 0018 4261     		str	r2, [r0, #20]
1159:main.c        ****     huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 3354              		.loc 1 1159 0
 3355 001a 8361     		str	r3, [r0, #24]
1160:main.c        ****     huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3356              		.loc 1 1160 0
 3357 001c C361     		str	r3, [r0, #28]
1161:main.c        ****     huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3358              		.loc 1 1161 0
 3359 001e 0362     		str	r3, [r0, #32]
1162:main.c        ****     if (HAL_UART_Init(&huart6) != HAL_OK) {
 3360              		.loc 1 1162 0
 3361 0020 4362     		str	r3, [r0, #36]
1163:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3362              		.loc 1 1163 0
 3363 0022 FFF7FEFF 		bl	HAL_UART_Init
 3364              	.LVL214:
 3365 0026 00B9     		cbnz	r0, .L271
 3366 0028 08BD     		pop	{r3, pc}
 3367              	.L271:
1164:main.c        ****     }
 3368              		.loc 1 1164 0
 3369 002a 40F28C41 		movw	r1, #1164
 3370 002e 0348     		ldr	r0, .L272+8
 3371 0030 FFF7FEFF 		bl	_Error_Handler
 3372              	.LVL215:
 3373              	.L273:
 3374              		.align	2
 3375              	.L272:
 3376 0034 00000000 		.word	huart6
 3377 0038 00140140 		.word	1073812480
 3378 003c 00000000 		.word	.LC20
 3379              		.cfi_endproc
 3380              	.LFE187:
 3382              		.section	.text.MX_TIM7_Init,"ax",%progbits
 3383              		.align	1
 3384              		.syntax unified
 3385              		.thumb
 3386              		.thumb_func
 3387              		.fpu fpv5-sp-d16
 3389              	MX_TIM7_Init:
 3390              	.LFB183:
1052:main.c        **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 94


 3391              		.loc 1 1052 0
 3392              		.cfi_startproc
 3393              		@ args = 0, pretend = 0, frame = 16
 3394              		@ frame_needed = 0, uses_anonymous_args = 0
 3395 0000 00B5     		push	{lr}
 3396              	.LCFI61:
 3397              		.cfi_def_cfa_offset 4
 3398              		.cfi_offset 14, -4
 3399 0002 85B0     		sub	sp, sp, #20
 3400              	.LCFI62:
 3401              		.cfi_def_cfa_offset 24
1056:main.c        ****     htim7.Init.Prescaler = 0;
 3402              		.loc 1 1056 0
 3403 0004 0F48     		ldr	r0, .L280
 3404 0006 104B     		ldr	r3, .L280+4
 3405 0008 0360     		str	r3, [r0]
1057:main.c        ****     htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 3406              		.loc 1 1057 0
 3407 000a 0023     		movs	r3, #0
 3408 000c 4360     		str	r3, [r0, #4]
1058:main.c        ****     htim7.Init.Period = 0;
 3409              		.loc 1 1058 0
 3410 000e 8360     		str	r3, [r0, #8]
1059:main.c        ****     htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3411              		.loc 1 1059 0
 3412 0010 C360     		str	r3, [r0, #12]
1060:main.c        ****     if (HAL_TIM_Base_Init(&htim7) != HAL_OK) {
 3413              		.loc 1 1060 0
 3414 0012 8361     		str	r3, [r0, #24]
1061:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3415              		.loc 1 1061 0
 3416 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 3417              	.LVL216:
 3418 0018 50B9     		cbnz	r0, .L278
1065:main.c        ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 3419              		.loc 1 1065 0
 3420 001a 0023     		movs	r3, #0
 3421 001c 0193     		str	r3, [sp, #4]
1066:main.c        ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK) {
 3422              		.loc 1 1066 0
 3423 001e 0393     		str	r3, [sp, #12]
1067:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3424              		.loc 1 1067 0
 3425 0020 01A9     		add	r1, sp, #4
 3426 0022 0848     		ldr	r0, .L280
 3427 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 3428              	.LVL217:
 3429 0028 38B9     		cbnz	r0, .L279
1071:main.c        **** 
 3430              		.loc 1 1071 0
 3431 002a 05B0     		add	sp, sp, #20
 3432              	.LCFI63:
 3433              		.cfi_remember_state
 3434              		.cfi_def_cfa_offset 4
 3435              		@ sp needed
 3436 002c 5DF804FB 		ldr	pc, [sp], #4
 3437              	.L278:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 95


 3438              	.LCFI64:
 3439              		.cfi_restore_state
1062:main.c        ****     }
 3440              		.loc 1 1062 0
 3441 0030 40F22641 		movw	r1, #1062
 3442 0034 0548     		ldr	r0, .L280+8
 3443 0036 FFF7FEFF 		bl	_Error_Handler
 3444              	.LVL218:
 3445              	.L279:
1068:main.c        ****     }
 3446              		.loc 1 1068 0
 3447 003a 40F22C41 		movw	r1, #1068
 3448 003e 0348     		ldr	r0, .L280+8
 3449 0040 FFF7FEFF 		bl	_Error_Handler
 3450              	.LVL219:
 3451              	.L281:
 3452              		.align	2
 3453              	.L280:
 3454 0044 00000000 		.word	htim7
 3455 0048 00140040 		.word	1073746944
 3456 004c 00000000 		.word	.LC20
 3457              		.cfi_endproc
 3458              	.LFE183:
 3460              		.section	.text.SystemClock_Config,"ax",%progbits
 3461              		.align	1
 3462              		.global	SystemClock_Config
 3463              		.syntax unified
 3464              		.thumb
 3465              		.thumb_func
 3466              		.fpu fpv5-sp-d16
 3468              	SystemClock_Config:
 3469              	.LFB165:
 355:main.c        **** 
 3470              		.loc 1 355 0
 3471              		.cfi_startproc
 3472              		@ args = 0, pretend = 0, frame = 208
 3473              		@ frame_needed = 0, uses_anonymous_args = 0
 3474 0000 00B5     		push	{lr}
 3475              	.LCFI65:
 3476              		.cfi_def_cfa_offset 4
 3477              		.cfi_offset 14, -4
 3478 0002 B5B0     		sub	sp, sp, #212
 3479              	.LCFI66:
 3480              		.cfi_def_cfa_offset 216
 3481              	.LBB17:
 363:main.c        **** 
 3482              		.loc 1 363 0
 3483 0004 474B     		ldr	r3, .L292
 3484 0006 1A6C     		ldr	r2, [r3, #64]
 3485 0008 42F08052 		orr	r2, r2, #268435456
 3486 000c 1A64     		str	r2, [r3, #64]
 3487 000e 1B6C     		ldr	r3, [r3, #64]
 3488 0010 03F08053 		and	r3, r3, #268435456
 3489 0014 0093     		str	r3, [sp]
 3490 0016 009B     		ldr	r3, [sp]
 3491              	.LBE17:
 3492              	.LBB18:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 96


 365:main.c        **** 
 3493              		.loc 1 365 0
 3494 0018 434B     		ldr	r3, .L292+4
 3495 001a 1A68     		ldr	r2, [r3]
 3496 001c 42F44042 		orr	r2, r2, #49152
 3497 0020 1A60     		str	r2, [r3]
 3498 0022 1B68     		ldr	r3, [r3]
 3499 0024 03F44043 		and	r3, r3, #49152
 3500 0028 0193     		str	r3, [sp, #4]
 3501 002a 019B     		ldr	r3, [sp, #4]
 3502              	.LBE18:
 369:main.c        ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3503              		.loc 1 369 0
 3504 002c 0923     		movs	r3, #9
 3505 002e 2893     		str	r3, [sp, #160]
 370:main.c        ****     RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 3506              		.loc 1 370 0
 3507 0030 4FF48033 		mov	r3, #65536
 3508 0034 2993     		str	r3, [sp, #164]
 371:main.c        ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3509              		.loc 1 371 0
 3510 0036 0123     		movs	r3, #1
 3511 0038 2D93     		str	r3, [sp, #180]
 372:main.c        ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3512              		.loc 1 372 0
 3513 003a 0223     		movs	r3, #2
 3514 003c 2E93     		str	r3, [sp, #184]
 373:main.c        ****     RCC_OscInitStruct.PLL.PLLM = 25;
 3515              		.loc 1 373 0
 3516 003e 4FF48002 		mov	r2, #4194304
 3517 0042 2F92     		str	r2, [sp, #188]
 374:main.c        ****     RCC_OscInitStruct.PLL.PLLN = 400;
 3518              		.loc 1 374 0
 3519 0044 1922     		movs	r2, #25
 3520 0046 3092     		str	r2, [sp, #192]
 375:main.c        ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3521              		.loc 1 375 0
 3522 0048 4FF4C872 		mov	r2, #400
 3523 004c 3192     		str	r2, [sp, #196]
 376:main.c        ****     RCC_OscInitStruct.PLL.PLLQ = 8;
 3524              		.loc 1 376 0
 3525 004e 3293     		str	r3, [sp, #200]
 377:main.c        ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 3526              		.loc 1 377 0
 3527 0050 0823     		movs	r3, #8
 3528 0052 3393     		str	r3, [sp, #204]
 378:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3529              		.loc 1 378 0
 3530 0054 28A8     		add	r0, sp, #160
 3531 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3532              	.LVL220:
 3533 005a 0028     		cmp	r0, #0
 3534 005c 4ED1     		bne	.L288
 384:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3535              		.loc 1 384 0
 3536 005e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 3537              	.LVL221:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 97


 3538 0062 0028     		cmp	r0, #0
 3539 0064 4FD1     		bne	.L289
 390:main.c        ****                                   | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 3540              		.loc 1 390 0
 3541 0066 0F23     		movs	r3, #15
 3542 0068 2393     		str	r3, [sp, #140]
 392:main.c        ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3543              		.loc 1 392 0
 3544 006a 0223     		movs	r3, #2
 3545 006c 2493     		str	r3, [sp, #144]
 393:main.c        ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3546              		.loc 1 393 0
 3547 006e 0023     		movs	r3, #0
 3548 0070 2593     		str	r3, [sp, #148]
 394:main.c        ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3549              		.loc 1 394 0
 3550 0072 4FF4A053 		mov	r3, #5120
 3551 0076 2693     		str	r3, [sp, #152]
 395:main.c        **** 
 3552              		.loc 1 395 0
 3553 0078 4FF48053 		mov	r3, #4096
 3554 007c 2793     		str	r3, [sp, #156]
 397:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3555              		.loc 1 397 0
 3556 007e 0621     		movs	r1, #6
 3557 0080 23A8     		add	r0, sp, #140
 3558 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3559              	.LVL222:
 3560 0086 0028     		cmp	r0, #0
 3561 0088 42D1     		bne	.L290
 401:main.c        ****                                                | RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_USART1
 3562              		.loc 1 401 0
 3563 008a 284B     		ldr	r3, .L292+8
 3564 008c 0293     		str	r3, [sp, #8]
 406:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SP = RCC_PLLP_DIV2;
 3565              		.loc 1 406 0
 3566 008e 6423     		movs	r3, #100
 3567 0090 0393     		str	r3, [sp, #12]
 407:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 3568              		.loc 1 407 0
 3569 0092 0223     		movs	r3, #2
 3570 0094 0693     		str	r3, [sp, #24]
 408:main.c        ****     PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 3571              		.loc 1 408 0
 3572 0096 0493     		str	r3, [sp, #16]
 409:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 3573              		.loc 1 409 0
 3574 0098 0593     		str	r3, [sp, #20]
 410:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 3575              		.loc 1 410 0
 3576 009a C023     		movs	r3, #192
 3577 009c 0793     		str	r3, [sp, #28]
 411:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIQ = 4;
 3578              		.loc 1 411 0
 3579 009e 0423     		movs	r3, #4
 3580 00a0 0993     		str	r3, [sp, #36]
 412:main.c        ****     PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV4;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 98


 3581              		.loc 1 412 0
 3582 00a2 0893     		str	r3, [sp, #32]
 413:main.c        ****     PeriphClkInitStruct.PLLI2SDivQ = 1;
 3583              		.loc 1 413 0
 3584 00a4 0123     		movs	r3, #1
 3585 00a6 0A93     		str	r3, [sp, #40]
 414:main.c        ****     PeriphClkInitStruct.PLLSAIDivQ = 1;
 3586              		.loc 1 414 0
 3587 00a8 0B93     		str	r3, [sp, #44]
 415:main.c        ****     PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 3588              		.loc 1 415 0
 3589 00aa 0C93     		str	r3, [sp, #48]
 416:main.c        ****     PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 3590              		.loc 1 416 0
 3591 00ac 4FF40033 		mov	r3, #131072
 3592 00b0 0D93     		str	r3, [sp, #52]
 417:main.c        ****     PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 3593              		.loc 1 417 0
 3594 00b2 4FF40073 		mov	r3, #512
 3595 00b6 0E93     		str	r3, [sp, #56]
 418:main.c        ****     PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 3596              		.loc 1 418 0
 3597 00b8 0023     		movs	r3, #0
 3598 00ba 1293     		str	r3, [sp, #72]
 419:main.c        ****     PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 3599              		.loc 1 419 0
 3600 00bc 1393     		str	r3, [sp, #76]
 420:main.c        ****     PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 3601              		.loc 1 420 0
 3602 00be 1893     		str	r3, [sp, #96]
 421:main.c        ****     PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 3603              		.loc 1 421 0
 3604 00c0 1B93     		str	r3, [sp, #108]
 422:main.c        ****     PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 3605              		.loc 1 422 0
 3606 00c2 1D93     		str	r3, [sp, #116]
 423:main.c        ****     PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 3607              		.loc 1 423 0
 3608 00c4 4FF00062 		mov	r2, #134217728
 3609 00c8 2192     		str	r2, [sp, #132]
 424:main.c        ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK) {
 3610              		.loc 1 424 0
 3611 00ca 2293     		str	r3, [sp, #136]
 425:main.c        ****         _Error_Handler(__FILE__, __LINE__);
 3612              		.loc 1 425 0
 3613 00cc 02A8     		add	r0, sp, #8
 3614 00ce FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3615              	.LVL223:
 3616 00d2 10BB     		cbnz	r0, .L291
 431:main.c        **** 
 3617              		.loc 1 431 0
 3618 00d4 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3619              	.LVL224:
 3620 00d8 154B     		ldr	r3, .L292+12
 3621 00da A3FB0030 		umull	r3, r0, r3, r0
 3622 00de 8009     		lsrs	r0, r0, #6
 3623 00e0 FFF7FEFF 		bl	HAL_SYSTICK_Config
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 99


 3624              	.LVL225:
 435:main.c        **** 
 3625              		.loc 1 435 0
 3626 00e4 0420     		movs	r0, #4
 3627 00e6 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 3628              	.LVL226:
 438:main.c        **** }
 3629              		.loc 1 438 0
 3630 00ea 0022     		movs	r2, #0
 3631 00ec 0F21     		movs	r1, #15
 3632 00ee 4FF0FF30 		mov	r0, #-1
 3633 00f2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 3634              	.LVL227:
 439:main.c        **** 
 3635              		.loc 1 439 0
 3636 00f6 35B0     		add	sp, sp, #212
 3637              	.LCFI67:
 3638              		.cfi_remember_state
 3639              		.cfi_def_cfa_offset 4
 3640              		@ sp needed
 3641 00f8 5DF804FB 		ldr	pc, [sp], #4
 3642              	.L288:
 3643              	.LCFI68:
 3644              		.cfi_restore_state
 379:main.c        ****     }
 3645              		.loc 1 379 0
 3646 00fc 40F27B11 		movw	r1, #379
 3647 0100 0C48     		ldr	r0, .L292+16
 3648 0102 FFF7FEFF 		bl	_Error_Handler
 3649              	.LVL228:
 3650              	.L289:
 385:main.c        ****     }
 3651              		.loc 1 385 0
 3652 0106 40F28111 		movw	r1, #385
 3653 010a 0A48     		ldr	r0, .L292+16
 3654 010c FFF7FEFF 		bl	_Error_Handler
 3655              	.LVL229:
 3656              	.L290:
 398:main.c        ****     }
 3657              		.loc 1 398 0
 3658 0110 4FF4C771 		mov	r1, #398
 3659 0114 0748     		ldr	r0, .L292+16
 3660 0116 FFF7FEFF 		bl	_Error_Handler
 3661              	.LVL230:
 3662              	.L291:
 426:main.c        ****     }
 3663              		.loc 1 426 0
 3664 011a 4FF4D571 		mov	r1, #426
 3665 011e 0548     		ldr	r0, .L292+16
 3666 0120 FFF7FEFF 		bl	_Error_Handler
 3667              	.LVL231:
 3668              	.L293:
 3669              		.align	2
 3670              	.L292:
 3671 0124 00380240 		.word	1073887232
 3672 0128 00700040 		.word	1073770496
 3673 012c 6848B101 		.word	28395624
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 100


 3674 0130 D34D6210 		.word	274877907
 3675 0134 00000000 		.word	.LC20
 3676              		.cfi_endproc
 3677              	.LFE165:
 3679              		.section	.text.main,"ax",%progbits
 3680              		.align	1
 3681              		.global	main
 3682              		.syntax unified
 3683              		.thumb
 3684              		.thumb_func
 3685              		.fpu fpv5-sp-d16
 3687              	main:
 3688              	.LFB161:
 121:main.c        ****     /* USER CODE BEGIN 1 */
 3689              		.loc 1 121 0
 3690              		.cfi_startproc
 3691              		@ Volatile: function does not return.
 3692              		@ args = 0, pretend = 0, frame = 64
 3693              		@ frame_needed = 0, uses_anonymous_args = 0
 3694 0000 00B5     		push	{lr}
 3695              	.LCFI69:
 3696              		.cfi_def_cfa_offset 4
 3697              		.cfi_offset 14, -4
 3698 0002 91B0     		sub	sp, sp, #68
 3699              	.LCFI70:
 3700              		.cfi_def_cfa_offset 72
 129:main.c        **** 
 3701              		.loc 1 129 0
 3702 0004 FFF7FEFF 		bl	HAL_Init
 3703              	.LVL232:
 136:main.c        **** 
 3704              		.loc 1 136 0
 3705 0008 FFF7FEFF 		bl	SystemClock_Config
 3706              	.LVL233:
 143:main.c        ****     MX_ADC3_Init();
 3707              		.loc 1 143 0
 3708 000c FFF7FEFF 		bl	MX_GPIO_Init
 3709              	.LVL234:
 144:main.c        ****     MX_CRC_Init();
 3710              		.loc 1 144 0
 3711 0010 FFF7FEFF 		bl	MX_ADC3_Init
 3712              	.LVL235:
 145:main.c        ****     MX_DCMI_Init();
 3713              		.loc 1 145 0
 3714 0014 FFF7FEFF 		bl	MX_CRC_Init
 3715              	.LVL236:
 146:main.c        ****     MX_DMA2D_Init();
 3716              		.loc 1 146 0
 3717 0018 FFF7FEFF 		bl	MX_DCMI_Init
 3718              	.LVL237:
 147:main.c        ****     MX_FMC_Init();
 3719              		.loc 1 147 0
 3720 001c FFF7FEFF 		bl	MX_DMA2D_Init
 3721              	.LVL238:
 148:main.c        ****     MX_I2C1_Init();
 3722              		.loc 1 148 0
 3723 0020 FFF7FEFF 		bl	MX_FMC_Init
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 101


 3724              	.LVL239:
 149:main.c        ****     MX_I2C3_Init();
 3725              		.loc 1 149 0
 3726 0024 FFF7FEFF 		bl	MX_I2C1_Init
 3727              	.LVL240:
 150:main.c        ****     MX_LTDC_Init();
 3728              		.loc 1 150 0
 3729 0028 FFF7FEFF 		bl	MX_I2C3_Init
 3730              	.LVL241:
 151:main.c        ****     MX_QUADSPI_Init();
 3731              		.loc 1 151 0
 3732 002c FFF7FEFF 		bl	MX_LTDC_Init
 3733              	.LVL242:
 152:main.c        ****     MX_RTC_Init();
 3734              		.loc 1 152 0
 3735 0030 FFF7FEFF 		bl	MX_QUADSPI_Init
 3736              	.LVL243:
 153:main.c        ****     MX_SAI2_Init();
 3737              		.loc 1 153 0
 3738 0034 FFF7FEFF 		bl	MX_RTC_Init
 3739              	.LVL244:
 154:main.c        ****     MX_SDMMC1_SD_Init();
 3740              		.loc 1 154 0
 3741 0038 FFF7FEFF 		bl	MX_SAI2_Init
 3742              	.LVL245:
 155:main.c        ****     MX_SPDIFRX_Init();
 3743              		.loc 1 155 0
 3744 003c FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 3745              	.LVL246:
 156:main.c        ****     MX_SPI2_Init();
 3746              		.loc 1 156 0
 3747 0040 FFF7FEFF 		bl	MX_SPDIFRX_Init
 3748              	.LVL247:
 157:main.c        ****     MX_TIM1_Init();
 3749              		.loc 1 157 0
 3750 0044 FFF7FEFF 		bl	MX_SPI2_Init
 3751              	.LVL248:
 158:main.c        ****     MX_TIM2_Init();
 3752              		.loc 1 158 0
 3753 0048 FFF7FEFF 		bl	MX_TIM1_Init
 3754              	.LVL249:
 159:main.c        ****     MX_TIM3_Init();
 3755              		.loc 1 159 0
 3756 004c FFF7FEFF 		bl	MX_TIM2_Init
 3757              	.LVL250:
 160:main.c        ****     MX_TIM5_Init();
 3758              		.loc 1 160 0
 3759 0050 FFF7FEFF 		bl	MX_TIM3_Init
 3760              	.LVL251:
 161:main.c        ****     MX_TIM8_Init();
 3761              		.loc 1 161 0
 3762 0054 FFF7FEFF 		bl	MX_TIM5_Init
 3763              	.LVL252:
 162:main.c        ****     MX_TIM12_Init();
 3764              		.loc 1 162 0
 3765 0058 FFF7FEFF 		bl	MX_TIM8_Init
 3766              	.LVL253:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 102


 163:main.c        ****     MX_USART1_UART_Init();
 3767              		.loc 1 163 0
 3768 005c FFF7FEFF 		bl	MX_TIM12_Init
 3769              	.LVL254:
 164:main.c        ****     MX_USART6_UART_Init();
 3770              		.loc 1 164 0
 3771 0060 FFF7FEFF 		bl	MX_USART1_UART_Init
 3772              	.LVL255:
 165:main.c        ****     MX_TIM7_Init();
 3773              		.loc 1 165 0
 3774 0064 FFF7FEFF 		bl	MX_USART6_UART_Init
 3775              	.LVL256:
 166:main.c        ****     /* USER CODE BEGIN 2 */
 3776              		.loc 1 166 0
 3777 0068 FFF7FEFF 		bl	MX_TIM7_Init
 3778              	.LVL257:
 168:main.c        **** 
 3779              		.loc 1 168 0
 3780 006c 1948     		ldr	r0, .L297
 3781 006e FFF7FEFF 		bl	debug_init
 3782              	.LVL258:
 170:main.c        ****             "STM32F746 Discovery Project"
 3783              		.loc 1 170 0
 3784 0072 1948     		ldr	r0, .L297+4
 3785 0074 FFF7FEFF 		bl	xprintf
 3786              	.LVL259:
 175:main.c        ****     TS_Initialize_Touchscreen();
 3787              		.loc 1 175 0
 3788 0078 FFF7FEFF 		bl	LCD_Initialize_Screen
 3789              	.LVL260:
 176:main.c        **** 
 3790              		.loc 1 176 0
 3791 007c FFF7FEFF 		bl	TS_Initialize_Touchscreen
 3792              	.LVL261:
 194:main.c        ****     osThreadDef(guiTask, StartGuiTask, osPriorityHigh, 1, ALL_THREADS_STACK_SIZE / 2);
 3793              		.loc 1 194 0
 3794 0080 164C     		ldr	r4, .L297+8
 3795 0082 0BAD     		add	r5, sp, #44
 3796 0084 2646     		mov	r6, r4
 3797 0086 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3798 0088 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3799 008a 3368     		ldr	r3, [r6]
 3800 008c 2B60     		str	r3, [r5]
 195:main.c        ****     osThreadDef(touchscreenTask, StartTouchscreenTask, osPriorityNormal, 1, ALL_THREADS_STACK_SIZE 
 3801              		.loc 1 195 0
 3802 008e 06AD     		add	r5, sp, #24
 3803 0090 04F11406 		add	r6, r4, #20
 3804 0094 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3805 0096 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3806 0098 3368     		ldr	r3, [r6]
 3807 009a 2B60     		str	r3, [r5]
 196:main.c        **** 
 3808              		.loc 1 196 0
 3809 009c 01AD     		add	r5, sp, #4
 3810 009e 2834     		adds	r4, r4, #40
 3811 00a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3812 00a2 0FC5     		stmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 103


 3813 00a4 2368     		ldr	r3, [r4]
 3814 00a6 2B60     		str	r3, [r5]
 198:main.c        ****     guiTaskHandle = osThreadCreate(osThread(guiTask), NULL);
 3815              		.loc 1 198 0
 3816 00a8 0021     		movs	r1, #0
 3817 00aa 0BA8     		add	r0, sp, #44
 3818 00ac FFF7FEFF 		bl	osThreadCreate
 3819              	.LVL262:
 3820 00b0 0B4B     		ldr	r3, .L297+12
 3821 00b2 1860     		str	r0, [r3]
 199:main.c        ****     touchscreenTaskHandle = osThreadCreate(osThread(touchscreenTask), NULL);
 3822              		.loc 1 199 0
 3823 00b4 0021     		movs	r1, #0
 3824 00b6 06A8     		add	r0, sp, #24
 3825 00b8 FFF7FEFF 		bl	osThreadCreate
 3826              	.LVL263:
 3827 00bc 094B     		ldr	r3, .L297+16
 3828 00be 1860     		str	r0, [r3]
 200:main.c        **** 
 3829              		.loc 1 200 0
 3830 00c0 0021     		movs	r1, #0
 3831 00c2 01A8     		add	r0, sp, #4
 3832 00c4 FFF7FEFF 		bl	osThreadCreate
 3833              	.LVL264:
 3834 00c8 074B     		ldr	r3, .L297+20
 3835 00ca 1860     		str	r0, [r3]
 212:main.c        **** 
 3836              		.loc 1 212 0
 3837 00cc FFF7FEFF 		bl	osKernelStart
 3838              	.LVL265:
 3839              	.L295:
 3840 00d0 FEE7     		b	.L295
 3841              	.L298:
 3842 00d2 00BF     		.align	2
 3843              	.L297:
 3844 00d4 00000000 		.word	huart1
 3845 00d8 00000000 		.word	.LC21
 3846 00dc 00000000 		.word	.LANCHOR8
 3847 00e0 00000000 		.word	defaultTaskHandle
 3848 00e4 00000000 		.word	guiTaskHandle
 3849 00e8 00000000 		.word	touchscreenTaskHandle
 3850              		.cfi_endproc
 3851              	.LFE161:
 3853              		.comm	buff,8192,4
 3854              		.comm	guiTaskHandle,4,4
 3855              		.comm	touchscreenTaskHandle,4,4
 3856              		.comm	defaultTaskHandle,4,4
 3857              		.comm	hsdram1,52,4
 3858              		.comm	huart6,112,4
 3859              		.comm	huart1,112,4
 3860              		.comm	htim12,64,4
 3861              		.comm	htim8,64,4
 3862              		.comm	htim7,64,4
 3863              		.comm	htim5,64,4
 3864              		.comm	htim3,64,4
 3865              		.comm	htim2,64,4
 3866              		.comm	htim1,64,4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 104


 3867              		.comm	hspi2,100,4
 3868              		.comm	hspdif,76,4
 3869              		.comm	hsd1,132,4
 3870              		.comm	hsai_BlockB2,132,4
 3871              		.comm	hsai_BlockA2,132,4
 3872              		.comm	hrtc,32,4
 3873              		.comm	hqspi,76,4
 3874              		.comm	hltdc,168,4
 3875              		.comm	hi2c3,76,4
 3876              		.comm	hi2c1,76,4
 3877              		.comm	hdma2d,64,4
 3878              		.comm	hdcmi,80,4
 3879              		.comm	hcrc,36,4
 3880              		.comm	hadc3,72,4
 3881              		.global	APP_STATE
 3882              		.section	.rodata
 3883              		.align	2
 3884              		.set	.LANCHOR8,. + 0
 3885              	.LC22:
 3886 0000 18000000 		.word	.LC0
 3887 0004 00000000 		.word	StartDefaultTask
 3888 0008 0000     		.short	0
 3889 000a 0000     		.space	2
 3890 000c 01000000 		.word	1
 3891 0010 00040000 		.word	1024
 3892              	.LC23:
 3893 0014 10000000 		.word	.LC2
 3894 0018 00000000 		.word	StartGuiTask
 3895 001c 0200     		.short	2
 3896 001e 0000     		.space	2
 3897 0020 01000000 		.word	1
 3898 0024 00080000 		.word	2048
 3899              	.LC24:
 3900 0028 00000000 		.word	.LC4
 3901 002c 00000000 		.word	StartTouchscreenTask
 3902 0030 0000     		.short	0
 3903 0032 0000     		.space	2
 3904 0034 01000000 		.word	1
 3905 0038 00040000 		.word	1024
 3906              		.section	.bss.TS_State,"aw",%nobits
 3907              		.align	2
 3908              		.set	.LANCHOR2,. + 0
 3911              	TS_State:
 3912 0000 00000000 		.space	44
 3912      00000000 
 3912      00000000 
 3912      00000000 
 3912      00000000 
 3913              		.section	.bss.buf_offs,"aw",%nobits
 3914              		.set	.LANCHOR7,. + 0
 3917              	buf_offs:
 3918 0000 00       		.space	1
 3919              		.section	.bss.fpos,"aw",%nobits
 3920              		.align	2
 3921              		.set	.LANCHOR6,. + 0
 3924              	fpos:
 3925 0000 00000000 		.space	4
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 105


 3926              		.section	.bss.player_state,"aw",%nobits
 3927              		.set	.LANCHOR4,. + 0
 3930              	player_state:
 3931 0000 00       		.space	1
 3932              		.section	.bss.testFile,"aw",%nobits
 3933              		.align	2
 3934              		.set	.LANCHOR5,. + 0
 3937              	testFile:
 3938 0000 00000000 		.space	560
 3938      00000000 
 3938      00000000 
 3938      00000000 
 3938      00000000 
 3939              		.section	.data.APP_STATE,"aw",%progbits
 3940              		.align	2
 3941              		.set	.LANCHOR3,. + 0
 3944              	APP_STATE:
 3945 0000 FFFFFFFF 		.word	-1
 3946 0004 FFFFFFFF 		.word	-1
 3947 0008 01000000 		.word	1
 3948 000c 24000000 		.word	.LC25
 3949 0010 00000000 		.space	8
 3949      00000000 
 3950              		.section	.rodata.MX_ADC3_Init.str1.4,"aMS",%progbits,1
 3951              		.align	2
 3952              	.LC20:
 3953 0000 6D61696E 		.ascii	"main.c\000"
 3953      2E6300
 3954              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 3955              		.align	2
 3956              	.LC6:
 3957 0000 57616974 		.ascii	"Waiting for USB mass storage.\015\012\000"
 3957      696E6720 
 3957      666F7220 
 3957      55534220 
 3957      6D617373 
 3958              	.LC7:
 3959 0020 496E6974 		.ascii	"Initializing audio codec.\015\012\000"
 3959      69616C69 
 3959      7A696E67 
 3959      20617564 
 3959      696F2063 
 3960              	.LC8:
 3961 003c 41756469 		.ascii	"Audio codec initialized successfully.\015\012\000"
 3961      6F20636F 
 3961      64656320 
 3961      696E6974 
 3961      69616C69 
 3962              	.LC9:
 3963 0064 41756469 		.ascii	"Audio codec initialized with errors.\015\012\000"
 3963      6F20636F 
 3963      64656320 
 3963      696E6974 
 3963      69616C69 
 3964 008b 00       		.space	1
 3965              	.LC10:
 3966 008c 4F646562 		.ascii	"Odebrano polecenie a\012\000"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 106


 3966      72616E6F 
 3966      20706F6C 
 3966      6563656E 
 3966      69652061 
 3967 00a2 0000     		.space	2
 3968              	.LC11:
 3969 00a4 706C6179 		.ascii	"play command...\012\000"
 3969      20636F6D 
 3969      6D616E64 
 3969      2E2E2E0A 
 3969      00
 3970 00b5 000000   		.space	3
 3971              	.LC12:
 3972 00b8 616C7265 		.ascii	"already playing\012\000"
 3972      61647920 
 3972      706C6179 
 3972      696E670A 
 3972      00
 3973 00c9 000000   		.space	3
 3974              	.LC13:
 3975 00cc 313A2F74 		.ascii	"1:/testwave.wav\000"
 3975      65737477 
 3975      6176652E 
 3975      77617600 
 3976              	.LC14:
 3977 00dc 77617665 		.ascii	"wave file open OK\012\000"
 3977      2066696C 
 3977      65206F70 
 3977      656E204F 
 3977      4B0A00
 3978 00ef 00       		.space	1
 3979              	.LC15:
 3980 00f0 77617665 		.ascii	"wave file open ERROR, res = %d\012\000"
 3980      2066696C 
 3980      65206F70 
 3980      656E2045 
 3980      52524F52 
 3981              	.LC16:
 3982 0110 4E696520 		.ascii	"Nie rozpoznane polecenie: %c = %02X\012\000"
 3982      726F7A70 
 3982      6F7A6E61 
 3982      6E652070 
 3982      6F6C6563 
 3983 0135 000000   		.space	3
 3984              	.LC17:
 3985 0138 665F7265 		.ascii	"f_read error on half\012\000"
 3985      61642065 
 3985      72726F72 
 3985      206F6E20 
 3985      68616C66 
 3986 014e 0000     		.space	2
 3987              	.LC18:
 3988 0150 665F7265 		.ascii	"f_read error on full\012\000"
 3988      61642065 
 3988      72726F72 
 3988      206F6E20 
 3988      66756C6C 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 107


 3989 0166 0000     		.space	2
 3990              	.LC19:
 3991 0168 73746F70 		.ascii	"stop at eof\012\000"
 3991      20617420 
 3991      656F660A 
 3991      00
 3992              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3993              		.align	2
 3994              	.LC21:
 3995 0000 1B5B303B 		.ascii	"\033[0;32mSTM32F746 Discovery Project\033[0;39m\015"
 3995      33326D53 
 3995      544D3332 
 3995      46373436 
 3995      20446973 
 3996 002a 0A00     		.ascii	"\012\000"
 3997              		.section	.rodata.str1.4,"aMS",%progbits,1
 3998              		.align	2
 3999              	.LC4:
 4000 0000 746F7563 		.ascii	"touchscreenTask\000"
 4000      68736372 
 4000      65656E54 
 4000      61736B00 
 4001              	.LC2:
 4002 0010 67756954 		.ascii	"guiTask\000"
 4002      61736B00 
 4003              	.LC0:
 4004 0018 64656661 		.ascii	"defaultTask\000"
 4004      756C7454 
 4004      61736B00 
 4005              	.LC25:
 4006 0024 4F4B00   		.ascii	"OK\000"
 4007              		.section	.sdram,"aw",%progbits
 4008              		.align	2
 4009              		.set	.LANCHOR0,. + 0
 4010              		.set	.LANCHOR1,. + 521280
 4013              	lcd_image_bg:
 4014 0000 00000000 		.space	522240
 4014      00000000 
 4014      00000000 
 4014      00000000 
 4014      00000000 
 4017              	lcd_image_fg:
 4018 7f800 00000000 		.space	522240
 4018      00000000 
 4018      00000000 
 4018      00000000 
 4018      00000000 
 4019              		.text
 4020              	.Letext0:
 4021              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 4022              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 4023              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 4024              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 4025              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 4026              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 4027              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 4028              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 108


 4029              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 4030              		.file 11 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 4031              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 4032              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 4033              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 4034              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 4035              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 4036              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 4037              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 4038              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 4039              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
 4040              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 4041              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 4042              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 4043              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 4044              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
 4045              		.file 26 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 4046              		.file 27 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 4047              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sai.h"
 4048              		.file 29 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 4049              		.file 30 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 4050              		.file 31 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spdifrx.h"
 4051              		.file 32 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 4052              		.file 33 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 4053              		.file 34 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 4054              		.file 35 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 4055              		.file 36 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 4056              		.file 37 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 4057              		.file 38 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 4058              		.file 39 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 4059              		.file 40 "Middlewares/Third_Party/FatFs/src/integer.h"
 4060              		.file 41 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 4061              		.file 42 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 4062              		.file 43 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 4063              		.file 44 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 4064              		.file 45 "Middlewares/Third_Party/FatFs/src/ff.h"
 4065              		.file 46 "Middlewares/Third_Party/FatFs/src/diskio.h"
 4066              		.file 47 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 4067              		.file 48 "Inc/sd_diskio.h"
 4068              		.file 49 "Inc/usbh_diskio.h"
 4069              		.file 50 "Inc/fatfs.h"
 4070              		.file 51 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\time.h"
 4071              		.file 52 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 4072              		.file 53 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 4073              		.file 54 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 4074              		.file 55 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 4075              		.file 56 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 4076              		.file 57 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 4077              		.file 58 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 4078              		.file 59 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 4079              		.file 60 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 4080              		.file 61 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 4081              		.file 62 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 4082              		.file 63 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 4083              		.file 64 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 4084              		.file 65 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 4085              		.file 66 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 109


 4086              		.file 67 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
 4087              		.file 68 "Inc/lwip.h"
 4088              		.file 69 "Inc/usb_host.h"
 4089              		.file 70 "Middlewares/Third_Party/LwIP/src/include/lwip/errno.h"
 4090              		.file 71 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\unistd.h"
 4091              		.file 72 "Drivers/BSP/STM32746G-Discovery/../../../Utilities/Fonts/fonts.h"
 4092              		.file 73 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/../Common/ts.h"
 4093              		.file 74 "Drivers/BSP/STM32746G-Discovery/../Components/ft5336/ft5336.h"
 4094              		.file 75 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_ts.h"
 4095              		.file 76 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/../Common/audio.h"
 4096              		.file 77 "Drivers/BSP/STM32746G-Discovery/../Components/wm8994/wm8994.h"
 4097              		.file 78 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_audio.h"
 4098              		.file 79 "Middlewares/Third_Party/LwIP/src/include/lwip/inet.h"
 4099              		.file 80 "Middlewares/Third_Party/LwIP/src/include/lwip/netdb.h"
 4100              		.file 81 "Modules/controls.h"
 4101              		.file 82 "main.h"
 4102              		.file 83 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 4103              		.file 84 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 4104              		.file 85 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c_ex.h"
 4105              		.file 86 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 4106              		.file 87 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 4107              		.file 88 "Modules/gui.h"
 4108              		.file 89 "Inc/term_io.h"
 4109              		.file 90 "Modules/audio_loader.h"
 4110              		.file 91 "Inc/dbgu.h"
 4111              		.file 92 "Drivers/BSP/STM32746G-Discovery/stm32746g_discovery_lcd.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 110


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:18     .text.MX_SDMMC1_SD_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:24     .text.MX_SDMMC1_SD_Init:00000000 MX_SDMMC1_SD_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:53     .text.MX_SDMMC1_SD_Init:00000018 $d
                            *COM*:00000084 hsd1
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:59     .text.MX_GPIO_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:65     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:474    .text.MX_GPIO_Init:00000270 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:490    .text.LCD_Initialize_Screen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:496    .text.LCD_Initialize_Screen:00000000 LCD_Initialize_Screen
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:566    .text.LCD_Initialize_Screen:00000064 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:572    .text.TS_Initialize_Touchscreen:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:578    .text.TS_Initialize_Touchscreen:00000000 TS_Initialize_Touchscreen
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:617    .text.StartTouchscreenTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:624    .text.StartTouchscreenTask:00000000 StartTouchscreenTask
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:665    .text.StartTouchscreenTask:00000028 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:672    .text.StartGuiTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:679    .text.StartGuiTask:00000000 StartGuiTask
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:735    .text.StartGuiTask:00000040 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:740    .text.__io_putchar:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:747    .text.__io_putchar:00000000 __io_putchar
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:772    .text.__io_putchar:00000014 $d
                            *COM*:00000070 huart1
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:777    .text.inkey:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:784    .text.inkey:00000000 inkey
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:816    .text.inkey:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:821    .text.StartDefaultTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:828    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1108   .text.StartDefaultTask:00000174 $d
                            *COM*:00002000 buff
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1135   .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1142   .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000000 BSP_AUDIO_OUT_TransferComplete_CallBack
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1157   .text.BSP_AUDIO_OUT_TransferComplete_CallBack:00000008 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1162   .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1169   .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000000 BSP_AUDIO_OUT_HalfTransfer_CallBack
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1184   .text.BSP_AUDIO_OUT_HalfTransfer_CallBack:00000008 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1189   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1196   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1226   .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1231   .text._Error_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1238   .text._Error_Handler:00000000 _Error_Handler
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1253   .text.MX_ADC3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1259   .text.MX_ADC3_Init:00000000 MX_ADC3_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1346   .text.MX_ADC3_Init:00000060 $d
                            *COM*:00000048 hadc3
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1354   .text.MX_CRC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1360   .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1401   .text.MX_CRC_Init:00000028 $d
                            *COM*:00000024 hcrc
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1408   .text.MX_DCMI_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1414   .text.MX_DCMI_Init:00000000 MX_DCMI_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1466   .text.MX_DCMI_Init:00000034 $d
                            *COM*:00000050 hdcmi
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1473   .text.MX_DMA2D_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1479   .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1535   .text.MX_DMA2D_Init:00000040 $d
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 111


                            *COM*:00000040 hdma2d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1542   .text.MX_FMC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1548   .text.MX_FMC_Init:00000000 MX_FMC_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1632   .text.MX_FMC_Init:00000060 $d
                            *COM*:00000034 hsdram1
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1639   .text.MX_I2C1_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1645   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1717   .text.MX_I2C1_Init:00000058 $d
                            *COM*:0000004c hi2c1
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1725   .text.MX_I2C3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1731   .text.MX_I2C3_Init:00000000 MX_I2C3_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1803   .text.MX_I2C3_Init:00000058 $d
                            *COM*:0000004c hi2c3
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1811   .text.MX_LTDC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1817   .text.MX_LTDC_Init:00000000 MX_LTDC_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1944   .text.MX_LTDC_Init:000000ac $d
                            *COM*:000000a8 hltdc
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1951   .text.MX_QUADSPI_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:1957   .text.MX_QUADSPI_Init:00000000 MX_QUADSPI_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2005   .text.MX_QUADSPI_Init:00000030 $d
                            *COM*:0000004c hqspi
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2012   .text.MX_RTC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2018   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2189   .text.MX_RTC_Init:000000f8 $d
                            *COM*:00000020 hrtc
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2196   .text.MX_SAI2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2202   .text.MX_SAI2_Init:00000000 MX_SAI2_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2343   .text.MX_SAI2_Init:0000009c $d
                            *COM*:00000084 hsai_BlockA2
                            *COM*:00000084 hsai_BlockB2
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2353   .text.MX_SPDIFRX_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2359   .text.MX_SPDIFRX_Init:00000000 MX_SPDIFRX_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2409   .text.MX_SPDIFRX_Init:00000034 $d
                            *COM*:0000004c hspdif
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2415   .text.MX_SPI2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2421   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2482   .text.MX_SPI2_Init:00000048 $d
                            *COM*:00000064 hspi2
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2489   .text.MX_TIM1_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2495   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2666   .text.MX_TIM1_Init:000000e4 $d
                            *COM*:00000040 htim1
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2673   .text.MX_TIM2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2679   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2798   .text.MX_TIM2_Init:0000009c $d
                            *COM*:00000040 htim2
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2804   .text.MX_TIM3_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2810   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2929   .text.MX_TIM3_Init:0000009c $d
                            *COM*:00000040 htim3
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2936   .text.MX_TIM5_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:2942   .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3062   .text.MX_TIM5_Init:0000009c $d
                            *COM*:00000040 htim5
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3069   .text.MX_TIM8_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3075   .text.MX_TIM8_Init:00000000 MX_TIM8_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3161   .text.MX_TIM8_Init:00000068 $d
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 112


                            *COM*:00000040 htim8
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3168   .text.MX_TIM12_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3174   .text.MX_TIM12_Init:00000000 MX_TIM12_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3250   .text.MX_TIM12_Init:00000054 $d
                            *COM*:00000040 htim12
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3257   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3263   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3313   .text.MX_USART1_UART_Init:00000034 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3320   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3326   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3376   .text.MX_USART6_UART_Init:00000034 $d
                            *COM*:00000070 huart6
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3383   .text.MX_TIM7_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3389   .text.MX_TIM7_Init:00000000 MX_TIM7_Init
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3454   .text.MX_TIM7_Init:00000044 $d
                            *COM*:00000040 htim7
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3461   .text.SystemClock_Config:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3468   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3671   .text.SystemClock_Config:00000124 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3680   .text.main:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3687   .text.main:00000000 main
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3844   .text.main:000000d4 $d
                            *COM*:00000004 defaultTaskHandle
                            *COM*:00000004 guiTaskHandle
                            *COM*:00000004 touchscreenTaskHandle
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3944   .data.APP_STATE:00000000 APP_STATE
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3883   .rodata:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3907   .bss.TS_State:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3911   .bss.TS_State:00000000 TS_State
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3917   .bss.buf_offs:00000000 buf_offs
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3918   .bss.buf_offs:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3920   .bss.fpos:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3924   .bss.fpos:00000000 fpos
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3930   .bss.player_state:00000000 player_state
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3931   .bss.player_state:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3933   .bss.testFile:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3937   .bss.testFile:00000000 testFile
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3940   .data.APP_STATE:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3951   .rodata.MX_ADC3_Init.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3955   .rodata.StartDefaultTask.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3993   .rodata.main.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:3998   .rodata.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:4008   .sdram:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:4013   .sdram:00000000 lcd_image_bg
C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s:4017   .sdram:0007f800 lcd_image_fg
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_DisplayOn
BSP_LCD_SelectLayer
BSP_LCD_Clear
BSP_LCD_SetBackColor
BSP_LCD_SetColorKeying
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 113


BSP_LCD_SetTransparency
BSP_LCD_GetXSize
BSP_LCD_GetYSize
BSP_TS_Init
vTaskDelay
BSP_TS_GetState
GUI_HandleTouch
CON_HandleButtonTouched
GUI_DrawAllButtons
GUI_HighlightButton
MX_FATFS_Init
MX_USB_HOST_Init
xprintf
BSP_AUDIO_OUT_Init
BSP_AUDIO_OUT_SetAudioFrameSlot
AUDIO_L_PerformScan
f_open
BSP_AUDIO_OUT_Play
f_read
BSP_AUDIO_OUT_Stop
f_close
Appli_state
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CRC_Init
HAL_DCMI_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_SDRAM_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_LTDC_Init
HAL_LTDC_ConfigLayer
HAL_QSPI_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm
HAL_RTCEx_SetTimeStamp
HAL_SAI_Init
HAL_SPDIFRX_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccCvS3Ne.s 			page 114


HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
debug_init
osThreadCreate
osKernelStart
