ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7_board_sd.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.BSP_SD_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	BSP_SD_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	BSP_SD_DeInit:
  27              	.LFB140:
  28              		.file 1 "Src/stm32f7_board_sd.c"
   1:Src/stm32f7_board_sd.c **** /**
   2:Src/stm32f7_board_sd.c ****   ******************************************************************************
   3:Src/stm32f7_board_sd.c ****   * @file    stm32f769i_eval_sd.c
   4:Src/stm32f7_board_sd.c ****   * @author  MCD Application Team
   5:Src/stm32f7_board_sd.c ****   * @brief   This file includes the uSD card driver mounted on STM32F769I-EVAL
   6:Src/stm32f7_board_sd.c ****   *          evaluation boards.
   7:Src/stm32f7_board_sd.c ****   @verbatim
   8:Src/stm32f7_board_sd.c ****   How To use this driver:
   9:Src/stm32f7_board_sd.c ****   -----------------------
  10:Src/stm32f7_board_sd.c ****    - This driver is used to drive the micro SD external cards mounted on STM32F769I-EVAL
  11:Src/stm32f7_board_sd.c ****      evaluation board.
  12:Src/stm32f7_board_sd.c ****    - This driver does not need a specific component driver for the micro SD device
  13:Src/stm32f7_board_sd.c ****      to be included with.
  14:Src/stm32f7_board_sd.c **** 
  15:Src/stm32f7_board_sd.c ****   Driver description:
  16:Src/stm32f7_board_sd.c ****   ------------------
  17:Src/stm32f7_board_sd.c ****   + Initialization steps:
  18:Src/stm32f7_board_sd.c ****      o Initialize the micro SD card using the BSP_SD_InitEx() function. This
  19:Src/stm32f7_board_sd.c ****        function includes the MSP layer hardware resources initialization and the
  20:Src/stm32f7_board_sd.c ****        SDIO interface configuration to interface with the external micro SD. It
  21:Src/stm32f7_board_sd.c ****        also includes the micro SD initialization sequence for SDCard1 or SDCard2.
  22:Src/stm32f7_board_sd.c ****        When BSP_SD_Init() is called, SDCard1 is by default initialized.
  23:Src/stm32f7_board_sd.c ****      o To check the SD card presence you can use the function BSP_SD_IsDetectedEx() which
  24:Src/stm32f7_board_sd.c ****        returns the detection status for SDCard1 or SDCard2.
  25:Src/stm32f7_board_sd.c ****        the function BSP_SD_IsDetected() returns the detection status for SDCard1.
  26:Src/stm32f7_board_sd.c ****      o If SD presence detection interrupt mode is desired, you must configure the
  27:Src/stm32f7_board_sd.c ****        SD detection interrupt mode by calling the functions BSP_SD_ITConfig() for
  28:Src/stm32f7_board_sd.c ****        SDCard1 or BSP_SD_ITConfigEx() for SDCard2 . The interrupt is generated as
  29:Src/stm32f7_board_sd.c ****        an external interrupt whenever the micro SD card is plugged/unplugged
  30:Src/stm32f7_board_sd.c ****        in/from the evaluation board. The SD detection is managed by MFX, so the
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 2


  31:Src/stm32f7_board_sd.c ****        SD detection interrupt has to be treated by MFX_IRQOUT gpio pin IRQ handler.
  32:Src/stm32f7_board_sd.c ****      o The function BSP_SD_GetCardInfo()/BSP_SD_GetCardInfoEx() are used to get
  33:Src/stm32f7_board_sd.c ****        the micro SD card information which is stored in the structure
  34:Src/stm32f7_board_sd.c ****        "HAL_SD_CardInfoTypedef".
  35:Src/stm32f7_board_sd.c **** 
  36:Src/stm32f7_board_sd.c ****   + Micro SD card operations
  37:Src/stm32f7_board_sd.c ****      o The micro SD card can be accessed with read/write block(s) operations once
  38:Src/stm32f7_board_sd.c ****        it is ready for access. The access, by default to SDCard1, can be performed whether
  39:Src/stm32f7_board_sd.c ****        using the polling mode by calling the functions BSP_SD_ReadBlocks()/BSP_SD_WriteBlocks(),
  40:Src/stm32f7_board_sd.c ****        or by DMA transfer using the functions BSP_SD_ReadBlocks_DMA()/BSP_SD_WriteBlocks_DMA().
  41:Src/stm32f7_board_sd.c ****        The access can be performed to SDCard1 or SDCard2 by calling BSP_SD_ReadBlocksEx(),
  42:Src/stm32f7_board_sd.c ****        BSP_SD_WriteBlocksEx() or by calling BSP_SD_ReadBlocks_DMAEx()/BSP_SD_WriteBlocks_DMAEx().
  43:Src/stm32f7_board_sd.c ****      o The DMA transfer complete is used with interrupt mode. Once the SD transfer
  44:Src/stm32f7_board_sd.c ****        is complete, the SD interrupt is handled using the function BSP_SDMMC1_IRQHandler()
  45:Src/stm32f7_board_sd.c ****        when SDCard1 is used or BSP_SDMMC2_IRQHandler() when SDCard2 is used.
  46:Src/stm32f7_board_sd.c ****        The DMA Tx/Rx transfer complete are handled using the functions
  47:Src/stm32f7_board_sd.c ****        BSP_SDMMC1_DMA_Tx_IRQHandler(), BSP_SDMMC1_DMA_Rx_IRQHandler(),
  48:Src/stm32f7_board_sd.c ****        BSP_SDMMC2_DMA_Tx_IRQHandler(), BSP_SDMMC2_DMA_Rx_IRQHandler(). The corresponding
  49:Src/stm32f7_board_sd.c ****        user callbacks are implemented by the user at application level.
  50:Src/stm32f7_board_sd.c ****      o The SD erase block(s) is performed using the functions BSP_SD_Erase()/BSP_SD_EraseEx()
  51:Src/stm32f7_board_sd.c ****        with specifying the number of blocks to erase.
  52:Src/stm32f7_board_sd.c ****      o The SD runtime status is returned when calling the function BSP_SD_GetCardState()
  53:Src/stm32f7_board_sd.c ****        BSP_SD_GetCardStateEx().
  54:Src/stm32f7_board_sd.c **** 
  55:Src/stm32f7_board_sd.c ****   @endverbatim
  56:Src/stm32f7_board_sd.c ****   ******************************************************************************
  57:Src/stm32f7_board_sd.c ****   * @attention
  58:Src/stm32f7_board_sd.c ****   *
  59:Src/stm32f7_board_sd.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  60:Src/stm32f7_board_sd.c ****   *
  61:Src/stm32f7_board_sd.c ****   * Redistribution and use in source and binary forms, with or without modification,
  62:Src/stm32f7_board_sd.c ****   * are permitted provided that the following conditions are met:
  63:Src/stm32f7_board_sd.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  64:Src/stm32f7_board_sd.c ****   *      this list of conditions and the following disclaimer.
  65:Src/stm32f7_board_sd.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  66:Src/stm32f7_board_sd.c ****   *      this list of conditions and the following disclaimer in the documentation
  67:Src/stm32f7_board_sd.c ****   *      and/or other materials provided with the distribution.
  68:Src/stm32f7_board_sd.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  69:Src/stm32f7_board_sd.c ****   *      may be used to endorse or promote products derived from this software
  70:Src/stm32f7_board_sd.c ****   *      without specific prior written permission.
  71:Src/stm32f7_board_sd.c ****   *
  72:Src/stm32f7_board_sd.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  73:Src/stm32f7_board_sd.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  74:Src/stm32f7_board_sd.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  75:Src/stm32f7_board_sd.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  76:Src/stm32f7_board_sd.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  77:Src/stm32f7_board_sd.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  78:Src/stm32f7_board_sd.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  79:Src/stm32f7_board_sd.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  80:Src/stm32f7_board_sd.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  81:Src/stm32f7_board_sd.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  82:Src/stm32f7_board_sd.c ****   *
  83:Src/stm32f7_board_sd.c ****   ******************************************************************************
  84:Src/stm32f7_board_sd.c ****   */
  85:Src/stm32f7_board_sd.c **** 
  86:Src/stm32f7_board_sd.c **** /* Dependencies
  87:Src/stm32f7_board_sd.c **** - stm32f769i_eval.c
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 3


  88:Src/stm32f7_board_sd.c **** - stm32f7xx_hal_sd.c
  89:Src/stm32f7_board_sd.c **** - stm32f7xx_ll_sdmmc.c
  90:Src/stm32f7_board_sd.c **** - stm32f7xx_hal_dma.c
  91:Src/stm32f7_board_sd.c **** - stm32f7xx_hal_gpio.c
  92:Src/stm32f7_board_sd.c **** - stm32f7xx_hal_cortex.c
  93:Src/stm32f7_board_sd.c **** - stm32f7xx_hal_rcc_ex.h
  94:Src/stm32f7_board_sd.c **** EndDependencies */
  95:Src/stm32f7_board_sd.c **** 
  96:Src/stm32f7_board_sd.c **** /* Includes ------------------------------------------------------------------*/
  97:Src/stm32f7_board_sd.c **** #include "stm32f7xx.h"
  98:Src/stm32f7_board_sd.c **** #include "stm32f7_diskio_dma_rtos.h"
  99:Src/stm32f7_board_sd.c **** 
 100:Src/stm32f7_board_sd.c **** /** @addtogroup BSP
 101:Src/stm32f7_board_sd.c ****   * @{
 102:Src/stm32f7_board_sd.c ****   */
 103:Src/stm32f7_board_sd.c **** 
 104:Src/stm32f7_board_sd.c **** /** @addtogroup STM32F769I_EVAL
 105:Src/stm32f7_board_sd.c ****   * @{
 106:Src/stm32f7_board_sd.c ****   */
 107:Src/stm32f7_board_sd.c **** 
 108:Src/stm32f7_board_sd.c **** /** @defgroup STM32F769I_EVAL_SD STM32F769I_EVAL SD
 109:Src/stm32f7_board_sd.c ****   * @{
 110:Src/stm32f7_board_sd.c ****   */
 111:Src/stm32f7_board_sd.c **** 
 112:Src/stm32f7_board_sd.c **** 
 113:Src/stm32f7_board_sd.c **** /** @defgroup STM32F769I_EVAL_SD_Private_TypesDefinitions SD Private TypesDefinitions
 114:Src/stm32f7_board_sd.c ****   * @{
 115:Src/stm32f7_board_sd.c ****   */
 116:Src/stm32f7_board_sd.c **** /**
 117:Src/stm32f7_board_sd.c ****   * @}
 118:Src/stm32f7_board_sd.c ****   */
 119:Src/stm32f7_board_sd.c **** 
 120:Src/stm32f7_board_sd.c **** /** @defgroup STM32F769I_EVAL_SD_Private_Defines SD Private Defines
 121:Src/stm32f7_board_sd.c ****   * @{
 122:Src/stm32f7_board_sd.c ****   */
 123:Src/stm32f7_board_sd.c **** /**
 124:Src/stm32f7_board_sd.c ****   * @}
 125:Src/stm32f7_board_sd.c ****   */
 126:Src/stm32f7_board_sd.c **** 
 127:Src/stm32f7_board_sd.c **** /** @defgroup STM32F769I_EVAL_SD_Private_Macros SD Private Macros
 128:Src/stm32f7_board_sd.c ****   * @{
 129:Src/stm32f7_board_sd.c ****   */
 130:Src/stm32f7_board_sd.c **** /**
 131:Src/stm32f7_board_sd.c ****   * @}
 132:Src/stm32f7_board_sd.c ****   */
 133:Src/stm32f7_board_sd.c **** 
 134:Src/stm32f7_board_sd.c **** /** @defgroup STM32F769I_EVAL_SD_Private_Variables SD Private Variables
 135:Src/stm32f7_board_sd.c ****   * @{
 136:Src/stm32f7_board_sd.c ****   */
 137:Src/stm32f7_board_sd.c **** SD_HandleTypeDef uSdHandle;
 138:Src/stm32f7_board_sd.c **** //static uint8_t UseExtiModeDetection = 0;
 139:Src/stm32f7_board_sd.c **** 
 140:Src/stm32f7_board_sd.c **** /**
 141:Src/stm32f7_board_sd.c ****   * @}
 142:Src/stm32f7_board_sd.c ****   */
 143:Src/stm32f7_board_sd.c **** 
 144:Src/stm32f7_board_sd.c **** /** @defgroup STM32F769I_EVAL_SD_Private_Functions_Prototypes SD Private Functions Prototypes
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 4


 145:Src/stm32f7_board_sd.c ****   * @{
 146:Src/stm32f7_board_sd.c ****   */
 147:Src/stm32f7_board_sd.c **** /**
 148:Src/stm32f7_board_sd.c ****   * @}
 149:Src/stm32f7_board_sd.c ****   */
 150:Src/stm32f7_board_sd.c **** 
 151:Src/stm32f7_board_sd.c **** /** @defgroup STM32F769I_EVAL_SD_Private_Functions SD Private Functions
 152:Src/stm32f7_board_sd.c ****   * @{
 153:Src/stm32f7_board_sd.c ****   */
 154:Src/stm32f7_board_sd.c **** 
 155:Src/stm32f7_board_sd.c **** /**
 156:Src/stm32f7_board_sd.c ****   * @brief  Initializes the SD card device.
 157:Src/stm32f7_board_sd.c ****   * @retval SD status
 158:Src/stm32f7_board_sd.c ****   */
 159:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_Init(void)
 160:Src/stm32f7_board_sd.c **** {
 161:Src/stm32f7_board_sd.c ****   /* By default, initialize SDMMC1 */
 162:Src/stm32f7_board_sd.c ****   return BSP_SD_InitEx(SD_CARD1);
 163:Src/stm32f7_board_sd.c **** }
 164:Src/stm32f7_board_sd.c **** 
 165:Src/stm32f7_board_sd.c **** /**
 166:Src/stm32f7_board_sd.c ****   * @brief  Initializes the SD card device.
 167:Src/stm32f7_board_sd.c ****   * @param  SdCard: SD card to be used, that should be SD_CARD1 or SD_CARD2
 168:Src/stm32f7_board_sd.c ****   * @retval SD status
 169:Src/stm32f7_board_sd.c ****   */
 170:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_InitEx(uint32_t SdCard)
 171:Src/stm32f7_board_sd.c **** {
 172:Src/stm32f7_board_sd.c ****   uint8_t sd_state = MSD_OK;
 173:Src/stm32f7_board_sd.c **** 
 174:Src/stm32f7_board_sd.c ****     uSdHandle.Instance = SDMMC1;
 175:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockEdge           = SDMMC_CLOCK_EDGE_RISING;
 176:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockBypass         = SDMMC_CLOCK_BYPASS_DISABLE;
 177:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockPowerSave      = SDMMC_CLOCK_POWER_SAVE_DISABLE;
 178:Src/stm32f7_board_sd.c ****     uSdHandle.Init.BusWide             = SDMMC_BUS_WIDE_1B;
 179:Src/stm32f7_board_sd.c ****     uSdHandle.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
 180:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockDiv            = SDMMC_TRANSFER_CLK_DIV;
 181:Src/stm32f7_board_sd.c **** 
 182:Src/stm32f7_board_sd.c **** /* Msp SD initialization */
 183:Src/stm32f7_board_sd.c ****   BSP_SD_MspInit(&uSdHandle, NULL);
 184:Src/stm32f7_board_sd.c **** 
 185:Src/stm32f7_board_sd.c ****   /* HAL SD initialization */
 186:Src/stm32f7_board_sd.c ****   if(HAL_SD_Init(&uSdHandle) != HAL_OK)
 187:Src/stm32f7_board_sd.c ****   {
 188:Src/stm32f7_board_sd.c ****     sd_state = MSD_ERROR;
 189:Src/stm32f7_board_sd.c ****   }
 190:Src/stm32f7_board_sd.c **** 
 191:Src/stm32f7_board_sd.c ****   /* Configure SD Bus width */
 192:Src/stm32f7_board_sd.c ****   if(sd_state == MSD_OK)
 193:Src/stm32f7_board_sd.c ****   {
 194:Src/stm32f7_board_sd.c ****       /* Enable wide operation */
 195:Src/stm32f7_board_sd.c ****     sd_state = HAL_SD_ConfigWideBusOperation(&uSdHandle, SDMMC_BUS_WIDE_4B);
 196:Src/stm32f7_board_sd.c **** 
 197:Src/stm32f7_board_sd.c ****     if(sd_state != HAL_OK)
 198:Src/stm32f7_board_sd.c ****     {
 199:Src/stm32f7_board_sd.c ****       sd_state = MSD_ERROR;
 200:Src/stm32f7_board_sd.c ****     }
 201:Src/stm32f7_board_sd.c ****     else
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 5


 202:Src/stm32f7_board_sd.c ****     {
 203:Src/stm32f7_board_sd.c ****       sd_state = MSD_OK;
 204:Src/stm32f7_board_sd.c ****     }
 205:Src/stm32f7_board_sd.c ****   }
 206:Src/stm32f7_board_sd.c **** 
 207:Src/stm32f7_board_sd.c ****   return  sd_state;
 208:Src/stm32f7_board_sd.c **** }
 209:Src/stm32f7_board_sd.c **** 
 210:Src/stm32f7_board_sd.c **** /**
 211:Src/stm32f7_board_sd.c ****   * @brief  DeInitializes the SD card device.
 212:Src/stm32f7_board_sd.c ****   * @retval SD status
 213:Src/stm32f7_board_sd.c ****   */
 214:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_DeInit(void)
 215:Src/stm32f7_board_sd.c **** {
  29              		.loc 1 215 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 216:Src/stm32f7_board_sd.c ****   /* By default, DeInitialize SDMMC1 */
 217:Src/stm32f7_board_sd.c ****   return BSP_SD_DeInitEx(SD_CARD1);
  38              		.loc 1 217 3 view .LVU1
  39              		.loc 1 217 10 is_stmt 0 view .LVU2
  40 0002 0020     		movs	r0, #0
  41 0004 FFF7FEFF 		bl	BSP_SD_DeInitEx
  42              	.LVL0:
 218:Src/stm32f7_board_sd.c **** }
  43              		.loc 1 218 1 view .LVU3
  44 0008 08BD     		pop	{r3, pc}
  45              		.cfi_endproc
  46              	.LFE140:
  48              		.section	.text.BSP_SD_ReadBlocksEx,"ax",%progbits
  49              		.align	1
  50              		.global	BSP_SD_ReadBlocksEx
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv5-sp-d16
  56              	BSP_SD_ReadBlocksEx:
  57              	.LVL1:
  58              	.LFB142:
 219:Src/stm32f7_board_sd.c **** 
 220:Src/stm32f7_board_sd.c **** 
 221:Src/stm32f7_board_sd.c **** 
 222:Src/stm32f7_board_sd.c **** /**
 223:Src/stm32f7_board_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in polling mode.
 224:Src/stm32f7_board_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 225:Src/stm32f7_board_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 226:Src/stm32f7_board_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 227:Src/stm32f7_board_sd.c ****   * @param  Timeout: Timeout for read operation
 228:Src/stm32f7_board_sd.c ****   * @retval SD status
 229:Src/stm32f7_board_sd.c ****   */
 230:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_ReadBlocks(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks, uint32_t Timeou
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 6


 231:Src/stm32f7_board_sd.c **** {
 232:Src/stm32f7_board_sd.c ****   return BSP_SD_ReadBlocksEx(SD_CARD1, pData, ReadAddr, NumOfBlocks, Timeout);
 233:Src/stm32f7_board_sd.c **** }
 234:Src/stm32f7_board_sd.c **** 
 235:Src/stm32f7_board_sd.c **** /**
 236:Src/stm32f7_board_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in polling mode.
 237:Src/stm32f7_board_sd.c ****   * @param  SdCard: SD card to be used, that should be SD_CARD1 or SD_CARD2
 238:Src/stm32f7_board_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 239:Src/stm32f7_board_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 240:Src/stm32f7_board_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 241:Src/stm32f7_board_sd.c ****   * @param  Timeout: Timeout for read operation
 242:Src/stm32f7_board_sd.c ****   * @retval SD status
 243:Src/stm32f7_board_sd.c ****   */
 244:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_ReadBlocksEx(uint32_t SdCard, uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBloc
 245:Src/stm32f7_board_sd.c **** {
  59              		.loc 1 245 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 4, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		.loc 1 245 1 is_stmt 0 view .LVU5
  64 0000 00B5     		push	{lr}
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 4
  67              		.cfi_offset 14, -4
  68 0002 83B0     		sub	sp, sp, #12
  69              	.LCFI2:
  70              		.cfi_def_cfa_offset 16
 246:Src/stm32f7_board_sd.c ****   HAL_StatusTypeDef  sd_state = HAL_OK;
  71              		.loc 1 246 3 is_stmt 1 view .LVU6
  72              	.LVL2:
 247:Src/stm32f7_board_sd.c **** 
 248:Src/stm32f7_board_sd.c ****   sd_state = HAL_SD_ReadBlocks(&uSdHandle, (uint8_t *)pData, ReadAddr, NumOfBlocks, Timeout);
  73              		.loc 1 248 3 view .LVU7
  74              		.loc 1 248 14 is_stmt 0 view .LVU8
  75 0004 0498     		ldr	r0, [sp, #16]
  76              	.LVL3:
  77              		.loc 1 248 14 view .LVU9
  78 0006 0090     		str	r0, [sp]
  79 0008 0348     		ldr	r0, .L7
  80 000a FFF7FEFF 		bl	HAL_SD_ReadBlocks
  81              	.LVL4:
 249:Src/stm32f7_board_sd.c ****   if( sd_state == HAL_OK)
  82              		.loc 1 249 3 is_stmt 1 view .LVU10
  83              		.loc 1 249 5 is_stmt 0 view .LVU11
  84 000e 00B1     		cbz	r0, .L4
 250:Src/stm32f7_board_sd.c ****   {
 251:Src/stm32f7_board_sd.c ****     return MSD_OK;
 252:Src/stm32f7_board_sd.c ****   }
 253:Src/stm32f7_board_sd.c ****   else
 254:Src/stm32f7_board_sd.c ****   {
 255:Src/stm32f7_board_sd.c ****     return MSD_ERROR;
  85              		.loc 1 255 12 view .LVU12
  86 0010 0120     		movs	r0, #1
  87              	.L4:
 256:Src/stm32f7_board_sd.c ****   }
 257:Src/stm32f7_board_sd.c **** }
  88              		.loc 1 257 1 view .LVU13
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 7


  89 0012 03B0     		add	sp, sp, #12
  90              	.LCFI3:
  91              		.cfi_def_cfa_offset 4
  92              		@ sp needed
  93 0014 5DF804FB 		ldr	pc, [sp], #4
  94              	.LVL5:
  95              	.L8:
  96              		.loc 1 257 1 view .LVU14
  97              		.align	2
  98              	.L7:
  99 0018 00000000 		.word	uSdHandle
 100              		.cfi_endproc
 101              	.LFE142:
 103              		.section	.text.BSP_SD_ReadBlocks,"ax",%progbits
 104              		.align	1
 105              		.global	BSP_SD_ReadBlocks
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu fpv5-sp-d16
 111              	BSP_SD_ReadBlocks:
 112              	.LVL6:
 113              	.LFB141:
 231:Src/stm32f7_board_sd.c ****   return BSP_SD_ReadBlocksEx(SD_CARD1, pData, ReadAddr, NumOfBlocks, Timeout);
 114              		.loc 1 231 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 231:Src/stm32f7_board_sd.c ****   return BSP_SD_ReadBlocksEx(SD_CARD1, pData, ReadAddr, NumOfBlocks, Timeout);
 118              		.loc 1 231 1 is_stmt 0 view .LVU16
 119 0000 00B5     		push	{lr}
 120              	.LCFI4:
 121              		.cfi_def_cfa_offset 4
 122              		.cfi_offset 14, -4
 123 0002 83B0     		sub	sp, sp, #12
 124              	.LCFI5:
 125              		.cfi_def_cfa_offset 16
 232:Src/stm32f7_board_sd.c **** }
 126              		.loc 1 232 3 is_stmt 1 view .LVU17
 232:Src/stm32f7_board_sd.c **** }
 127              		.loc 1 232 10 is_stmt 0 view .LVU18
 128 0004 0093     		str	r3, [sp]
 129 0006 1346     		mov	r3, r2
 130              	.LVL7:
 232:Src/stm32f7_board_sd.c **** }
 131              		.loc 1 232 10 view .LVU19
 132 0008 0A46     		mov	r2, r1
 133              	.LVL8:
 232:Src/stm32f7_board_sd.c **** }
 134              		.loc 1 232 10 view .LVU20
 135 000a 0146     		mov	r1, r0
 136              	.LVL9:
 232:Src/stm32f7_board_sd.c **** }
 137              		.loc 1 232 10 view .LVU21
 138 000c 0020     		movs	r0, #0
 139              	.LVL10:
 232:Src/stm32f7_board_sd.c **** }
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 8


 140              		.loc 1 232 10 view .LVU22
 141 000e FFF7FEFF 		bl	BSP_SD_ReadBlocksEx
 142              	.LVL11:
 233:Src/stm32f7_board_sd.c **** 
 143              		.loc 1 233 1 view .LVU23
 144 0012 03B0     		add	sp, sp, #12
 145              	.LCFI6:
 146              		.cfi_def_cfa_offset 4
 147              		@ sp needed
 148 0014 5DF804FB 		ldr	pc, [sp], #4
 149              		.cfi_endproc
 150              	.LFE141:
 152              		.section	.text.BSP_SD_WriteBlocksEx,"ax",%progbits
 153              		.align	1
 154              		.global	BSP_SD_WriteBlocksEx
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv5-sp-d16
 160              	BSP_SD_WriteBlocksEx:
 161              	.LVL12:
 162              	.LFB144:
 258:Src/stm32f7_board_sd.c **** 
 259:Src/stm32f7_board_sd.c **** /**
 260:Src/stm32f7_board_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in polling mode.
 261:Src/stm32f7_board_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 262:Src/stm32f7_board_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 263:Src/stm32f7_board_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 264:Src/stm32f7_board_sd.c ****   * @param  Timeout: Timeout for write operation
 265:Src/stm32f7_board_sd.c ****   * @retval SD status
 266:Src/stm32f7_board_sd.c ****   */
 267:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_WriteBlocks(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks, uint32_t Time
 268:Src/stm32f7_board_sd.c **** {
 269:Src/stm32f7_board_sd.c ****     return BSP_SD_WriteBlocksEx(SD_CARD1, pData, WriteAddr, NumOfBlocks, Timeout);
 270:Src/stm32f7_board_sd.c **** }
 271:Src/stm32f7_board_sd.c **** 
 272:Src/stm32f7_board_sd.c **** /**
 273:Src/stm32f7_board_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in polling mode.
 274:Src/stm32f7_board_sd.c ****   * @param  SdCard: SD card to be used, that should be SD_CARD1 or SD_CARD2
 275:Src/stm32f7_board_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 276:Src/stm32f7_board_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 277:Src/stm32f7_board_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 278:Src/stm32f7_board_sd.c ****   * @param  Timeout: Timeout for write operation
 279:Src/stm32f7_board_sd.c ****   * @retval SD status
 280:Src/stm32f7_board_sd.c ****   */
 281:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_WriteBlocksEx(uint32_t SdCard, uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBl
 282:Src/stm32f7_board_sd.c **** {
 163              		.loc 1 282 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 4, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		.loc 1 282 1 is_stmt 0 view .LVU25
 168 0000 00B5     		push	{lr}
 169              	.LCFI7:
 170              		.cfi_def_cfa_offset 4
 171              		.cfi_offset 14, -4
 172 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 9


 173              	.LCFI8:
 174              		.cfi_def_cfa_offset 16
 283:Src/stm32f7_board_sd.c ****   HAL_StatusTypeDef  sd_state = HAL_OK;
 175              		.loc 1 283 3 is_stmt 1 view .LVU26
 176              	.LVL13:
 284:Src/stm32f7_board_sd.c **** 
 285:Src/stm32f7_board_sd.c ****   sd_state = HAL_SD_WriteBlocks(&uSdHandle, (uint8_t *)pData, WriteAddr, NumOfBlocks, Timeout);
 177              		.loc 1 285 3 view .LVU27
 178              		.loc 1 285 14 is_stmt 0 view .LVU28
 179 0004 0498     		ldr	r0, [sp, #16]
 180              	.LVL14:
 181              		.loc 1 285 14 view .LVU29
 182 0006 0090     		str	r0, [sp]
 183 0008 0348     		ldr	r0, .L15
 184 000a FFF7FEFF 		bl	HAL_SD_WriteBlocks
 185              	.LVL15:
 286:Src/stm32f7_board_sd.c ****   if( sd_state == HAL_OK)
 186              		.loc 1 286 3 is_stmt 1 view .LVU30
 187              		.loc 1 286 5 is_stmt 0 view .LVU31
 188 000e 00B1     		cbz	r0, .L12
 287:Src/stm32f7_board_sd.c ****   {
 288:Src/stm32f7_board_sd.c ****     return MSD_OK;
 289:Src/stm32f7_board_sd.c ****   }
 290:Src/stm32f7_board_sd.c ****   else
 291:Src/stm32f7_board_sd.c ****   {
 292:Src/stm32f7_board_sd.c ****     return MSD_ERROR;
 189              		.loc 1 292 12 view .LVU32
 190 0010 0120     		movs	r0, #1
 191              	.L12:
 293:Src/stm32f7_board_sd.c ****   }
 294:Src/stm32f7_board_sd.c **** }
 192              		.loc 1 294 1 view .LVU33
 193 0012 03B0     		add	sp, sp, #12
 194              	.LCFI9:
 195              		.cfi_def_cfa_offset 4
 196              		@ sp needed
 197 0014 5DF804FB 		ldr	pc, [sp], #4
 198              	.LVL16:
 199              	.L16:
 200              		.loc 1 294 1 view .LVU34
 201              		.align	2
 202              	.L15:
 203 0018 00000000 		.word	uSdHandle
 204              		.cfi_endproc
 205              	.LFE144:
 207              		.section	.text.BSP_SD_WriteBlocks,"ax",%progbits
 208              		.align	1
 209              		.global	BSP_SD_WriteBlocks
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv5-sp-d16
 215              	BSP_SD_WriteBlocks:
 216              	.LVL17:
 217              	.LFB143:
 268:Src/stm32f7_board_sd.c ****     return BSP_SD_WriteBlocksEx(SD_CARD1, pData, WriteAddr, NumOfBlocks, Timeout);
 218              		.loc 1 268 1 is_stmt 1 view -0
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 10


 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 268:Src/stm32f7_board_sd.c ****     return BSP_SD_WriteBlocksEx(SD_CARD1, pData, WriteAddr, NumOfBlocks, Timeout);
 222              		.loc 1 268 1 is_stmt 0 view .LVU36
 223 0000 00B5     		push	{lr}
 224              	.LCFI10:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI11:
 229              		.cfi_def_cfa_offset 16
 269:Src/stm32f7_board_sd.c **** }
 230              		.loc 1 269 5 is_stmt 1 view .LVU37
 269:Src/stm32f7_board_sd.c **** }
 231              		.loc 1 269 12 is_stmt 0 view .LVU38
 232 0004 0093     		str	r3, [sp]
 233 0006 1346     		mov	r3, r2
 234              	.LVL18:
 269:Src/stm32f7_board_sd.c **** }
 235              		.loc 1 269 12 view .LVU39
 236 0008 0A46     		mov	r2, r1
 237              	.LVL19:
 269:Src/stm32f7_board_sd.c **** }
 238              		.loc 1 269 12 view .LVU40
 239 000a 0146     		mov	r1, r0
 240              	.LVL20:
 269:Src/stm32f7_board_sd.c **** }
 241              		.loc 1 269 12 view .LVU41
 242 000c 0020     		movs	r0, #0
 243              	.LVL21:
 269:Src/stm32f7_board_sd.c **** }
 244              		.loc 1 269 12 view .LVU42
 245 000e FFF7FEFF 		bl	BSP_SD_WriteBlocksEx
 246              	.LVL22:
 270:Src/stm32f7_board_sd.c **** 
 247              		.loc 1 270 1 view .LVU43
 248 0012 03B0     		add	sp, sp, #12
 249              	.LCFI12:
 250              		.cfi_def_cfa_offset 4
 251              		@ sp needed
 252 0014 5DF804FB 		ldr	pc, [sp], #4
 253              		.cfi_endproc
 254              	.LFE143:
 256              		.section	.text.BSP_SD_ReadBlocks_DMAEx,"ax",%progbits
 257              		.align	1
 258              		.global	BSP_SD_ReadBlocks_DMAEx
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu fpv5-sp-d16
 264              	BSP_SD_ReadBlocks_DMAEx:
 265              	.LVL23:
 266              	.LFB146:
 295:Src/stm32f7_board_sd.c **** 
 296:Src/stm32f7_board_sd.c **** /**
 297:Src/stm32f7_board_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in DMA mode.
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 11


 298:Src/stm32f7_board_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 299:Src/stm32f7_board_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 300:Src/stm32f7_board_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 301:Src/stm32f7_board_sd.c ****   * @retval SD status
 302:Src/stm32f7_board_sd.c ****   */
 303:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_ReadBlocks_DMA(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks)
 304:Src/stm32f7_board_sd.c **** {
 305:Src/stm32f7_board_sd.c ****   return BSP_SD_ReadBlocks_DMAEx(SD_CARD1, pData, ReadAddr, NumOfBlocks);
 306:Src/stm32f7_board_sd.c **** }
 307:Src/stm32f7_board_sd.c **** 
 308:Src/stm32f7_board_sd.c **** /**
 309:Src/stm32f7_board_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in DMA mode.
 310:Src/stm32f7_board_sd.c ****   * @param  SdCard: SD card to be used, that should be SD_CARD1 or SD_CARD2
 311:Src/stm32f7_board_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 312:Src/stm32f7_board_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 313:Src/stm32f7_board_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 314:Src/stm32f7_board_sd.c ****   * @retval SD status
 315:Src/stm32f7_board_sd.c ****   */
 316:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_ReadBlocks_DMAEx(uint32_t SdCard, uint32_t *pData, uint32_t ReadAddr, uint32_t NumOf
 317:Src/stm32f7_board_sd.c **** {
 267              		.loc 1 317 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		.loc 1 317 1 is_stmt 0 view .LVU45
 272 0000 08B5     		push	{r3, lr}
 273              	.LCFI13:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 3, -8
 276              		.cfi_offset 14, -4
 318:Src/stm32f7_board_sd.c ****   HAL_StatusTypeDef  sd_state = HAL_OK;
 277              		.loc 1 318 3 is_stmt 1 view .LVU46
 278              	.LVL24:
 319:Src/stm32f7_board_sd.c **** 
 320:Src/stm32f7_board_sd.c ****   sd_state = HAL_SD_ReadBlocks_DMA(&uSdHandle, (uint8_t *)pData, ReadAddr, NumOfBlocks);
 279              		.loc 1 320 3 view .LVU47
 280              		.loc 1 320 14 is_stmt 0 view .LVU48
 281 0002 0348     		ldr	r0, .L23
 282              	.LVL25:
 283              		.loc 1 320 14 view .LVU49
 284 0004 FFF7FEFF 		bl	HAL_SD_ReadBlocks_DMA
 285              	.LVL26:
 321:Src/stm32f7_board_sd.c ****   if( sd_state == HAL_OK)
 286              		.loc 1 321 3 is_stmt 1 view .LVU50
 287              		.loc 1 321 5 is_stmt 0 view .LVU51
 288 0008 00B1     		cbz	r0, .L20
 322:Src/stm32f7_board_sd.c ****   {
 323:Src/stm32f7_board_sd.c ****     return MSD_OK;
 324:Src/stm32f7_board_sd.c ****   }
 325:Src/stm32f7_board_sd.c ****   else
 326:Src/stm32f7_board_sd.c ****   {
 327:Src/stm32f7_board_sd.c ****     return MSD_ERROR;
 289              		.loc 1 327 12 view .LVU52
 290 000a 0120     		movs	r0, #1
 291              	.L20:
 328:Src/stm32f7_board_sd.c ****   }
 329:Src/stm32f7_board_sd.c **** }
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 12


 292              		.loc 1 329 1 view .LVU53
 293 000c 08BD     		pop	{r3, pc}
 294              	.L24:
 295 000e 00BF     		.align	2
 296              	.L23:
 297 0010 00000000 		.word	uSdHandle
 298              		.cfi_endproc
 299              	.LFE146:
 301              		.section	.text.BSP_SD_ReadBlocks_DMA,"ax",%progbits
 302              		.align	1
 303              		.global	BSP_SD_ReadBlocks_DMA
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu fpv5-sp-d16
 309              	BSP_SD_ReadBlocks_DMA:
 310              	.LVL27:
 311              	.LFB145:
 304:Src/stm32f7_board_sd.c ****   return BSP_SD_ReadBlocks_DMAEx(SD_CARD1, pData, ReadAddr, NumOfBlocks);
 312              		.loc 1 304 1 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 304:Src/stm32f7_board_sd.c ****   return BSP_SD_ReadBlocks_DMAEx(SD_CARD1, pData, ReadAddr, NumOfBlocks);
 316              		.loc 1 304 1 is_stmt 0 view .LVU55
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI14:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 322 0002 1346     		mov	r3, r2
 305:Src/stm32f7_board_sd.c **** }
 323              		.loc 1 305 3 is_stmt 1 view .LVU56
 305:Src/stm32f7_board_sd.c **** }
 324              		.loc 1 305 10 is_stmt 0 view .LVU57
 325 0004 0A46     		mov	r2, r1
 326              	.LVL28:
 305:Src/stm32f7_board_sd.c **** }
 327              		.loc 1 305 10 view .LVU58
 328 0006 0146     		mov	r1, r0
 329              	.LVL29:
 305:Src/stm32f7_board_sd.c **** }
 330              		.loc 1 305 10 view .LVU59
 331 0008 0020     		movs	r0, #0
 332              	.LVL30:
 305:Src/stm32f7_board_sd.c **** }
 333              		.loc 1 305 10 view .LVU60
 334 000a FFF7FEFF 		bl	BSP_SD_ReadBlocks_DMAEx
 335              	.LVL31:
 306:Src/stm32f7_board_sd.c **** 
 336              		.loc 1 306 1 view .LVU61
 337 000e 08BD     		pop	{r3, pc}
 338              		.cfi_endproc
 339              	.LFE145:
 341              		.section	.text.BSP_SD_WriteBlocks_DMAEx,"ax",%progbits
 342              		.align	1
 343              		.global	BSP_SD_WriteBlocks_DMAEx
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 13


 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv5-sp-d16
 349              	BSP_SD_WriteBlocks_DMAEx:
 350              	.LVL32:
 351              	.LFB148:
 330:Src/stm32f7_board_sd.c **** 
 331:Src/stm32f7_board_sd.c **** /**
 332:Src/stm32f7_board_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in DMA mode.
 333:Src/stm32f7_board_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 334:Src/stm32f7_board_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 335:Src/stm32f7_board_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 336:Src/stm32f7_board_sd.c ****   * @retval SD status
 337:Src/stm32f7_board_sd.c ****   */
 338:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_WriteBlocks_DMA(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks)
 339:Src/stm32f7_board_sd.c **** {
 340:Src/stm32f7_board_sd.c ****   return BSP_SD_WriteBlocks_DMAEx(SD_CARD1, pData, WriteAddr, NumOfBlocks);
 341:Src/stm32f7_board_sd.c **** }
 342:Src/stm32f7_board_sd.c **** 
 343:Src/stm32f7_board_sd.c **** /**
 344:Src/stm32f7_board_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in DMA mode.
 345:Src/stm32f7_board_sd.c ****   * @param  SdCard: SD card to be used, that should be SD_CARD1 or SD_CARD2
 346:Src/stm32f7_board_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 347:Src/stm32f7_board_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 348:Src/stm32f7_board_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 349:Src/stm32f7_board_sd.c ****   * @retval SD status
 350:Src/stm32f7_board_sd.c ****   */
 351:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_WriteBlocks_DMAEx(uint32_t SdCard, uint32_t *pData, uint32_t WriteAddr, uint32_t Num
 352:Src/stm32f7_board_sd.c **** {
 352              		.loc 1 352 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		.loc 1 352 1 is_stmt 0 view .LVU63
 357 0000 08B5     		push	{r3, lr}
 358              	.LCFI15:
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 3, -8
 361              		.cfi_offset 14, -4
 353:Src/stm32f7_board_sd.c ****   HAL_StatusTypeDef  sd_state = HAL_OK;
 362              		.loc 1 353 3 is_stmt 1 view .LVU64
 363              	.LVL33:
 354:Src/stm32f7_board_sd.c **** 
 355:Src/stm32f7_board_sd.c ****     /* Write block(s) in DMA transfer mode */
 356:Src/stm32f7_board_sd.c ****   sd_state = HAL_SD_WriteBlocks_DMA(&uSdHandle, (uint8_t *)pData, WriteAddr, NumOfBlocks);
 364              		.loc 1 356 3 view .LVU65
 365              		.loc 1 356 14 is_stmt 0 view .LVU66
 366 0002 0348     		ldr	r0, .L31
 367              	.LVL34:
 368              		.loc 1 356 14 view .LVU67
 369 0004 FFF7FEFF 		bl	HAL_SD_WriteBlocks_DMA
 370              	.LVL35:
 357:Src/stm32f7_board_sd.c **** 
 358:Src/stm32f7_board_sd.c ****   if( sd_state == HAL_OK)
 371              		.loc 1 358 3 is_stmt 1 view .LVU68
 372              		.loc 1 358 5 is_stmt 0 view .LVU69
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 14


 373 0008 00B1     		cbz	r0, .L28
 359:Src/stm32f7_board_sd.c ****   {
 360:Src/stm32f7_board_sd.c ****     return MSD_OK;
 361:Src/stm32f7_board_sd.c ****   }
 362:Src/stm32f7_board_sd.c ****   else
 363:Src/stm32f7_board_sd.c ****   {
 364:Src/stm32f7_board_sd.c ****     return MSD_ERROR;
 374              		.loc 1 364 12 view .LVU70
 375 000a 0120     		movs	r0, #1
 376              	.L28:
 365:Src/stm32f7_board_sd.c ****   }
 366:Src/stm32f7_board_sd.c **** }
 377              		.loc 1 366 1 view .LVU71
 378 000c 08BD     		pop	{r3, pc}
 379              	.L32:
 380 000e 00BF     		.align	2
 381              	.L31:
 382 0010 00000000 		.word	uSdHandle
 383              		.cfi_endproc
 384              	.LFE148:
 386              		.section	.text.BSP_SD_WriteBlocks_DMA,"ax",%progbits
 387              		.align	1
 388              		.global	BSP_SD_WriteBlocks_DMA
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv5-sp-d16
 394              	BSP_SD_WriteBlocks_DMA:
 395              	.LVL36:
 396              	.LFB147:
 339:Src/stm32f7_board_sd.c ****   return BSP_SD_WriteBlocks_DMAEx(SD_CARD1, pData, WriteAddr, NumOfBlocks);
 397              		.loc 1 339 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 339:Src/stm32f7_board_sd.c ****   return BSP_SD_WriteBlocks_DMAEx(SD_CARD1, pData, WriteAddr, NumOfBlocks);
 401              		.loc 1 339 1 is_stmt 0 view .LVU73
 402 0000 08B5     		push	{r3, lr}
 403              	.LCFI16:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
 407 0002 1346     		mov	r3, r2
 340:Src/stm32f7_board_sd.c **** }
 408              		.loc 1 340 3 is_stmt 1 view .LVU74
 340:Src/stm32f7_board_sd.c **** }
 409              		.loc 1 340 10 is_stmt 0 view .LVU75
 410 0004 0A46     		mov	r2, r1
 411              	.LVL37:
 340:Src/stm32f7_board_sd.c **** }
 412              		.loc 1 340 10 view .LVU76
 413 0006 0146     		mov	r1, r0
 414              	.LVL38:
 340:Src/stm32f7_board_sd.c **** }
 415              		.loc 1 340 10 view .LVU77
 416 0008 0020     		movs	r0, #0
 417              	.LVL39:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 15


 340:Src/stm32f7_board_sd.c **** }
 418              		.loc 1 340 10 view .LVU78
 419 000a FFF7FEFF 		bl	BSP_SD_WriteBlocks_DMAEx
 420              	.LVL40:
 341:Src/stm32f7_board_sd.c **** 
 421              		.loc 1 341 1 view .LVU79
 422 000e 08BD     		pop	{r3, pc}
 423              		.cfi_endproc
 424              	.LFE147:
 426              		.section	.text.BSP_SD_EraseEx,"ax",%progbits
 427              		.align	1
 428              		.global	BSP_SD_EraseEx
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv5-sp-d16
 434              	BSP_SD_EraseEx:
 435              	.LVL41:
 436              	.LFB150:
 367:Src/stm32f7_board_sd.c **** 
 368:Src/stm32f7_board_sd.c **** /**
 369:Src/stm32f7_board_sd.c ****   * @brief  Erases the specified memory area of the given SD card.
 370:Src/stm32f7_board_sd.c ****   * @param  StartAddr: Start byte address
 371:Src/stm32f7_board_sd.c ****   * @param  EndAddr: End byte address
 372:Src/stm32f7_board_sd.c ****   * @retval SD status
 373:Src/stm32f7_board_sd.c ****   */
 374:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_Erase(uint32_t StartAddr, uint32_t EndAddr)
 375:Src/stm32f7_board_sd.c **** {
 376:Src/stm32f7_board_sd.c ****   return BSP_SD_EraseEx(SD_CARD1, StartAddr, EndAddr);
 377:Src/stm32f7_board_sd.c **** }
 378:Src/stm32f7_board_sd.c **** 
 379:Src/stm32f7_board_sd.c **** /**
 380:Src/stm32f7_board_sd.c ****   * @brief  Erases the specified memory area of the given SD card.
 381:Src/stm32f7_board_sd.c ****   * @param  SdCard: SD card to be used, that should be SD_CARD1 or SD_CARD2
 382:Src/stm32f7_board_sd.c ****   * @param  StartAddr: Start byte address
 383:Src/stm32f7_board_sd.c ****   * @param  EndAddr: End byte address
 384:Src/stm32f7_board_sd.c ****   * @retval SD status
 385:Src/stm32f7_board_sd.c ****   */
 386:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_EraseEx(uint32_t SdCard, uint32_t StartAddr, uint32_t EndAddr)
 387:Src/stm32f7_board_sd.c **** {
 437              		.loc 1 387 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		.loc 1 387 1 is_stmt 0 view .LVU81
 442 0000 08B5     		push	{r3, lr}
 443              	.LCFI17:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 3, -8
 446              		.cfi_offset 14, -4
 388:Src/stm32f7_board_sd.c ****   HAL_StatusTypeDef  sd_state = HAL_OK;
 447              		.loc 1 388 3 is_stmt 1 view .LVU82
 448              	.LVL42:
 389:Src/stm32f7_board_sd.c **** 
 390:Src/stm32f7_board_sd.c ****   sd_state = HAL_SD_Erase(&uSdHandle, StartAddr, EndAddr);
 449              		.loc 1 390 3 view .LVU83
 450              		.loc 1 390 14 is_stmt 0 view .LVU84
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 16


 451 0002 0348     		ldr	r0, .L39
 452              	.LVL43:
 453              		.loc 1 390 14 view .LVU85
 454 0004 FFF7FEFF 		bl	HAL_SD_Erase
 455              	.LVL44:
 391:Src/stm32f7_board_sd.c ****   if( sd_state == HAL_OK)
 456              		.loc 1 391 3 is_stmt 1 view .LVU86
 457              		.loc 1 391 5 is_stmt 0 view .LVU87
 458 0008 00B1     		cbz	r0, .L36
 392:Src/stm32f7_board_sd.c ****   {
 393:Src/stm32f7_board_sd.c ****     return MSD_OK;
 394:Src/stm32f7_board_sd.c ****   }
 395:Src/stm32f7_board_sd.c ****   else
 396:Src/stm32f7_board_sd.c ****   {
 397:Src/stm32f7_board_sd.c ****     return MSD_ERROR;
 459              		.loc 1 397 12 view .LVU88
 460 000a 0120     		movs	r0, #1
 461              	.L36:
 398:Src/stm32f7_board_sd.c ****   }
 399:Src/stm32f7_board_sd.c **** }
 462              		.loc 1 399 1 view .LVU89
 463 000c 08BD     		pop	{r3, pc}
 464              	.L40:
 465 000e 00BF     		.align	2
 466              	.L39:
 467 0010 00000000 		.word	uSdHandle
 468              		.cfi_endproc
 469              	.LFE150:
 471              		.section	.text.BSP_SD_Erase,"ax",%progbits
 472              		.align	1
 473              		.global	BSP_SD_Erase
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu fpv5-sp-d16
 479              	BSP_SD_Erase:
 480              	.LVL45:
 481              	.LFB149:
 375:Src/stm32f7_board_sd.c ****   return BSP_SD_EraseEx(SD_CARD1, StartAddr, EndAddr);
 482              		.loc 1 375 1 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 375:Src/stm32f7_board_sd.c ****   return BSP_SD_EraseEx(SD_CARD1, StartAddr, EndAddr);
 486              		.loc 1 375 1 is_stmt 0 view .LVU91
 487 0000 08B5     		push	{r3, lr}
 488              	.LCFI18:
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 3, -8
 491              		.cfi_offset 14, -4
 492 0002 0A46     		mov	r2, r1
 376:Src/stm32f7_board_sd.c **** }
 493              		.loc 1 376 3 is_stmt 1 view .LVU92
 376:Src/stm32f7_board_sd.c **** }
 494              		.loc 1 376 10 is_stmt 0 view .LVU93
 495 0004 0146     		mov	r1, r0
 496              	.LVL46:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 17


 376:Src/stm32f7_board_sd.c **** }
 497              		.loc 1 376 10 view .LVU94
 498 0006 0020     		movs	r0, #0
 499              	.LVL47:
 376:Src/stm32f7_board_sd.c **** }
 500              		.loc 1 376 10 view .LVU95
 501 0008 FFF7FEFF 		bl	BSP_SD_EraseEx
 502              	.LVL48:
 377:Src/stm32f7_board_sd.c **** 
 503              		.loc 1 377 1 view .LVU96
 504 000c 08BD     		pop	{r3, pc}
 505              		.cfi_endproc
 506              	.LFE149:
 508              		.section	.text.BSP_SD_MspInit,"ax",%progbits
 509              		.align	1
 510              		.weak	BSP_SD_MspInit
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu fpv5-sp-d16
 516              	BSP_SD_MspInit:
 517              	.LVL49:
 518              	.LFB151:
 400:Src/stm32f7_board_sd.c **** 
 401:Src/stm32f7_board_sd.c **** /**
 402:Src/stm32f7_board_sd.c ****   * @brief  Initializes the SD MSP.
 403:Src/stm32f7_board_sd.c ****   * @param  hsd: SD handle
 404:Src/stm32f7_board_sd.c ****   * @param  Params
 405:Src/stm32f7_board_sd.c ****   * @retval None
 406:Src/stm32f7_board_sd.c ****   */
 407:Src/stm32f7_board_sd.c **** __weak void BSP_SD_MspInit(SD_HandleTypeDef *hsd, void *Params)
 408:Src/stm32f7_board_sd.c **** {
 519              		.loc 1 408 1 is_stmt 1 view -0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 40
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		.loc 1 408 1 is_stmt 0 view .LVU98
 524 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 525              	.LCFI19:
 526              		.cfi_def_cfa_offset 36
 527              		.cfi_offset 4, -36
 528              		.cfi_offset 5, -32
 529              		.cfi_offset 6, -28
 530              		.cfi_offset 7, -24
 531              		.cfi_offset 8, -20
 532              		.cfi_offset 9, -16
 533              		.cfi_offset 10, -12
 534              		.cfi_offset 11, -8
 535              		.cfi_offset 14, -4
 536 0004 8BB0     		sub	sp, sp, #44
 537              	.LCFI20:
 538              		.cfi_def_cfa_offset 80
 539 0006 0546     		mov	r5, r0
 409:Src/stm32f7_board_sd.c ****   static DMA_HandleTypeDef dma_rx_handle;
 540              		.loc 1 409 3 is_stmt 1 view .LVU99
 410:Src/stm32f7_board_sd.c ****   static DMA_HandleTypeDef dma_tx_handle;
 541              		.loc 1 410 3 view .LVU100
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 18


 411:Src/stm32f7_board_sd.c ****   GPIO_InitTypeDef gpio_init_structure;
 542              		.loc 1 411 3 view .LVU101
 412:Src/stm32f7_board_sd.c **** 
 413:Src/stm32f7_board_sd.c **** 
 414:Src/stm32f7_board_sd.c ****     /* Enable SDIO clock */
 415:Src/stm32f7_board_sd.c ****     __HAL_RCC_SDMMC1_CLK_ENABLE();
 543              		.loc 1 415 5 view .LVU102
 544              	.LBB2:
 545              		.loc 1 415 5 view .LVU103
 546              		.loc 1 415 5 view .LVU104
 547 0008 534B     		ldr	r3, .L45
 548 000a 5A6C     		ldr	r2, [r3, #68]
 549 000c 42F40062 		orr	r2, r2, #2048
 550 0010 5A64     		str	r2, [r3, #68]
 551              		.loc 1 415 5 view .LVU105
 552 0012 5A6C     		ldr	r2, [r3, #68]
 553 0014 02F40062 		and	r2, r2, #2048
 554 0018 0192     		str	r2, [sp, #4]
 555              		.loc 1 415 5 view .LVU106
 556 001a 019A     		ldr	r2, [sp, #4]
 557              	.LBE2:
 558              		.loc 1 415 5 view .LVU107
 416:Src/stm32f7_board_sd.c **** 
 417:Src/stm32f7_board_sd.c ****     /* Enable DMA2 clocks */
 418:Src/stm32f7_board_sd.c ****     __DMAx_TxRx_CLK_ENABLE();
 559              		.loc 1 418 5 view .LVU108
 560              	.LBB3:
 561              		.loc 1 418 5 view .LVU109
 562              		.loc 1 418 5 view .LVU110
 563 001c 1A6B     		ldr	r2, [r3, #48]
 564 001e 42F48002 		orr	r2, r2, #4194304
 565 0022 1A63     		str	r2, [r3, #48]
 566              		.loc 1 418 5 view .LVU111
 567 0024 1A6B     		ldr	r2, [r3, #48]
 568 0026 02F48002 		and	r2, r2, #4194304
 569 002a 0292     		str	r2, [sp, #8]
 570              		.loc 1 418 5 view .LVU112
 571 002c 029A     		ldr	r2, [sp, #8]
 572              	.LBE3:
 573              		.loc 1 418 5 view .LVU113
 419:Src/stm32f7_board_sd.c **** 
 420:Src/stm32f7_board_sd.c ****     /* Enable GPIOs clock */
 421:Src/stm32f7_board_sd.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 574              		.loc 1 421 5 view .LVU114
 575              	.LBB4:
 576              		.loc 1 421 5 view .LVU115
 577              		.loc 1 421 5 view .LVU116
 578 002e 1A6B     		ldr	r2, [r3, #48]
 579 0030 42F00402 		orr	r2, r2, #4
 580 0034 1A63     		str	r2, [r3, #48]
 581              		.loc 1 421 5 view .LVU117
 582 0036 1A6B     		ldr	r2, [r3, #48]
 583 0038 02F00402 		and	r2, r2, #4
 584 003c 0392     		str	r2, [sp, #12]
 585              		.loc 1 421 5 view .LVU118
 586 003e 039A     		ldr	r2, [sp, #12]
 587              	.LBE4:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 19


 588              		.loc 1 421 5 view .LVU119
 422:Src/stm32f7_board_sd.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 589              		.loc 1 422 5 view .LVU120
 590              	.LBB5:
 591              		.loc 1 422 5 view .LVU121
 592              		.loc 1 422 5 view .LVU122
 593 0040 1A6B     		ldr	r2, [r3, #48]
 594 0042 42F00802 		orr	r2, r2, #8
 595 0046 1A63     		str	r2, [r3, #48]
 596              		.loc 1 422 5 view .LVU123
 597 0048 1B6B     		ldr	r3, [r3, #48]
 598 004a 03F00803 		and	r3, r3, #8
 599 004e 0493     		str	r3, [sp, #16]
 600              		.loc 1 422 5 view .LVU124
 601 0050 049B     		ldr	r3, [sp, #16]
 602              	.LBE5:
 603              		.loc 1 422 5 view .LVU125
 423:Src/stm32f7_board_sd.c **** 
 424:Src/stm32f7_board_sd.c ****     /* Common GPIO configuration */
 425:Src/stm32f7_board_sd.c ****     gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 604              		.loc 1 425 5 view .LVU126
 605              		.loc 1 425 35 is_stmt 0 view .LVU127
 606 0052 0223     		movs	r3, #2
 607 0054 0693     		str	r3, [sp, #24]
 426:Src/stm32f7_board_sd.c ****     gpio_init_structure.Pull      = GPIO_PULLUP;
 608              		.loc 1 426 5 is_stmt 1 view .LVU128
 609              		.loc 1 426 35 is_stmt 0 view .LVU129
 610 0056 0123     		movs	r3, #1
 611 0058 0793     		str	r3, [sp, #28]
 427:Src/stm32f7_board_sd.c ****     gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 612              		.loc 1 427 5 is_stmt 1 view .LVU130
 613              		.loc 1 427 35 is_stmt 0 view .LVU131
 614 005a 0327     		movs	r7, #3
 615 005c 0897     		str	r7, [sp, #32]
 428:Src/stm32f7_board_sd.c ****     gpio_init_structure.Alternate = GPIO_AF12_SDMMC1;
 616              		.loc 1 428 5 is_stmt 1 view .LVU132
 617              		.loc 1 428 35 is_stmt 0 view .LVU133
 618 005e 0C23     		movs	r3, #12
 619 0060 0993     		str	r3, [sp, #36]
 429:Src/stm32f7_board_sd.c **** 
 430:Src/stm32f7_board_sd.c ****     /* GPIOC configuration: SD1_D0, SD1_D1, SD1_D2, SD1_D3 and SD1_CLK pins */
 431:Src/stm32f7_board_sd.c ****     gpio_init_structure.Pin = GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12;
 620              		.loc 1 431 5 is_stmt 1 view .LVU134
 621              		.loc 1 431 29 is_stmt 0 view .LVU135
 622 0062 4FF4F853 		mov	r3, #7936
 623 0066 0593     		str	r3, [sp, #20]
 432:Src/stm32f7_board_sd.c **** 
 433:Src/stm32f7_board_sd.c ****     HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 624              		.loc 1 433 5 is_stmt 1 view .LVU136
 625 0068 05A9     		add	r1, sp, #20
 626              	.LVL50:
 627              		.loc 1 433 5 is_stmt 0 view .LVU137
 628 006a 3C48     		ldr	r0, .L45+4
 629              	.LVL51:
 630              		.loc 1 433 5 view .LVU138
 631 006c FFF7FEFF 		bl	HAL_GPIO_Init
 632              	.LVL52:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 20


 434:Src/stm32f7_board_sd.c **** 
 435:Src/stm32f7_board_sd.c ****     /* GPIOD configuration: SD1_CMD pin */
 436:Src/stm32f7_board_sd.c ****     gpio_init_structure.Pin = GPIO_PIN_2;
 633              		.loc 1 436 5 is_stmt 1 view .LVU139
 634              		.loc 1 436 29 is_stmt 0 view .LVU140
 635 0070 4FF00408 		mov	r8, #4
 636 0074 CDF81480 		str	r8, [sp, #20]
 437:Src/stm32f7_board_sd.c ****     HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 637              		.loc 1 437 5 is_stmt 1 view .LVU141
 638 0078 05A9     		add	r1, sp, #20
 639 007a 3948     		ldr	r0, .L45+8
 640 007c FFF7FEFF 		bl	HAL_GPIO_Init
 641              	.LVL53:
 438:Src/stm32f7_board_sd.c **** 
 439:Src/stm32f7_board_sd.c ****     /* NVIC configuration for SDIO interrupts */
 440:Src/stm32f7_board_sd.c ****     HAL_NVIC_SetPriority(SDMMC1_IRQn, 0x0E, 0);
 642              		.loc 1 440 5 view .LVU142
 643 0080 0022     		movs	r2, #0
 644 0082 0E21     		movs	r1, #14
 645 0084 3120     		movs	r0, #49
 646 0086 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 647              	.LVL54:
 441:Src/stm32f7_board_sd.c ****     HAL_NVIC_EnableIRQ(SDMMC1_IRQn);
 648              		.loc 1 441 5 view .LVU143
 649 008a 3120     		movs	r0, #49
 650 008c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 651              	.LVL55:
 442:Src/stm32f7_board_sd.c **** 
 443:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.Channel             = SD1_DMAx_Rx_CHANNEL;
 652              		.loc 1 443 5 view .LVU144
 653              		.loc 1 443 44 is_stmt 0 view .LVU145
 654 0090 344C     		ldr	r4, .L45+12
 655 0092 4FF0006B 		mov	fp, #134217728
 656 0096 C4F804B0 		str	fp, [r4, #4]
 444:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.Direction           = DMA_PERIPH_TO_MEMORY;
 657              		.loc 1 444 5 is_stmt 1 view .LVU146
 658              		.loc 1 444 44 is_stmt 0 view .LVU147
 659 009a 0026     		movs	r6, #0
 660 009c A660     		str	r6, [r4, #8]
 445:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.PeriphInc           = DMA_PINC_DISABLE;
 661              		.loc 1 445 5 is_stmt 1 view .LVU148
 662              		.loc 1 445 44 is_stmt 0 view .LVU149
 663 009e E660     		str	r6, [r4, #12]
 446:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.MemInc              = DMA_MINC_ENABLE;
 664              		.loc 1 446 5 is_stmt 1 view .LVU150
 665              		.loc 1 446 44 is_stmt 0 view .LVU151
 666 00a0 4FF4806A 		mov	r10, #1024
 667 00a4 C4F810A0 		str	r10, [r4, #16]
 447:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 668              		.loc 1 447 5 is_stmt 1 view .LVU152
 669              		.loc 1 447 44 is_stmt 0 view .LVU153
 670 00a8 4FF48059 		mov	r9, #4096
 671 00ac C4F81490 		str	r9, [r4, #20]
 448:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 672              		.loc 1 448 5 is_stmt 1 view .LVU154
 673              		.loc 1 448 44 is_stmt 0 view .LVU155
 674 00b0 4FF48043 		mov	r3, #16384
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 21


 675 00b4 A361     		str	r3, [r4, #24]
 449:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.Mode                = DMA_PFCTRL;
 676              		.loc 1 449 5 is_stmt 1 view .LVU156
 677              		.loc 1 449 44 is_stmt 0 view .LVU157
 678 00b6 2023     		movs	r3, #32
 679 00b8 E361     		str	r3, [r4, #28]
 450:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.Priority            = DMA_PRIORITY_VERY_HIGH;
 680              		.loc 1 450 5 is_stmt 1 view .LVU158
 681              		.loc 1 450 44 is_stmt 0 view .LVU159
 682 00ba 4FF44033 		mov	r3, #196608
 683 00be 2362     		str	r3, [r4, #32]
 451:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.FIFOMode            = DMA_FIFOMODE_ENABLE;
 684              		.loc 1 451 5 is_stmt 1 view .LVU160
 685              		.loc 1 451 44 is_stmt 0 view .LVU161
 686 00c0 C4F82480 		str	r8, [r4, #36]
 452:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 687              		.loc 1 452 5 is_stmt 1 view .LVU162
 688              		.loc 1 452 44 is_stmt 0 view .LVU163
 689 00c4 A762     		str	r7, [r4, #40]
 453:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.MemBurst            = DMA_MBURST_INC4;
 690              		.loc 1 453 5 is_stmt 1 view .LVU164
 691              		.loc 1 453 44 is_stmt 0 view .LVU165
 692 00c6 4FF40003 		mov	r3, #8388608
 693 00ca E362     		str	r3, [r4, #44]
 454:Src/stm32f7_board_sd.c ****     dma_rx_handle.Init.PeriphBurst         = DMA_PBURST_INC4;
 694              		.loc 1 454 5 is_stmt 1 view .LVU166
 695              		.loc 1 454 44 is_stmt 0 view .LVU167
 696 00cc 4FF40013 		mov	r3, #2097152
 697 00d0 2363     		str	r3, [r4, #48]
 455:Src/stm32f7_board_sd.c ****     dma_rx_handle.Instance                 = SD1_DMAx_Rx_STREAM;
 698              		.loc 1 455 5 is_stmt 1 view .LVU168
 699              		.loc 1 455 44 is_stmt 0 view .LVU169
 700 00d2 254B     		ldr	r3, .L45+16
 701 00d4 2360     		str	r3, [r4]
 456:Src/stm32f7_board_sd.c **** 
 457:Src/stm32f7_board_sd.c ****     /* Associate the DMA handle */
 458:Src/stm32f7_board_sd.c ****     __HAL_LINKDMA(hsd, hdmarx, dma_rx_handle);
 702              		.loc 1 458 5 is_stmt 1 view .LVU170
 703              		.loc 1 458 5 view .LVU171
 704 00d6 EC63     		str	r4, [r5, #60]
 705              		.loc 1 458 5 view .LVU172
 706 00d8 A563     		str	r5, [r4, #56]
 707              		.loc 1 458 5 view .LVU173
 459:Src/stm32f7_board_sd.c **** 
 460:Src/stm32f7_board_sd.c ****     /* Deinitialize the stream for new transfer */
 461:Src/stm32f7_board_sd.c ****     HAL_DMA_DeInit(&dma_rx_handle);
 708              		.loc 1 461 5 view .LVU174
 709 00da 2046     		mov	r0, r4
 710 00dc FFF7FEFF 		bl	HAL_DMA_DeInit
 711              	.LVL56:
 462:Src/stm32f7_board_sd.c **** 
 463:Src/stm32f7_board_sd.c ****     /* Configure the DMA stream */
 464:Src/stm32f7_board_sd.c ****     HAL_DMA_Init(&dma_rx_handle);
 712              		.loc 1 464 5 view .LVU175
 713 00e0 2046     		mov	r0, r4
 714 00e2 FFF7FEFF 		bl	HAL_DMA_Init
 715              	.LVL57:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 22


 465:Src/stm32f7_board_sd.c **** 
 466:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.Channel             = SD1_DMAx_Tx_CHANNEL;
 716              		.loc 1 466 5 view .LVU176
 717              		.loc 1 466 44 is_stmt 0 view .LVU177
 718 00e6 214C     		ldr	r4, .L45+20
 719 00e8 C4F804B0 		str	fp, [r4, #4]
 467:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.Direction           = DMA_MEMORY_TO_PERIPH;
 720              		.loc 1 467 5 is_stmt 1 view .LVU178
 721              		.loc 1 467 44 is_stmt 0 view .LVU179
 722 00ec 4023     		movs	r3, #64
 723 00ee A360     		str	r3, [r4, #8]
 468:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.PeriphInc           = DMA_PINC_DISABLE;
 724              		.loc 1 468 5 is_stmt 1 view .LVU180
 725              		.loc 1 468 44 is_stmt 0 view .LVU181
 726 00f0 E660     		str	r6, [r4, #12]
 469:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.MemInc              = DMA_MINC_ENABLE;
 727              		.loc 1 469 5 is_stmt 1 view .LVU182
 728              		.loc 1 469 44 is_stmt 0 view .LVU183
 729 00f2 C4F810A0 		str	r10, [r4, #16]
 470:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 730              		.loc 1 470 5 is_stmt 1 view .LVU184
 731              		.loc 1 470 44 is_stmt 0 view .LVU185
 732 00f6 C4F81490 		str	r9, [r4, #20]
 471:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 733              		.loc 1 471 5 is_stmt 1 view .LVU186
 734              		.loc 1 471 44 is_stmt 0 view .LVU187
 735 00fa 4FF48043 		mov	r3, #16384
 736 00fe A361     		str	r3, [r4, #24]
 472:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.Mode                = DMA_PFCTRL;
 737              		.loc 1 472 5 is_stmt 1 view .LVU188
 738              		.loc 1 472 44 is_stmt 0 view .LVU189
 739 0100 2023     		movs	r3, #32
 740 0102 E361     		str	r3, [r4, #28]
 473:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.Priority            = DMA_PRIORITY_VERY_HIGH;
 741              		.loc 1 473 5 is_stmt 1 view .LVU190
 742              		.loc 1 473 44 is_stmt 0 view .LVU191
 743 0104 4FF44033 		mov	r3, #196608
 744 0108 2362     		str	r3, [r4, #32]
 474:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.FIFOMode            = DMA_FIFOMODE_ENABLE;
 745              		.loc 1 474 5 is_stmt 1 view .LVU192
 746              		.loc 1 474 44 is_stmt 0 view .LVU193
 747 010a C4F82480 		str	r8, [r4, #36]
 475:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 748              		.loc 1 475 5 is_stmt 1 view .LVU194
 749              		.loc 1 475 44 is_stmt 0 view .LVU195
 750 010e A762     		str	r7, [r4, #40]
 476:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.MemBurst            = DMA_MBURST_INC4;
 751              		.loc 1 476 5 is_stmt 1 view .LVU196
 752              		.loc 1 476 44 is_stmt 0 view .LVU197
 753 0110 4FF40003 		mov	r3, #8388608
 754 0114 E362     		str	r3, [r4, #44]
 477:Src/stm32f7_board_sd.c ****     dma_tx_handle.Init.PeriphBurst         = DMA_PBURST_INC4;
 755              		.loc 1 477 5 is_stmt 1 view .LVU198
 756              		.loc 1 477 44 is_stmt 0 view .LVU199
 757 0116 4FF40013 		mov	r3, #2097152
 758 011a 2363     		str	r3, [r4, #48]
 478:Src/stm32f7_board_sd.c ****     dma_tx_handle.Instance                 = SD1_DMAx_Tx_STREAM;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 23


 759              		.loc 1 478 5 is_stmt 1 view .LVU200
 760              		.loc 1 478 44 is_stmt 0 view .LVU201
 761 011c 144B     		ldr	r3, .L45+24
 762 011e 2360     		str	r3, [r4]
 479:Src/stm32f7_board_sd.c **** 
 480:Src/stm32f7_board_sd.c ****     /* Associate the DMA handle */
 481:Src/stm32f7_board_sd.c ****     __HAL_LINKDMA(hsd, hdmatx, dma_tx_handle);
 763              		.loc 1 481 5 is_stmt 1 view .LVU202
 764              		.loc 1 481 5 view .LVU203
 765 0120 2C64     		str	r4, [r5, #64]
 766              		.loc 1 481 5 view .LVU204
 767 0122 A563     		str	r5, [r4, #56]
 768              		.loc 1 481 5 view .LVU205
 482:Src/stm32f7_board_sd.c **** 
 483:Src/stm32f7_board_sd.c ****     /* Deinitialize the stream for new transfer */
 484:Src/stm32f7_board_sd.c ****     HAL_DMA_DeInit(&dma_tx_handle);
 769              		.loc 1 484 5 view .LVU206
 770 0124 2046     		mov	r0, r4
 771 0126 FFF7FEFF 		bl	HAL_DMA_DeInit
 772              	.LVL58:
 485:Src/stm32f7_board_sd.c **** 
 486:Src/stm32f7_board_sd.c ****     /* Configure the DMA stream */
 487:Src/stm32f7_board_sd.c ****     HAL_DMA_Init(&dma_tx_handle);
 773              		.loc 1 487 5 view .LVU207
 774 012a 2046     		mov	r0, r4
 775 012c FFF7FEFF 		bl	HAL_DMA_Init
 776              	.LVL59:
 488:Src/stm32f7_board_sd.c **** 
 489:Src/stm32f7_board_sd.c ****     /* NVIC configuration for DMA transfer complete interrupt */
 490:Src/stm32f7_board_sd.c ****     HAL_NVIC_SetPriority(SD1_DMAx_Rx_IRQn, 0x0F, 0);
 777              		.loc 1 490 5 view .LVU208
 778 0130 3246     		mov	r2, r6
 779 0132 0F21     		movs	r1, #15
 780 0134 3B20     		movs	r0, #59
 781 0136 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 782              	.LVL60:
 491:Src/stm32f7_board_sd.c ****     HAL_NVIC_EnableIRQ(SD1_DMAx_Rx_IRQn);
 783              		.loc 1 491 5 view .LVU209
 784 013a 3B20     		movs	r0, #59
 785 013c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 786              	.LVL61:
 492:Src/stm32f7_board_sd.c **** 
 493:Src/stm32f7_board_sd.c ****     /* NVIC configuration for DMA transfer complete interrupt */
 494:Src/stm32f7_board_sd.c ****     HAL_NVIC_SetPriority(SD1_DMAx_Tx_IRQn, 0x0F, 0);
 787              		.loc 1 494 5 view .LVU210
 788 0140 3246     		mov	r2, r6
 789 0142 0F21     		movs	r1, #15
 790 0144 4520     		movs	r0, #69
 791 0146 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 792              	.LVL62:
 495:Src/stm32f7_board_sd.c ****     HAL_NVIC_EnableIRQ(SD1_DMAx_Tx_IRQn);
 793              		.loc 1 495 5 view .LVU211
 794 014a 4520     		movs	r0, #69
 795 014c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 796              	.LVL63:
 496:Src/stm32f7_board_sd.c **** }
 797              		.loc 1 496 1 is_stmt 0 view .LVU212
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 24


 798 0150 0BB0     		add	sp, sp, #44
 799              	.LCFI21:
 800              		.cfi_def_cfa_offset 36
 801              		@ sp needed
 802 0152 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 803              	.LVL64:
 804              	.L46:
 805              		.loc 1 496 1 view .LVU213
 806 0156 00BF     		.align	2
 807              	.L45:
 808 0158 00380240 		.word	1073887232
 809 015c 00080240 		.word	1073874944
 810 0160 000C0240 		.word	1073875968
 811 0164 00000000 		.word	.LANCHOR0
 812 0168 58640240 		.word	1073898584
 813 016c 00000000 		.word	.LANCHOR1
 814 0170 A0640240 		.word	1073898656
 815              		.cfi_endproc
 816              	.LFE151:
 818              		.section	.text.BSP_SD_InitEx,"ax",%progbits
 819              		.align	1
 820              		.global	BSP_SD_InitEx
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv5-sp-d16
 826              	BSP_SD_InitEx:
 827              	.LVL65:
 828              	.LFB139:
 171:Src/stm32f7_board_sd.c ****   uint8_t sd_state = MSD_OK;
 829              		.loc 1 171 1 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 171:Src/stm32f7_board_sd.c ****   uint8_t sd_state = MSD_OK;
 833              		.loc 1 171 1 is_stmt 0 view .LVU215
 834 0000 10B5     		push	{r4, lr}
 835              	.LCFI22:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 4, -8
 838              		.cfi_offset 14, -4
 172:Src/stm32f7_board_sd.c **** 
 839              		.loc 1 172 3 is_stmt 1 view .LVU216
 840              	.LVL66:
 174:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockEdge           = SDMMC_CLOCK_EDGE_RISING;
 841              		.loc 1 174 5 view .LVU217
 174:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockEdge           = SDMMC_CLOCK_EDGE_RISING;
 842              		.loc 1 174 24 is_stmt 0 view .LVU218
 843 0002 0E4C     		ldr	r4, .L52
 844 0004 0E4B     		ldr	r3, .L52+4
 845 0006 2360     		str	r3, [r4]
 175:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockBypass         = SDMMC_CLOCK_BYPASS_DISABLE;
 846              		.loc 1 175 5 is_stmt 1 view .LVU219
 175:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockBypass         = SDMMC_CLOCK_BYPASS_DISABLE;
 847              		.loc 1 175 40 is_stmt 0 view .LVU220
 848 0008 0021     		movs	r1, #0
 849 000a 6160     		str	r1, [r4, #4]
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 25


 176:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockPowerSave      = SDMMC_CLOCK_POWER_SAVE_DISABLE;
 850              		.loc 1 176 5 is_stmt 1 view .LVU221
 176:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockPowerSave      = SDMMC_CLOCK_POWER_SAVE_DISABLE;
 851              		.loc 1 176 40 is_stmt 0 view .LVU222
 852 000c A160     		str	r1, [r4, #8]
 177:Src/stm32f7_board_sd.c ****     uSdHandle.Init.BusWide             = SDMMC_BUS_WIDE_1B;
 853              		.loc 1 177 5 is_stmt 1 view .LVU223
 177:Src/stm32f7_board_sd.c ****     uSdHandle.Init.BusWide             = SDMMC_BUS_WIDE_1B;
 854              		.loc 1 177 40 is_stmt 0 view .LVU224
 855 000e E160     		str	r1, [r4, #12]
 178:Src/stm32f7_board_sd.c ****     uSdHandle.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
 856              		.loc 1 178 5 is_stmt 1 view .LVU225
 178:Src/stm32f7_board_sd.c ****     uSdHandle.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
 857              		.loc 1 178 40 is_stmt 0 view .LVU226
 858 0010 2161     		str	r1, [r4, #16]
 179:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockDiv            = SDMMC_TRANSFER_CLK_DIV;
 859              		.loc 1 179 5 is_stmt 1 view .LVU227
 179:Src/stm32f7_board_sd.c ****     uSdHandle.Init.ClockDiv            = SDMMC_TRANSFER_CLK_DIV;
 860              		.loc 1 179 40 is_stmt 0 view .LVU228
 861 0012 6161     		str	r1, [r4, #20]
 180:Src/stm32f7_board_sd.c **** 
 862              		.loc 1 180 5 is_stmt 1 view .LVU229
 180:Src/stm32f7_board_sd.c **** 
 863              		.loc 1 180 40 is_stmt 0 view .LVU230
 864 0014 A161     		str	r1, [r4, #24]
 183:Src/stm32f7_board_sd.c **** 
 865              		.loc 1 183 3 is_stmt 1 view .LVU231
 866 0016 2046     		mov	r0, r4
 867              	.LVL67:
 183:Src/stm32f7_board_sd.c **** 
 868              		.loc 1 183 3 is_stmt 0 view .LVU232
 869 0018 FFF7FEFF 		bl	BSP_SD_MspInit
 870              	.LVL68:
 186:Src/stm32f7_board_sd.c ****   {
 871              		.loc 1 186 3 is_stmt 1 view .LVU233
 186:Src/stm32f7_board_sd.c ****   {
 872              		.loc 1 186 6 is_stmt 0 view .LVU234
 873 001c 2046     		mov	r0, r4
 874 001e FFF7FEFF 		bl	HAL_SD_Init
 875              	.LVL69:
 186:Src/stm32f7_board_sd.c ****   {
 876              		.loc 1 186 5 view .LVU235
 877 0022 08B1     		cbz	r0, .L51
 188:Src/stm32f7_board_sd.c ****   }
 878              		.loc 1 188 14 view .LVU236
 879 0024 0120     		movs	r0, #1
 880              	.LVL70:
 881              	.L48:
 207:Src/stm32f7_board_sd.c **** }
 882              		.loc 1 207 3 is_stmt 1 view .LVU237
 208:Src/stm32f7_board_sd.c **** 
 883              		.loc 1 208 1 is_stmt 0 view .LVU238
 884 0026 10BD     		pop	{r4, pc}
 885              	.LVL71:
 886              	.L51:
 192:Src/stm32f7_board_sd.c ****   {
 887              		.loc 1 192 3 is_stmt 1 view .LVU239
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 26


 195:Src/stm32f7_board_sd.c **** 
 888              		.loc 1 195 5 view .LVU240
 195:Src/stm32f7_board_sd.c **** 
 889              		.loc 1 195 16 is_stmt 0 view .LVU241
 890 0028 4FF40061 		mov	r1, #2048
 891 002c 2046     		mov	r0, r4
 892 002e FFF7FEFF 		bl	HAL_SD_ConfigWideBusOperation
 893              	.LVL72:
 197:Src/stm32f7_board_sd.c ****     {
 894              		.loc 1 197 5 is_stmt 1 view .LVU242
 197:Src/stm32f7_board_sd.c ****     {
 895              		.loc 1 197 7 is_stmt 0 view .LVU243
 896 0032 0028     		cmp	r0, #0
 897 0034 F7D0     		beq	.L48
 199:Src/stm32f7_board_sd.c ****     }
 898              		.loc 1 199 16 view .LVU244
 899 0036 0120     		movs	r0, #1
 900              	.LVL73:
 199:Src/stm32f7_board_sd.c ****     }
 901              		.loc 1 199 16 view .LVU245
 902 0038 F5E7     		b	.L48
 903              	.L53:
 904 003a 00BF     		.align	2
 905              	.L52:
 906 003c 00000000 		.word	uSdHandle
 907 0040 002C0140 		.word	1073818624
 908              		.cfi_endproc
 909              	.LFE139:
 911              		.section	.text.BSP_SD_Init,"ax",%progbits
 912              		.align	1
 913              		.global	BSP_SD_Init
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu fpv5-sp-d16
 919              	BSP_SD_Init:
 920              	.LFB138:
 160:Src/stm32f7_board_sd.c ****   /* By default, initialize SDMMC1 */
 921              		.loc 1 160 1 is_stmt 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925 0000 08B5     		push	{r3, lr}
 926              	.LCFI23:
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 3, -8
 929              		.cfi_offset 14, -4
 162:Src/stm32f7_board_sd.c **** }
 930              		.loc 1 162 3 view .LVU247
 162:Src/stm32f7_board_sd.c **** }
 931              		.loc 1 162 10 is_stmt 0 view .LVU248
 932 0002 0020     		movs	r0, #0
 933 0004 FFF7FEFF 		bl	BSP_SD_InitEx
 934              	.LVL74:
 163:Src/stm32f7_board_sd.c **** 
 935              		.loc 1 163 1 view .LVU249
 936 0008 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 27


 937              		.cfi_endproc
 938              	.LFE138:
 940              		.section	.text.BSP_SD_MspDeInit,"ax",%progbits
 941              		.align	1
 942              		.weak	BSP_SD_MspDeInit
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 946              		.fpu fpv5-sp-d16
 948              	BSP_SD_MspDeInit:
 949              	.LVL75:
 950              	.LFB152:
 497:Src/stm32f7_board_sd.c **** 
 498:Src/stm32f7_board_sd.c **** /**
 499:Src/stm32f7_board_sd.c ****   * @brief  DeInitializes the SD MSP.
 500:Src/stm32f7_board_sd.c ****   * @param  hsd: SD handle
 501:Src/stm32f7_board_sd.c ****   * @param  Params
 502:Src/stm32f7_board_sd.c ****   * @retval None
 503:Src/stm32f7_board_sd.c ****   */
 504:Src/stm32f7_board_sd.c **** __weak void BSP_SD_MspDeInit(SD_HandleTypeDef *hsd, void *Params)
 505:Src/stm32f7_board_sd.c **** {
 951              		.loc 1 505 1 is_stmt 1 view -0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              		.loc 1 505 1 is_stmt 0 view .LVU251
 956 0000 08B5     		push	{r3, lr}
 957              	.LCFI24:
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 3, -8
 960              		.cfi_offset 14, -4
 506:Src/stm32f7_board_sd.c ****   static DMA_HandleTypeDef dma_rx_handle;
 961              		.loc 1 506 3 is_stmt 1 view .LVU252
 507:Src/stm32f7_board_sd.c ****   static DMA_HandleTypeDef dma_tx_handle;
 962              		.loc 1 507 3 view .LVU253
 508:Src/stm32f7_board_sd.c **** 
 509:Src/stm32f7_board_sd.c ****     /* Disable NVIC for DMA transfer complete interrupts */
 510:Src/stm32f7_board_sd.c ****     HAL_NVIC_DisableIRQ(SD1_DMAx_Rx_IRQn);
 963              		.loc 1 510 5 view .LVU254
 964 0002 3B20     		movs	r0, #59
 965              	.LVL76:
 966              		.loc 1 510 5 is_stmt 0 view .LVU255
 967 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 968              	.LVL77:
 511:Src/stm32f7_board_sd.c ****     HAL_NVIC_DisableIRQ(SD1_DMAx_Tx_IRQn);
 969              		.loc 1 511 5 is_stmt 1 view .LVU256
 970 0008 4520     		movs	r0, #69
 971 000a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 972              	.LVL78:
 512:Src/stm32f7_board_sd.c **** 
 513:Src/stm32f7_board_sd.c ****     /* Deinitialize the stream for new transfer */
 514:Src/stm32f7_board_sd.c ****     dma_rx_handle.Instance = SD1_DMAx_Rx_STREAM;
 973              		.loc 1 514 5 view .LVU257
 974              		.loc 1 514 28 is_stmt 0 view .LVU258
 975 000e 0948     		ldr	r0, .L58
 976 0010 094B     		ldr	r3, .L58+4
 977 0012 0360     		str	r3, [r0]
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 28


 515:Src/stm32f7_board_sd.c ****     HAL_DMA_DeInit(&dma_rx_handle);
 978              		.loc 1 515 5 is_stmt 1 view .LVU259
 979 0014 FFF7FEFF 		bl	HAL_DMA_DeInit
 980              	.LVL79:
 516:Src/stm32f7_board_sd.c **** 
 517:Src/stm32f7_board_sd.c ****     /* Deinitialize the stream for new transfer */
 518:Src/stm32f7_board_sd.c ****     dma_tx_handle.Instance = SD1_DMAx_Tx_STREAM;
 981              		.loc 1 518 5 view .LVU260
 982              		.loc 1 518 28 is_stmt 0 view .LVU261
 983 0018 0848     		ldr	r0, .L58+8
 984 001a 094B     		ldr	r3, .L58+12
 985 001c 0360     		str	r3, [r0]
 519:Src/stm32f7_board_sd.c ****     HAL_DMA_DeInit(&dma_tx_handle);
 986              		.loc 1 519 5 is_stmt 1 view .LVU262
 987 001e FFF7FEFF 		bl	HAL_DMA_DeInit
 988              	.LVL80:
 520:Src/stm32f7_board_sd.c **** 
 521:Src/stm32f7_board_sd.c ****     /* Disable NVIC for SDIO interrupts */
 522:Src/stm32f7_board_sd.c ****     HAL_NVIC_DisableIRQ(SDMMC1_IRQn);
 989              		.loc 1 522 5 view .LVU263
 990 0022 3120     		movs	r0, #49
 991 0024 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 992              	.LVL81:
 523:Src/stm32f7_board_sd.c **** 
 524:Src/stm32f7_board_sd.c ****     /* DeInit GPIO pins can be done in the application
 525:Src/stm32f7_board_sd.c ****     (by surcharging this __weak function) */
 526:Src/stm32f7_board_sd.c **** 
 527:Src/stm32f7_board_sd.c ****     /* Disable SDMMC1 clock */
 528:Src/stm32f7_board_sd.c ****     __HAL_RCC_SDMMC1_CLK_DISABLE();
 993              		.loc 1 528 5 view .LVU264
 994 0028 064A     		ldr	r2, .L58+16
 995 002a 536C     		ldr	r3, [r2, #68]
 996 002c 23F40063 		bic	r3, r3, #2048
 997 0030 5364     		str	r3, [r2, #68]
 529:Src/stm32f7_board_sd.c **** }
 998              		.loc 1 529 1 is_stmt 0 view .LVU265
 999 0032 08BD     		pop	{r3, pc}
 1000              	.L59:
 1001              		.align	2
 1002              	.L58:
 1003 0034 00000000 		.word	.LANCHOR2
 1004 0038 58640240 		.word	1073898584
 1005 003c 00000000 		.word	.LANCHOR3
 1006 0040 A0640240 		.word	1073898656
 1007 0044 00380240 		.word	1073887232
 1008              		.cfi_endproc
 1009              	.LFE152:
 1011              		.section	.text.BSP_SD_GetCardStateEx,"ax",%progbits
 1012              		.align	1
 1013              		.global	BSP_SD_GetCardStateEx
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1017              		.fpu fpv5-sp-d16
 1019              	BSP_SD_GetCardStateEx:
 1020              	.LVL82:
 1021              	.LFB154:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 29


 530:Src/stm32f7_board_sd.c **** 
 531:Src/stm32f7_board_sd.c **** /**
 532:Src/stm32f7_board_sd.c ****   * @brief  Gets the current SD card data status.
 533:Src/stm32f7_board_sd.c ****   * @retval Data transfer state.
 534:Src/stm32f7_board_sd.c ****   *          This value can be one of the following values:
 535:Src/stm32f7_board_sd.c ****   *            @arg  SD_TRANSFER_OK: No data transfer is acting
 536:Src/stm32f7_board_sd.c ****   *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
 537:Src/stm32f7_board_sd.c ****   */
 538:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_GetCardState(void)
 539:Src/stm32f7_board_sd.c **** {
 540:Src/stm32f7_board_sd.c ****   return BSP_SD_GetCardStateEx(SD_CARD1);
 541:Src/stm32f7_board_sd.c **** }
 542:Src/stm32f7_board_sd.c **** 
 543:Src/stm32f7_board_sd.c **** /**
 544:Src/stm32f7_board_sd.c ****   * @brief  Gets the current SD card data status.
 545:Src/stm32f7_board_sd.c ****   * @param  SdCard: SD_CARD1 or SD_CARD2
 546:Src/stm32f7_board_sd.c ****   * @retval Data transfer state.
 547:Src/stm32f7_board_sd.c ****   *          This value can be one of the following values:
 548:Src/stm32f7_board_sd.c ****   *            @arg  SD_TRANSFER_OK: No data transfer is acting
 549:Src/stm32f7_board_sd.c ****   *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
 550:Src/stm32f7_board_sd.c ****   */
 551:Src/stm32f7_board_sd.c **** uint8_t BSP_SD_GetCardStateEx(uint32_t SdCard)
 552:Src/stm32f7_board_sd.c **** {
 1022              		.loc 1 552 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026              		.loc 1 552 1 is_stmt 0 view .LVU267
 1027 0000 08B5     		push	{r3, lr}
 1028              	.LCFI25:
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 553:Src/stm32f7_board_sd.c ****   return((HAL_SD_GetCardState(&uSdHandle) == HAL_SD_CARD_TRANSFER ) ? SD_TRANSFER_OK : SD_TRANSFER_
 1032              		.loc 1 553 3 is_stmt 1 view .LVU268
 1033              		.loc 1 553 11 is_stmt 0 view .LVU269
 1034 0002 0348     		ldr	r0, .L62
 1035              	.LVL83:
 1036              		.loc 1 553 11 view .LVU270
 1037 0004 FFF7FEFF 		bl	HAL_SD_GetCardState
 1038              	.LVL84:
 554:Src/stm32f7_board_sd.c **** }
 1039              		.loc 1 554 1 view .LVU271
 1040 0008 0438     		subs	r0, r0, #4
 1041 000a 18BF     		it	ne
 1042 000c 0120     		movne	r0, #1
 1043 000e 08BD     		pop	{r3, pc}
 1044              	.L63:
 1045              		.align	2
 1046              	.L62:
 1047 0010 00000000 		.word	uSdHandle
 1048              		.cfi_endproc
 1049              	.LFE154:
 1051              		.section	.text.BSP_SD_GetCardState,"ax",%progbits
 1052              		.align	1
 1053              		.global	BSP_SD_GetCardState
 1054              		.syntax unified
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 30


 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-sp-d16
 1059              	BSP_SD_GetCardState:
 1060              	.LFB153:
 539:Src/stm32f7_board_sd.c ****   return BSP_SD_GetCardStateEx(SD_CARD1);
 1061              		.loc 1 539 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065 0000 08B5     		push	{r3, lr}
 1066              	.LCFI26:
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 3, -8
 1069              		.cfi_offset 14, -4
 540:Src/stm32f7_board_sd.c **** }
 1070              		.loc 1 540 3 view .LVU273
 540:Src/stm32f7_board_sd.c **** }
 1071              		.loc 1 540 10 is_stmt 0 view .LVU274
 1072 0002 0020     		movs	r0, #0
 1073 0004 FFF7FEFF 		bl	BSP_SD_GetCardStateEx
 1074              	.LVL85:
 541:Src/stm32f7_board_sd.c **** 
 1075              		.loc 1 541 1 view .LVU275
 1076 0008 08BD     		pop	{r3, pc}
 1077              		.cfi_endproc
 1078              	.LFE153:
 1080              		.section	.text.BSP_SD_GetCardInfo,"ax",%progbits
 1081              		.align	1
 1082              		.global	BSP_SD_GetCardInfo
 1083              		.syntax unified
 1084              		.thumb
 1085              		.thumb_func
 1086              		.fpu fpv5-sp-d16
 1088              	BSP_SD_GetCardInfo:
 1089              	.LVL86:
 1090              	.LFB155:
 555:Src/stm32f7_board_sd.c **** 
 556:Src/stm32f7_board_sd.c **** /**
 557:Src/stm32f7_board_sd.c ****   * @brief  Get SD information about specific SD card.
 558:Src/stm32f7_board_sd.c ****   * @param  CardInfo: Pointer to HAL_SD_CardInfoTypedef structure
 559:Src/stm32f7_board_sd.c ****   * @retval None 
 560:Src/stm32f7_board_sd.c ****   */
 561:Src/stm32f7_board_sd.c **** void BSP_SD_GetCardInfo(HAL_SD_CardInfoTypeDef *CardInfo)
 562:Src/stm32f7_board_sd.c **** {
 1091              		.loc 1 562 1 is_stmt 1 view -0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              		.loc 1 562 1 is_stmt 0 view .LVU277
 1096 0000 08B5     		push	{r3, lr}
 1097              	.LCFI27:
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 3, -8
 1100              		.cfi_offset 14, -4
 1101 0002 0146     		mov	r1, r0
 563:Src/stm32f7_board_sd.c ****   /* Get SD card Information */
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 31


 564:Src/stm32f7_board_sd.c ****   HAL_SD_GetCardInfo(&uSdHandle, CardInfo);
 1102              		.loc 1 564 3 is_stmt 1 view .LVU278
 1103 0004 0148     		ldr	r0, .L68
 1104              	.LVL87:
 1105              		.loc 1 564 3 is_stmt 0 view .LVU279
 1106 0006 FFF7FEFF 		bl	HAL_SD_GetCardInfo
 1107              	.LVL88:
 565:Src/stm32f7_board_sd.c **** }
 1108              		.loc 1 565 1 view .LVU280
 1109 000a 08BD     		pop	{r3, pc}
 1110              	.L69:
 1111              		.align	2
 1112              	.L68:
 1113 000c 00000000 		.word	uSdHandle
 1114              		.cfi_endproc
 1115              	.LFE155:
 1117              		.section	.text.HAL_SD_AbortCallback,"ax",%progbits
 1118              		.align	1
 1119              		.global	HAL_SD_AbortCallback
 1120              		.syntax unified
 1121              		.thumb
 1122              		.thumb_func
 1123              		.fpu fpv5-sp-d16
 1125              	HAL_SD_AbortCallback:
 1126              	.LVL89:
 1127              	.LFB156:
 566:Src/stm32f7_board_sd.c **** 
 567:Src/stm32f7_board_sd.c **** /**
 568:Src/stm32f7_board_sd.c ****   * @brief SD Abort callbacks
 569:Src/stm32f7_board_sd.c ****   * @param hsd: SD handle
 570:Src/stm32f7_board_sd.c ****   * @retval None
 571:Src/stm32f7_board_sd.c ****   */
 572:Src/stm32f7_board_sd.c **** void HAL_SD_AbortCallback(SD_HandleTypeDef *hsd)
 573:Src/stm32f7_board_sd.c **** {
 1128              		.loc 1 573 1 is_stmt 1 view -0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132              		.loc 1 573 1 is_stmt 0 view .LVU282
 1133 0000 08B5     		push	{r3, lr}
 1134              	.LCFI28:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 3, -8
 1137              		.cfi_offset 14, -4
 574:Src/stm32f7_board_sd.c ****   BSP_SD_AbortCallback();
 1138              		.loc 1 574 3 is_stmt 1 view .LVU283
 1139 0002 FFF7FEFF 		bl	BSP_SD_AbortCallback
 1140              	.LVL90:
 575:Src/stm32f7_board_sd.c **** }
 1141              		.loc 1 575 1 is_stmt 0 view .LVU284
 1142 0006 08BD     		pop	{r3, pc}
 1143              		.cfi_endproc
 1144              	.LFE156:
 1146              		.section	.text.HAL_SD_TxCpltCallback,"ax",%progbits
 1147              		.align	1
 1148              		.global	HAL_SD_TxCpltCallback
 1149              		.syntax unified
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 32


 1150              		.thumb
 1151              		.thumb_func
 1152              		.fpu fpv5-sp-d16
 1154              	HAL_SD_TxCpltCallback:
 1155              	.LVL91:
 1156              	.LFB157:
 576:Src/stm32f7_board_sd.c **** 
 577:Src/stm32f7_board_sd.c **** /**
 578:Src/stm32f7_board_sd.c ****   * @brief Tx Transfer completed callbacks
 579:Src/stm32f7_board_sd.c ****   * @param hsd: SD handle
 580:Src/stm32f7_board_sd.c ****   * @retval None
 581:Src/stm32f7_board_sd.c ****   */
 582:Src/stm32f7_board_sd.c **** void HAL_SD_TxCpltCallback(SD_HandleTypeDef *hsd)
 583:Src/stm32f7_board_sd.c **** {
 1157              		.loc 1 583 1 is_stmt 1 view -0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161              		.loc 1 583 1 is_stmt 0 view .LVU286
 1162 0000 08B5     		push	{r3, lr}
 1163              	.LCFI29:
 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 3, -8
 1166              		.cfi_offset 14, -4
 584:Src/stm32f7_board_sd.c ****   BSP_SD_WriteCpltCallback();
 1167              		.loc 1 584 3 is_stmt 1 view .LVU287
 1168 0002 FFF7FEFF 		bl	BSP_SD_WriteCpltCallback
 1169              	.LVL92:
 585:Src/stm32f7_board_sd.c **** }
 1170              		.loc 1 585 1 is_stmt 0 view .LVU288
 1171 0006 08BD     		pop	{r3, pc}
 1172              		.cfi_endproc
 1173              	.LFE157:
 1175              		.section	.text.HAL_SD_RxCpltCallback,"ax",%progbits
 1176              		.align	1
 1177              		.global	HAL_SD_RxCpltCallback
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1181              		.fpu fpv5-sp-d16
 1183              	HAL_SD_RxCpltCallback:
 1184              	.LVL93:
 1185              	.LFB158:
 586:Src/stm32f7_board_sd.c **** 
 587:Src/stm32f7_board_sd.c **** /**
 588:Src/stm32f7_board_sd.c ****   * @brief Rx Transfer completed callbacks
 589:Src/stm32f7_board_sd.c ****   * @param hsd: SD handle
 590:Src/stm32f7_board_sd.c ****   * @retval None
 591:Src/stm32f7_board_sd.c ****   */
 592:Src/stm32f7_board_sd.c **** void HAL_SD_RxCpltCallback(SD_HandleTypeDef *hsd)
 593:Src/stm32f7_board_sd.c **** {
 1186              		.loc 1 593 1 is_stmt 1 view -0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 0
 1189              		@ frame_needed = 0, uses_anonymous_args = 0
 1190              		.loc 1 593 1 is_stmt 0 view .LVU290
 1191 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 33


 1192              	.LCFI30:
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 3, -8
 1195              		.cfi_offset 14, -4
 594:Src/stm32f7_board_sd.c ****   BSP_SD_ReadCpltCallback();
 1196              		.loc 1 594 3 is_stmt 1 view .LVU291
 1197 0002 FFF7FEFF 		bl	BSP_SD_ReadCpltCallback
 1198              	.LVL94:
 595:Src/stm32f7_board_sd.c **** }
 1199              		.loc 1 595 1 is_stmt 0 view .LVU292
 1200 0006 08BD     		pop	{r3, pc}
 1201              		.cfi_endproc
 1202              	.LFE158:
 1204              		.comm	uSdHandle,132,4
 1205              		.section	.bss.dma_rx_handle.12108,"aw",%nobits
 1206              		.align	2
 1207              		.set	.LANCHOR0,. + 0
 1210              	dma_rx_handle.12108:
 1211 0000 00000000 		.space	96
 1211      00000000 
 1211      00000000 
 1211      00000000 
 1211      00000000 
 1212              		.section	.bss.dma_rx_handle.12119,"aw",%nobits
 1213              		.align	2
 1214              		.set	.LANCHOR2,. + 0
 1217              	dma_rx_handle.12119:
 1218 0000 00000000 		.space	96
 1218      00000000 
 1218      00000000 
 1218      00000000 
 1218      00000000 
 1219              		.section	.bss.dma_tx_handle.12109,"aw",%nobits
 1220              		.align	2
 1221              		.set	.LANCHOR1,. + 0
 1224              	dma_tx_handle.12109:
 1225 0000 00000000 		.space	96
 1225      00000000 
 1225      00000000 
 1225      00000000 
 1225      00000000 
 1226              		.section	.bss.dma_tx_handle.12120,"aw",%nobits
 1227              		.align	2
 1228              		.set	.LANCHOR3,. + 0
 1231              	dma_tx_handle.12120:
 1232 0000 00000000 		.space	96
 1232      00000000 
 1232      00000000 
 1232      00000000 
 1232      00000000 
 1233              		.text
 1234              	.Letext0:
 1235              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1236              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1237              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1238              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1239              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 34


 1240              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1241              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1242              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 1243              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1244              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1245              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1246              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1247              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 1248              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 1249              		.file 16 "Inc/stm32f7_diskio_dma_rtos.h"
 1250              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7_board_sd.c
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:18     .text.BSP_SD_DeInit:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:26     .text.BSP_SD_DeInit:00000000 BSP_SD_DeInit
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:49     .text.BSP_SD_ReadBlocksEx:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:56     .text.BSP_SD_ReadBlocksEx:00000000 BSP_SD_ReadBlocksEx
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:99     .text.BSP_SD_ReadBlocksEx:00000018 $d
                            *COM*:00000084 uSdHandle
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:104    .text.BSP_SD_ReadBlocks:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:111    .text.BSP_SD_ReadBlocks:00000000 BSP_SD_ReadBlocks
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:153    .text.BSP_SD_WriteBlocksEx:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:160    .text.BSP_SD_WriteBlocksEx:00000000 BSP_SD_WriteBlocksEx
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:203    .text.BSP_SD_WriteBlocksEx:00000018 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:208    .text.BSP_SD_WriteBlocks:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:215    .text.BSP_SD_WriteBlocks:00000000 BSP_SD_WriteBlocks
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:257    .text.BSP_SD_ReadBlocks_DMAEx:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:264    .text.BSP_SD_ReadBlocks_DMAEx:00000000 BSP_SD_ReadBlocks_DMAEx
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:297    .text.BSP_SD_ReadBlocks_DMAEx:00000010 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:302    .text.BSP_SD_ReadBlocks_DMA:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:309    .text.BSP_SD_ReadBlocks_DMA:00000000 BSP_SD_ReadBlocks_DMA
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:342    .text.BSP_SD_WriteBlocks_DMAEx:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:349    .text.BSP_SD_WriteBlocks_DMAEx:00000000 BSP_SD_WriteBlocks_DMAEx
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:382    .text.BSP_SD_WriteBlocks_DMAEx:00000010 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:387    .text.BSP_SD_WriteBlocks_DMA:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:394    .text.BSP_SD_WriteBlocks_DMA:00000000 BSP_SD_WriteBlocks_DMA
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:427    .text.BSP_SD_EraseEx:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:434    .text.BSP_SD_EraseEx:00000000 BSP_SD_EraseEx
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:467    .text.BSP_SD_EraseEx:00000010 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:472    .text.BSP_SD_Erase:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:479    .text.BSP_SD_Erase:00000000 BSP_SD_Erase
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:509    .text.BSP_SD_MspInit:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:516    .text.BSP_SD_MspInit:00000000 BSP_SD_MspInit
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:808    .text.BSP_SD_MspInit:00000158 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:819    .text.BSP_SD_InitEx:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:826    .text.BSP_SD_InitEx:00000000 BSP_SD_InitEx
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:906    .text.BSP_SD_InitEx:0000003c $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:912    .text.BSP_SD_Init:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:919    .text.BSP_SD_Init:00000000 BSP_SD_Init
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:941    .text.BSP_SD_MspDeInit:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:948    .text.BSP_SD_MspDeInit:00000000 BSP_SD_MspDeInit
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1003   .text.BSP_SD_MspDeInit:00000034 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1012   .text.BSP_SD_GetCardStateEx:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1019   .text.BSP_SD_GetCardStateEx:00000000 BSP_SD_GetCardStateEx
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1047   .text.BSP_SD_GetCardStateEx:00000010 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1052   .text.BSP_SD_GetCardState:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1059   .text.BSP_SD_GetCardState:00000000 BSP_SD_GetCardState
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1081   .text.BSP_SD_GetCardInfo:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1088   .text.BSP_SD_GetCardInfo:00000000 BSP_SD_GetCardInfo
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1113   .text.BSP_SD_GetCardInfo:0000000c $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1118   .text.HAL_SD_AbortCallback:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1125   .text.HAL_SD_AbortCallback:00000000 HAL_SD_AbortCallback
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1147   .text.HAL_SD_TxCpltCallback:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1154   .text.HAL_SD_TxCpltCallback:00000000 HAL_SD_TxCpltCallback
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1176   .text.HAL_SD_RxCpltCallback:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1183   .text.HAL_SD_RxCpltCallback:00000000 HAL_SD_RxCpltCallback
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1206   .bss.dma_rx_handle.12108:00000000 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1210   .bss.dma_rx_handle.12108:00000000 dma_rx_handle.12108
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s 			page 36


C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1213   .bss.dma_rx_handle.12119:00000000 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1217   .bss.dma_rx_handle.12119:00000000 dma_rx_handle.12119
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1220   .bss.dma_tx_handle.12109:00000000 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1224   .bss.dma_tx_handle.12109:00000000 dma_tx_handle.12109
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1227   .bss.dma_tx_handle.12120:00000000 $d
C:\Users\Nina\AppData\Local\Temp\ccTfrPpq.s:1231   .bss.dma_tx_handle.12120:00000000 dma_tx_handle.12120

UNDEFINED SYMBOLS
BSP_SD_DeInitEx
HAL_SD_ReadBlocks
HAL_SD_WriteBlocks
HAL_SD_ReadBlocks_DMA
HAL_SD_WriteBlocks_DMA
HAL_SD_Erase
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_DMA_DeInit
HAL_DMA_Init
HAL_SD_Init
HAL_SD_ConfigWideBusOperation
HAL_NVIC_DisableIRQ
HAL_SD_GetCardState
HAL_SD_GetCardInfo
BSP_SD_AbortCallback
BSP_SD_WriteCpltCallback
BSP_SD_ReadCpltCallback
