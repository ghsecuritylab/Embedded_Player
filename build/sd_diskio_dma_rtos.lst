ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"sd_diskio_dma_rtos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SD_CheckStatus,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	SD_CheckStatus:
  26              	.LVL0:
  27              	.LFB143:
  28              		.file 1 "Src/sd_diskio_dma_rtos.c"
   1:Src/sd_diskio_dma_rtos.c **** /**
   2:Src/sd_diskio_dma_rtos.c ****   ******************************************************************************
   3:Src/sd_diskio_dma_rtos.c ****   * @file    sd_diskio_dma_rtos.c
   4:Src/sd_diskio_dma_rtos.c ****   * @author  MCD Application Team
   5:Src/sd_diskio_dma_rtos.c ****   * @brief   SD Disk I/O DMA with RTOS driver.
   6:Src/sd_diskio_dma_rtos.c ****   ******************************************************************************
   7:Src/sd_diskio_dma_rtos.c ****   * @attention
   8:Src/sd_diskio_dma_rtos.c ****   *
   9:Src/sd_diskio_dma_rtos.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics International N.V.
  10:Src/sd_diskio_dma_rtos.c ****   * All rights reserved.</center></h2>
  11:Src/sd_diskio_dma_rtos.c ****   *
  12:Src/sd_diskio_dma_rtos.c ****   * Redistribution and use in source and binary forms, with or without
  13:Src/sd_diskio_dma_rtos.c ****   * modification, are permitted, provided that the following conditions are met:
  14:Src/sd_diskio_dma_rtos.c ****   *
  15:Src/sd_diskio_dma_rtos.c ****   * 1. Redistribution of source code must retain the above copyright notice,
  16:Src/sd_diskio_dma_rtos.c ****   *    this list of conditions and the following disclaimer.
  17:Src/sd_diskio_dma_rtos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  18:Src/sd_diskio_dma_rtos.c ****   *    this list of conditions and the following disclaimer in the documentation
  19:Src/sd_diskio_dma_rtos.c ****   *    and/or other materials provided with the distribution.
  20:Src/sd_diskio_dma_rtos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other
  21:Src/sd_diskio_dma_rtos.c ****   *    contributors to this software may be used to endorse or promote products
  22:Src/sd_diskio_dma_rtos.c ****   *    derived from this software without specific written permission.
  23:Src/sd_diskio_dma_rtos.c ****   * 4. This software, including modifications and/or derivative works of this
  24:Src/sd_diskio_dma_rtos.c ****   *    software, must execute solely and exclusively on microcontroller or
  25:Src/sd_diskio_dma_rtos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  26:Src/sd_diskio_dma_rtos.c ****   * 5. Redistribution and use of this software other than as permitted under
  27:Src/sd_diskio_dma_rtos.c ****   *    this license is void and will automatically terminate your rights under
  28:Src/sd_diskio_dma_rtos.c ****   *    this license.
  29:Src/sd_diskio_dma_rtos.c ****   *
  30:Src/sd_diskio_dma_rtos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 2


  31:Src/sd_diskio_dma_rtos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  32:Src/sd_diskio_dma_rtos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  33:Src/sd_diskio_dma_rtos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  34:Src/sd_diskio_dma_rtos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  35:Src/sd_diskio_dma_rtos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  36:Src/sd_diskio_dma_rtos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  37:Src/sd_diskio_dma_rtos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  38:Src/sd_diskio_dma_rtos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  39:Src/sd_diskio_dma_rtos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  40:Src/sd_diskio_dma_rtos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  41:Src/sd_diskio_dma_rtos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  42:Src/sd_diskio_dma_rtos.c ****   *
  43:Src/sd_diskio_dma_rtos.c ****   ******************************************************************************
  44:Src/sd_diskio_dma_rtos.c ****   */
  45:Src/sd_diskio_dma_rtos.c **** 
  46:Src/sd_diskio_dma_rtos.c **** /* Includes ------------------------------------------------------------------*/
  47:Src/sd_diskio_dma_rtos.c **** #include "FreeRTOS.h"
  48:Src/sd_diskio_dma_rtos.c **** #include "task.h"
  49:Src/sd_diskio_dma_rtos.c **** #include "cmsis_os.h"
  50:Src/sd_diskio_dma_rtos.c **** #include "ff_gen_drv.h"
  51:Src/sd_diskio_dma_rtos.c **** #include "stm32f7_diskio_dma_rtos.h"
  52:Src/sd_diskio_dma_rtos.c **** 
  53:Src/sd_diskio_dma_rtos.c **** //#include "sd_diskio_dma_rtos.h"
  54:Src/sd_diskio_dma_rtos.c **** /* DMA definitions for SD DMA transfer */
  55:Src/sd_diskio_dma_rtos.c **** #define __DMAx_TxRx_CLK_ENABLE            __HAL_RCC_DMA2_CLK_ENABLE
  56:Src/sd_diskio_dma_rtos.c **** #define SD1_DMAx_Tx_CHANNEL                DMA_CHANNEL_4
  57:Src/sd_diskio_dma_rtos.c **** #define SD1_DMAx_Rx_CHANNEL                DMA_CHANNEL_4
  58:Src/sd_diskio_dma_rtos.c **** #define SD1_DMAx_Tx_STREAM                 DMA2_Stream6
  59:Src/sd_diskio_dma_rtos.c **** #define SD1_DMAx_Rx_STREAM                 DMA2_Stream3
  60:Src/sd_diskio_dma_rtos.c **** #define SD1_DMAx_Tx_IRQn                   DMA2_Stream6_IRQn
  61:Src/sd_diskio_dma_rtos.c **** #define SD1_DMAx_Rx_IRQn                   DMA2_Stream3_IRQn
  62:Src/sd_diskio_dma_rtos.c **** #define BSP_SDMMC1_DMA_Tx_IRQHandler       DMA2_Stream6_IRQHandler
  63:Src/sd_diskio_dma_rtos.c **** #define BSP_SDMMC1_DMA_Rx_IRQHandler       DMA2_Stream3_IRQHandler
  64:Src/sd_diskio_dma_rtos.c **** #define BSP_SDMMC1_IRQHandler              SDMMC1_IRQHandler
  65:Src/sd_diskio_dma_rtos.c **** 
  66:Src/sd_diskio_dma_rtos.c **** /* Private typedef -----------------------------------------------------------*/
  67:Src/sd_diskio_dma_rtos.c **** /* Private define ------------------------------------------------------------*/
  68:Src/sd_diskio_dma_rtos.c **** #define QUEUE_SIZE         (uint32_t) 10
  69:Src/sd_diskio_dma_rtos.c **** #define READ_CPLT_MSG      (uint32_t) 1
  70:Src/sd_diskio_dma_rtos.c **** #define WRITE_CPLT_MSG     (uint32_t) 2
  71:Src/sd_diskio_dma_rtos.c **** #define ABORT_MSG          (uint32_t) 3
  72:Src/sd_diskio_dma_rtos.c **** 
  73:Src/sd_diskio_dma_rtos.c **** /*
  74:Src/sd_diskio_dma_rtos.c ****  * the following Timeout is useful to give the control back to the applications
  75:Src/sd_diskio_dma_rtos.c ****  * in case of errors in either BSP_SD_ReadCpltCallback() or BSP_SD_WriteCpltCallback()
  76:Src/sd_diskio_dma_rtos.c ****  * the value by default is as defined in the BSP platform driver otherwise 30 secs
  77:Src/sd_diskio_dma_rtos.c ****  *
  78:Src/sd_diskio_dma_rtos.c ****  */
  79:Src/sd_diskio_dma_rtos.c **** 
  80:Src/sd_diskio_dma_rtos.c **** #define SD_TIMEOUT 30 * 1000
  81:Src/sd_diskio_dma_rtos.c **** 
  82:Src/sd_diskio_dma_rtos.c **** #define SD_DEFAULT_BLOCK_SIZE 512
  83:Src/sd_diskio_dma_rtos.c **** 
  84:Src/sd_diskio_dma_rtos.c **** /*
  85:Src/sd_diskio_dma_rtos.c ****  * Depending on the usecase, the SD card initialization could be done at the
  86:Src/sd_diskio_dma_rtos.c ****  * application level, if it is the case define the flag below to disable
  87:Src/sd_diskio_dma_rtos.c ****  * the BSP_SD_Init() call in the SD_Initialize().
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 3


  88:Src/sd_diskio_dma_rtos.c ****  */
  89:Src/sd_diskio_dma_rtos.c **** 
  90:Src/sd_diskio_dma_rtos.c **** /* #define DISABLE_SD_INIT */
  91:Src/sd_diskio_dma_rtos.c **** 
  92:Src/sd_diskio_dma_rtos.c **** 
  93:Src/sd_diskio_dma_rtos.c **** /*
  94:Src/sd_diskio_dma_rtos.c ****  * when using cachable memory region, it may be needed to maintain the cache
  95:Src/sd_diskio_dma_rtos.c ****  * validity. Enable the define below to activate a cache maintenance at each
  96:Src/sd_diskio_dma_rtos.c ****  * read and write operation.
  97:Src/sd_diskio_dma_rtos.c ****  * Notice: This is applicable only for cortex M7 based platform.
  98:Src/sd_diskio_dma_rtos.c ****  */
  99:Src/sd_diskio_dma_rtos.c **** 
 100:Src/sd_diskio_dma_rtos.c **** /* #define ENABLE_SD_DMA_CACHE_MAINTENANCE  1 */
 101:Src/sd_diskio_dma_rtos.c **** 
 102:Src/sd_diskio_dma_rtos.c **** 
 103:Src/sd_diskio_dma_rtos.c **** /* Private variables ---------------------------------------------------------*/
 104:Src/sd_diskio_dma_rtos.c **** /* Disk status */
 105:Src/sd_diskio_dma_rtos.c **** static volatile DSTATUS Stat = STA_NOINIT;
 106:Src/sd_diskio_dma_rtos.c **** static osMessageQId SDQueueID;
 107:Src/sd_diskio_dma_rtos.c **** /* Private function prototypes -----------------------------------------------*/
 108:Src/sd_diskio_dma_rtos.c **** static DSTATUS SD_CheckStatus(BYTE lun);
 109:Src/sd_diskio_dma_rtos.c **** DSTATUS SD_initialize (BYTE);
 110:Src/sd_diskio_dma_rtos.c **** DSTATUS SD_status (BYTE);
 111:Src/sd_diskio_dma_rtos.c **** DRESULT SD_read (BYTE, BYTE*, DWORD, UINT);
 112:Src/sd_diskio_dma_rtos.c **** #if _USE_WRITE == 1
 113:Src/sd_diskio_dma_rtos.c ****   DRESULT SD_write (BYTE, const BYTE*, DWORD, UINT);
 114:Src/sd_diskio_dma_rtos.c **** #endif /* _USE_WRITE == 1 */
 115:Src/sd_diskio_dma_rtos.c **** #if _USE_IOCTL == 1
 116:Src/sd_diskio_dma_rtos.c ****   DRESULT SD_ioctl (BYTE, BYTE, void*);
 117:Src/sd_diskio_dma_rtos.c **** #endif  /* _USE_IOCTL == 1 */
 118:Src/sd_diskio_dma_rtos.c **** 
 119:Src/sd_diskio_dma_rtos.c **** const Diskio_drvTypeDef  SD_Driver =
 120:Src/sd_diskio_dma_rtos.c **** {
 121:Src/sd_diskio_dma_rtos.c ****   SD_initialize,
 122:Src/sd_diskio_dma_rtos.c ****   SD_status,
 123:Src/sd_diskio_dma_rtos.c ****   SD_read,
 124:Src/sd_diskio_dma_rtos.c **** #if  _USE_WRITE == 1
 125:Src/sd_diskio_dma_rtos.c ****   SD_write,
 126:Src/sd_diskio_dma_rtos.c **** #endif /* _USE_WRITE == 1 */
 127:Src/sd_diskio_dma_rtos.c **** 
 128:Src/sd_diskio_dma_rtos.c **** #if  _USE_IOCTL == 1
 129:Src/sd_diskio_dma_rtos.c ****   SD_ioctl,
 130:Src/sd_diskio_dma_rtos.c **** #endif /* _USE_IOCTL == 1 */
 131:Src/sd_diskio_dma_rtos.c **** };
 132:Src/sd_diskio_dma_rtos.c **** 
 133:Src/sd_diskio_dma_rtos.c **** /* Private functions ---------------------------------------------------------*/
 134:Src/sd_diskio_dma_rtos.c **** static DSTATUS SD_CheckStatus(BYTE lun)
 135:Src/sd_diskio_dma_rtos.c **** {
  29              		.loc 1 135 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 135 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 4


  38              		.cfi_offset 14, -4
 136:Src/sd_diskio_dma_rtos.c ****   Stat = STA_NOINIT;
  39              		.loc 1 136 3 is_stmt 1 view .LVU2
  40              		.loc 1 136 8 is_stmt 0 view .LVU3
  41 0002 074B     		ldr	r3, .L4
  42 0004 0122     		movs	r2, #1
  43 0006 1A70     		strb	r2, [r3]
 137:Src/sd_diskio_dma_rtos.c **** 
 138:Src/sd_diskio_dma_rtos.c ****   if(BSP_SD_GetCardState() == MSD_OK)
  44              		.loc 1 138 3 is_stmt 1 view .LVU4
  45              		.loc 1 138 6 is_stmt 0 view .LVU5
  46 0008 FFF7FEFF 		bl	BSP_SD_GetCardState
  47              	.LVL1:
  48              		.loc 1 138 5 view .LVU6
  49 000c 20B9     		cbnz	r0, .L2
 139:Src/sd_diskio_dma_rtos.c ****   {
 140:Src/sd_diskio_dma_rtos.c ****     Stat &= ~STA_NOINIT;
  50              		.loc 1 140 5 is_stmt 1 view .LVU7
  51              		.loc 1 140 10 is_stmt 0 view .LVU8
  52 000e 044A     		ldr	r2, .L4
  53 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  54 0012 03F0FE03 		and	r3, r3, #254
  55 0016 1370     		strb	r3, [r2]
  56              	.L2:
 141:Src/sd_diskio_dma_rtos.c ****   }
 142:Src/sd_diskio_dma_rtos.c **** 
 143:Src/sd_diskio_dma_rtos.c ****   return Stat;
  57              		.loc 1 143 3 is_stmt 1 view .LVU9
  58              		.loc 1 143 10 is_stmt 0 view .LVU10
  59 0018 014B     		ldr	r3, .L4
  60 001a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 144:Src/sd_diskio_dma_rtos.c **** }
  61              		.loc 1 144 1 view .LVU11
  62 001c 08BD     		pop	{r3, pc}
  63              	.L5:
  64 001e 00BF     		.align	2
  65              	.L4:
  66 0020 00000000 		.word	.LANCHOR0
  67              		.cfi_endproc
  68              	.LFE143:
  70              		.section	.text.SD_initialize,"ax",%progbits
  71              		.align	1
  72              		.global	SD_initialize
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv5-sp-d16
  78              	SD_initialize:
  79              	.LVL2:
  80              	.LFB144:
 145:Src/sd_diskio_dma_rtos.c **** 
 146:Src/sd_diskio_dma_rtos.c **** /**
 147:Src/sd_diskio_dma_rtos.c ****   * @brief  Initializes a Drive
 148:Src/sd_diskio_dma_rtos.c ****   * @param  lun : not used
 149:Src/sd_diskio_dma_rtos.c ****   * @retval DSTATUS: Operation status
 150:Src/sd_diskio_dma_rtos.c ****   */
 151:Src/sd_diskio_dma_rtos.c **** DSTATUS SD_initialize(BYTE lun)
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 5


 152:Src/sd_diskio_dma_rtos.c **** {
  81              		.loc 1 152 1 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 8
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		.loc 1 152 1 is_stmt 0 view .LVU13
  86 0000 10B5     		push	{r4, lr}
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 4, -8
  90              		.cfi_offset 14, -4
  91 0002 82B0     		sub	sp, sp, #8
  92              	.LCFI2:
  93              		.cfi_def_cfa_offset 16
  94 0004 0446     		mov	r4, r0
 153:Src/sd_diskio_dma_rtos.c ****   Stat = STA_NOINIT;
  95              		.loc 1 153 3 is_stmt 1 view .LVU14
  96              		.loc 1 153 8 is_stmt 0 view .LVU15
  97 0006 124B     		ldr	r3, .L12
  98 0008 0122     		movs	r2, #1
  99 000a 1A70     		strb	r2, [r3]
 154:Src/sd_diskio_dma_rtos.c ****   /*
 155:Src/sd_diskio_dma_rtos.c ****    * check that the kernel has been started before continuing
 156:Src/sd_diskio_dma_rtos.c ****    * as the osMessage API will fail otherwise
 157:Src/sd_diskio_dma_rtos.c ****    */
 158:Src/sd_diskio_dma_rtos.c ****   if(osKernelRunning())
 100              		.loc 1 158 3 is_stmt 1 view .LVU16
 101              		.loc 1 158 6 is_stmt 0 view .LVU17
 102 000c FFF7FEFF 		bl	osKernelRunning
 103              	.LVL3:
 104              		.loc 1 158 5 view .LVU18
 105 0010 18B9     		cbnz	r0, .L10
 106              	.L7:
 159:Src/sd_diskio_dma_rtos.c ****   {
 160:Src/sd_diskio_dma_rtos.c **** #if !defined(DISABLE_SD_INIT)
 161:Src/sd_diskio_dma_rtos.c **** 
 162:Src/sd_diskio_dma_rtos.c ****     if(BSP_SD_Init() == MSD_OK)
 163:Src/sd_diskio_dma_rtos.c ****     {
 164:Src/sd_diskio_dma_rtos.c ****       Stat = SD_CheckStatus(lun);
 165:Src/sd_diskio_dma_rtos.c ****     }
 166:Src/sd_diskio_dma_rtos.c **** 
 167:Src/sd_diskio_dma_rtos.c **** #else
 168:Src/sd_diskio_dma_rtos.c ****     Stat = SD_CheckStatus(lun);
 169:Src/sd_diskio_dma_rtos.c **** #endif
 170:Src/sd_diskio_dma_rtos.c **** 
 171:Src/sd_diskio_dma_rtos.c ****     /*
 172:Src/sd_diskio_dma_rtos.c ****      * if the SD is correctly initialized, create the operation queue
 173:Src/sd_diskio_dma_rtos.c ****      */
 174:Src/sd_diskio_dma_rtos.c **** 
 175:Src/sd_diskio_dma_rtos.c ****     if (Stat != STA_NOINIT)
 176:Src/sd_diskio_dma_rtos.c ****     {
 177:Src/sd_diskio_dma_rtos.c ****       osMessageQDef(SD_Queue, QUEUE_SIZE, uint16_t);
 178:Src/sd_diskio_dma_rtos.c ****       SDQueueID = osMessageCreate (osMessageQ(SD_Queue), NULL);
 179:Src/sd_diskio_dma_rtos.c ****     }
 180:Src/sd_diskio_dma_rtos.c ****   }
 181:Src/sd_diskio_dma_rtos.c **** 
 182:Src/sd_diskio_dma_rtos.c ****   return Stat;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 6


 107              		.loc 1 182 3 is_stmt 1 view .LVU19
 108              		.loc 1 182 10 is_stmt 0 view .LVU20
 109 0012 0F4B     		ldr	r3, .L12
 110 0014 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 183:Src/sd_diskio_dma_rtos.c **** }
 111              		.loc 1 183 1 view .LVU21
 112 0016 02B0     		add	sp, sp, #8
 113              	.LCFI3:
 114              		.cfi_remember_state
 115              		.cfi_def_cfa_offset 8
 116              		@ sp needed
 117 0018 10BD     		pop	{r4, pc}
 118              	.L10:
 119              	.LCFI4:
 120              		.cfi_restore_state
 162:Src/sd_diskio_dma_rtos.c ****     {
 121              		.loc 1 162 5 is_stmt 1 view .LVU22
 162:Src/sd_diskio_dma_rtos.c ****     {
 122              		.loc 1 162 8 is_stmt 0 view .LVU23
 123 001a FFF7FEFF 		bl	BSP_SD_Init
 124              	.LVL4:
 162:Src/sd_diskio_dma_rtos.c ****     {
 125              		.loc 1 162 7 view .LVU24
 126 001e 88B1     		cbz	r0, .L11
 127              	.L8:
 175:Src/sd_diskio_dma_rtos.c ****     {
 128              		.loc 1 175 5 is_stmt 1 view .LVU25
 175:Src/sd_diskio_dma_rtos.c ****     {
 129              		.loc 1 175 14 is_stmt 0 view .LVU26
 130 0020 0B4B     		ldr	r3, .L12
 131 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132 0024 DBB2     		uxtb	r3, r3
 175:Src/sd_diskio_dma_rtos.c ****     {
 133              		.loc 1 175 8 view .LVU27
 134 0026 012B     		cmp	r3, #1
 135 0028 F3D0     		beq	.L7
 136              	.LBB2:
 177:Src/sd_diskio_dma_rtos.c ****       SDQueueID = osMessageCreate (osMessageQ(SD_Queue), NULL);
 137              		.loc 1 177 7 is_stmt 1 view .LVU28
 138 002a 0A4A     		ldr	r2, .L12+4
 139 002c 6B46     		mov	r3, sp
 140 002e 92E80300 		ldm	r2, {r0, r1}
 141 0032 83E80300 		stm	r3, {r0, r1}
 178:Src/sd_diskio_dma_rtos.c ****     }
 142              		.loc 1 178 7 view .LVU29
 178:Src/sd_diskio_dma_rtos.c ****     }
 143              		.loc 1 178 19 is_stmt 0 view .LVU30
 144 0036 0021     		movs	r1, #0
 145 0038 1846     		mov	r0, r3
 146 003a FFF7FEFF 		bl	osMessageCreate
 147              	.LVL5:
 178:Src/sd_diskio_dma_rtos.c ****     }
 148              		.loc 1 178 17 view .LVU31
 149 003e 064B     		ldr	r3, .L12+8
 150 0040 1860     		str	r0, [r3]
 151 0042 E6E7     		b	.L7
 152              	.L11:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 7


 153              	.LBE2:
 164:Src/sd_diskio_dma_rtos.c ****     }
 154              		.loc 1 164 7 is_stmt 1 view .LVU32
 164:Src/sd_diskio_dma_rtos.c ****     }
 155              		.loc 1 164 14 is_stmt 0 view .LVU33
 156 0044 2046     		mov	r0, r4
 157 0046 FFF7FEFF 		bl	SD_CheckStatus
 158              	.LVL6:
 164:Src/sd_diskio_dma_rtos.c ****     }
 159              		.loc 1 164 12 view .LVU34
 160 004a 014B     		ldr	r3, .L12
 161 004c 1870     		strb	r0, [r3]
 162 004e E7E7     		b	.L8
 163              	.L13:
 164              		.align	2
 165              	.L12:
 166 0050 00000000 		.word	.LANCHOR0
 167 0054 00000000 		.word	.LANCHOR1
 168 0058 00000000 		.word	.LANCHOR2
 169              		.cfi_endproc
 170              	.LFE144:
 172              		.section	.text.SD_status,"ax",%progbits
 173              		.align	1
 174              		.global	SD_status
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv5-sp-d16
 180              	SD_status:
 181              	.LVL7:
 182              	.LFB145:
 184:Src/sd_diskio_dma_rtos.c **** 
 185:Src/sd_diskio_dma_rtos.c **** /**
 186:Src/sd_diskio_dma_rtos.c ****   * @brief  Gets Disk Status
 187:Src/sd_diskio_dma_rtos.c ****   * @param  lun : not used
 188:Src/sd_diskio_dma_rtos.c ****   * @retval DSTATUS: Operation status
 189:Src/sd_diskio_dma_rtos.c ****   */
 190:Src/sd_diskio_dma_rtos.c **** DSTATUS SD_status(BYTE lun)
 191:Src/sd_diskio_dma_rtos.c **** {
 183              		.loc 1 191 1 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		.loc 1 191 1 is_stmt 0 view .LVU36
 188 0000 08B5     		push	{r3, lr}
 189              	.LCFI5:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 192:Src/sd_diskio_dma_rtos.c ****   return SD_CheckStatus(lun);
 193              		.loc 1 192 3 is_stmt 1 view .LVU37
 194              		.loc 1 192 10 is_stmt 0 view .LVU38
 195 0002 FFF7FEFF 		bl	SD_CheckStatus
 196              	.LVL8:
 193:Src/sd_diskio_dma_rtos.c **** }
 197              		.loc 1 193 1 view .LVU39
 198 0006 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 8


 199              		.cfi_endproc
 200              	.LFE145:
 202              		.section	.text.SD_read,"ax",%progbits
 203              		.align	1
 204              		.global	SD_read
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv5-sp-d16
 210              	SD_read:
 211              	.LVL9:
 212              	.LFB146:
 194:Src/sd_diskio_dma_rtos.c **** 
 195:Src/sd_diskio_dma_rtos.c **** /**
 196:Src/sd_diskio_dma_rtos.c ****   * @brief  Reads Sector(s)
 197:Src/sd_diskio_dma_rtos.c ****   * @param  lun : not used
 198:Src/sd_diskio_dma_rtos.c ****   * @param  *buff: Data buffer to store read data
 199:Src/sd_diskio_dma_rtos.c ****   * @param  sector: Sector address (LBA)
 200:Src/sd_diskio_dma_rtos.c ****   * @param  count: Number of sectors to read (1..128)
 201:Src/sd_diskio_dma_rtos.c ****   * @retval DRESULT: Operation result
 202:Src/sd_diskio_dma_rtos.c ****   */
 203:Src/sd_diskio_dma_rtos.c **** DRESULT SD_read(BYTE lun, BYTE *buff, DWORD sector, UINT count)
 204:Src/sd_diskio_dma_rtos.c **** {
 213              		.loc 1 204 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 16
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		.loc 1 204 1 is_stmt 0 view .LVU41
 218 0000 10B5     		push	{r4, lr}
 219              	.LCFI6:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
 223 0002 84B0     		sub	sp, sp, #16
 224              	.LCFI7:
 225              		.cfi_def_cfa_offset 24
 226 0004 0846     		mov	r0, r1
 227              	.LVL10:
 228              		.loc 1 204 1 view .LVU42
 229 0006 1146     		mov	r1, r2
 230              	.LVL11:
 205:Src/sd_diskio_dma_rtos.c ****   DRESULT res = RES_ERROR;
 231              		.loc 1 205 3 is_stmt 1 view .LVU43
 206:Src/sd_diskio_dma_rtos.c ****   osEvent event;
 232              		.loc 1 206 3 view .LVU44
 207:Src/sd_diskio_dma_rtos.c ****   uint32_t timer;
 233              		.loc 1 207 3 view .LVU45
 208:Src/sd_diskio_dma_rtos.c **** #if (ENABLE_SD_DMA_CACHE_MAINTENANCE == 1)
 209:Src/sd_diskio_dma_rtos.c ****   uint32_t alignedAddr;
 210:Src/sd_diskio_dma_rtos.c **** #endif
 211:Src/sd_diskio_dma_rtos.c **** 
 212:Src/sd_diskio_dma_rtos.c ****   if(BSP_SD_ReadBlocks_DMA((uint32_t*)buff,
 234              		.loc 1 212 3 view .LVU46
 235              		.loc 1 212 6 is_stmt 0 view .LVU47
 236 0008 1A46     		mov	r2, r3
 237              	.LVL12:
 238              		.loc 1 212 6 view .LVU48
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 9


 239 000a FFF7FEFF 		bl	BSP_SD_ReadBlocks_DMA
 240              	.LVL13:
 241              		.loc 1 212 5 view .LVU49
 242 000e 10B1     		cbz	r0, .L24
 205:Src/sd_diskio_dma_rtos.c ****   osEvent event;
 243              		.loc 1 205 11 view .LVU50
 244 0010 0120     		movs	r0, #1
 245              	.L17:
 246              	.LVL14:
 213:Src/sd_diskio_dma_rtos.c ****                            (uint32_t) (sector),
 214:Src/sd_diskio_dma_rtos.c ****                            count) == MSD_OK)
 215:Src/sd_diskio_dma_rtos.c ****   {
 216:Src/sd_diskio_dma_rtos.c ****     /* wait for a message from the queue or a timeout */
 217:Src/sd_diskio_dma_rtos.c ****     event = osMessageGet(SDQueueID, SD_TIMEOUT);
 218:Src/sd_diskio_dma_rtos.c **** 
 219:Src/sd_diskio_dma_rtos.c ****     if (event.status == osEventMessage)
 220:Src/sd_diskio_dma_rtos.c ****     {
 221:Src/sd_diskio_dma_rtos.c ****       if (event.value.v == READ_CPLT_MSG)
 222:Src/sd_diskio_dma_rtos.c ****       {
 223:Src/sd_diskio_dma_rtos.c ****         timer = osKernelSysTick() + SD_TIMEOUT;
 224:Src/sd_diskio_dma_rtos.c ****         /* block until SDIO IP is ready or a timeout occur */
 225:Src/sd_diskio_dma_rtos.c ****         while(timer > osKernelSysTick())
 226:Src/sd_diskio_dma_rtos.c ****         {
 227:Src/sd_diskio_dma_rtos.c ****           if (BSP_SD_GetCardState() == SD_TRANSFER_OK)
 228:Src/sd_diskio_dma_rtos.c ****           {
 229:Src/sd_diskio_dma_rtos.c ****             res = RES_OK;
 230:Src/sd_diskio_dma_rtos.c **** #if (ENABLE_SD_DMA_CACHE_MAINTENANCE == 1)
 231:Src/sd_diskio_dma_rtos.c ****             /*
 232:Src/sd_diskio_dma_rtos.c ****                the SCB_InvalidateDCache_by_Addr() requires a 32-Byte aligned address,
 233:Src/sd_diskio_dma_rtos.c ****                adjust the address and the D-Cache size to invalidate accordingly.
 234:Src/sd_diskio_dma_rtos.c ****              */
 235:Src/sd_diskio_dma_rtos.c ****             alignedAddr = (uint32_t)buff & ~0x1F;
 236:Src/sd_diskio_dma_rtos.c ****             SCB_InvalidateDCache_by_Addr((uint32_t*)alignedAddr, count*BLOCKSIZE + ((uint32_t)buff 
 237:Src/sd_diskio_dma_rtos.c **** #endif
 238:Src/sd_diskio_dma_rtos.c ****             break;
 239:Src/sd_diskio_dma_rtos.c ****           }
 240:Src/sd_diskio_dma_rtos.c ****           vTaskDelay(1); // patch
 241:Src/sd_diskio_dma_rtos.c ****         }
 242:Src/sd_diskio_dma_rtos.c ****       }
 243:Src/sd_diskio_dma_rtos.c ****     }
 244:Src/sd_diskio_dma_rtos.c ****   }
 245:Src/sd_diskio_dma_rtos.c **** 
 246:Src/sd_diskio_dma_rtos.c ****   return res;
 247              		.loc 1 246 3 is_stmt 1 view .LVU51
 247:Src/sd_diskio_dma_rtos.c **** }
 248              		.loc 1 247 1 is_stmt 0 view .LVU52
 249 0012 04B0     		add	sp, sp, #16
 250              	.LCFI8:
 251              		.cfi_remember_state
 252              		.cfi_def_cfa_offset 8
 253              		@ sp needed
 254 0014 10BD     		pop	{r4, pc}
 255              	.LVL15:
 256              	.L24:
 257              	.LCFI9:
 258              		.cfi_restore_state
 217:Src/sd_diskio_dma_rtos.c **** 
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 10


 259              		.loc 1 217 5 is_stmt 1 view .LVU53
 217:Src/sd_diskio_dma_rtos.c **** 
 260              		.loc 1 217 13 is_stmt 0 view .LVU54
 261 0016 47F23052 		movw	r2, #30000
 262 001a 114B     		ldr	r3, .L28
 263 001c 1968     		ldr	r1, [r3]
 264 001e 01A8     		add	r0, sp, #4
 265 0020 FFF7FEFF 		bl	osMessageGet
 266              	.LVL16:
 219:Src/sd_diskio_dma_rtos.c ****     {
 267              		.loc 1 219 5 is_stmt 1 view .LVU55
 219:Src/sd_diskio_dma_rtos.c ****     {
 268              		.loc 1 219 14 is_stmt 0 view .LVU56
 269 0024 019B     		ldr	r3, [sp, #4]
 219:Src/sd_diskio_dma_rtos.c ****     {
 270              		.loc 1 219 8 view .LVU57
 271 0026 102B     		cmp	r3, #16
 272 0028 01D0     		beq	.L25
 205:Src/sd_diskio_dma_rtos.c ****   osEvent event;
 273              		.loc 1 205 11 view .LVU58
 274 002a 0120     		movs	r0, #1
 275 002c F1E7     		b	.L17
 276              	.L25:
 221:Src/sd_diskio_dma_rtos.c ****       {
 277              		.loc 1 221 7 is_stmt 1 view .LVU59
 221:Src/sd_diskio_dma_rtos.c ****       {
 278              		.loc 1 221 22 is_stmt 0 view .LVU60
 279 002e 029B     		ldr	r3, [sp, #8]
 221:Src/sd_diskio_dma_rtos.c ****       {
 280              		.loc 1 221 10 view .LVU61
 281 0030 012B     		cmp	r3, #1
 282 0032 01D0     		beq	.L26
 205:Src/sd_diskio_dma_rtos.c ****   osEvent event;
 283              		.loc 1 205 11 view .LVU62
 284 0034 0120     		movs	r0, #1
 285 0036 ECE7     		b	.L17
 286              	.L26:
 223:Src/sd_diskio_dma_rtos.c ****         /* block until SDIO IP is ready or a timeout occur */
 287              		.loc 1 223 9 is_stmt 1 view .LVU63
 223:Src/sd_diskio_dma_rtos.c ****         /* block until SDIO IP is ready or a timeout occur */
 288              		.loc 1 223 17 is_stmt 0 view .LVU64
 289 0038 FFF7FEFF 		bl	osKernelSysTick
 290              	.LVL17:
 223:Src/sd_diskio_dma_rtos.c ****         /* block until SDIO IP is ready or a timeout occur */
 291              		.loc 1 223 15 view .LVU65
 292 003c 47F23054 		movw	r4, #30000
 293 0040 0444     		add	r4, r4, r0
 294              	.LVL18:
 225:Src/sd_diskio_dma_rtos.c ****         {
 295              		.loc 1 225 9 is_stmt 1 view .LVU66
 296              	.L18:
 225:Src/sd_diskio_dma_rtos.c ****         {
 297              		.loc 1 225 14 view .LVU67
 225:Src/sd_diskio_dma_rtos.c ****         {
 298              		.loc 1 225 23 is_stmt 0 view .LVU68
 299 0042 FFF7FEFF 		bl	osKernelSysTick
 300              	.LVL19:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 11


 225:Src/sd_diskio_dma_rtos.c ****         {
 301              		.loc 1 225 14 view .LVU69
 302 0046 A042     		cmp	r0, r4
 303 0048 07D2     		bcs	.L27
 227:Src/sd_diskio_dma_rtos.c ****           {
 304              		.loc 1 227 11 is_stmt 1 view .LVU70
 227:Src/sd_diskio_dma_rtos.c ****           {
 305              		.loc 1 227 15 is_stmt 0 view .LVU71
 306 004a FFF7FEFF 		bl	BSP_SD_GetCardState
 307              	.LVL20:
 227:Src/sd_diskio_dma_rtos.c ****           {
 308              		.loc 1 227 14 view .LVU72
 309 004e 0028     		cmp	r0, #0
 310 0050 DFD0     		beq	.L17
 240:Src/sd_diskio_dma_rtos.c ****         }
 311              		.loc 1 240 11 is_stmt 1 view .LVU73
 312 0052 0120     		movs	r0, #1
 313 0054 FFF7FEFF 		bl	vTaskDelay
 314              	.LVL21:
 315 0058 F3E7     		b	.L18
 316              	.L27:
 205:Src/sd_diskio_dma_rtos.c ****   osEvent event;
 317              		.loc 1 205 11 is_stmt 0 view .LVU74
 318 005a 0120     		movs	r0, #1
 319 005c D9E7     		b	.L17
 320              	.L29:
 321 005e 00BF     		.align	2
 322              	.L28:
 323 0060 00000000 		.word	.LANCHOR2
 324              		.cfi_endproc
 325              	.LFE146:
 327              		.section	.text.SD_write,"ax",%progbits
 328              		.align	1
 329              		.global	SD_write
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv5-sp-d16
 335              	SD_write:
 336              	.LVL22:
 337              	.LFB147:
 248:Src/sd_diskio_dma_rtos.c **** 
 249:Src/sd_diskio_dma_rtos.c **** /**
 250:Src/sd_diskio_dma_rtos.c ****   * @brief  Writes Sector(s)
 251:Src/sd_diskio_dma_rtos.c ****   * @param  lun : not used
 252:Src/sd_diskio_dma_rtos.c ****   * @param  *buff: Data to be written
 253:Src/sd_diskio_dma_rtos.c ****   * @param  sector: Sector address (LBA)
 254:Src/sd_diskio_dma_rtos.c ****   * @param  count: Number of sectors to write (1..128)
 255:Src/sd_diskio_dma_rtos.c ****   * @retval DRESULT: Operation result
 256:Src/sd_diskio_dma_rtos.c ****   */
 257:Src/sd_diskio_dma_rtos.c **** #if _USE_WRITE == 1
 258:Src/sd_diskio_dma_rtos.c **** DRESULT SD_write(BYTE lun, const BYTE *buff, DWORD sector, UINT count)
 259:Src/sd_diskio_dma_rtos.c **** {
 338              		.loc 1 259 1 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 16
 341              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 12


 342              		.loc 1 259 1 is_stmt 0 view .LVU76
 343 0000 10B5     		push	{r4, lr}
 344              	.LCFI10:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 4, -8
 347              		.cfi_offset 14, -4
 348 0002 84B0     		sub	sp, sp, #16
 349              	.LCFI11:
 350              		.cfi_def_cfa_offset 24
 351 0004 0846     		mov	r0, r1
 352              	.LVL23:
 353              		.loc 1 259 1 view .LVU77
 354 0006 1146     		mov	r1, r2
 355              	.LVL24:
 260:Src/sd_diskio_dma_rtos.c ****   osEvent event;
 356              		.loc 1 260 3 is_stmt 1 view .LVU78
 261:Src/sd_diskio_dma_rtos.c ****   DRESULT res = RES_ERROR;
 357              		.loc 1 261 3 view .LVU79
 262:Src/sd_diskio_dma_rtos.c ****   uint32_t timer;
 358              		.loc 1 262 3 view .LVU80
 263:Src/sd_diskio_dma_rtos.c **** #if (ENABLE_SD_DMA_CACHE_MAINTENANCE == 1)
 264:Src/sd_diskio_dma_rtos.c ****   uint32_t alignedAddr;
 265:Src/sd_diskio_dma_rtos.c ****   /*
 266:Src/sd_diskio_dma_rtos.c ****     the SCB_CleanDCache_by_Addr() requires a 32-Byte aligned address
 267:Src/sd_diskio_dma_rtos.c ****     adjust the address and the D-Cache size to clean accordingly.
 268:Src/sd_diskio_dma_rtos.c ****   */
 269:Src/sd_diskio_dma_rtos.c ****   alignedAddr = (uint32_t)buff & ~0x1F;
 270:Src/sd_diskio_dma_rtos.c ****   SCB_CleanDCache_by_Addr((uint32_t*)alignedAddr, count*BLOCKSIZE + ((uint32_t)buff - alignedAddr))
 271:Src/sd_diskio_dma_rtos.c **** #endif
 272:Src/sd_diskio_dma_rtos.c **** 
 273:Src/sd_diskio_dma_rtos.c **** 
 274:Src/sd_diskio_dma_rtos.c ****   if(BSP_SD_WriteBlocks_DMA((uint32_t*)buff,
 359              		.loc 1 274 3 view .LVU81
 360              		.loc 1 274 6 is_stmt 0 view .LVU82
 361 0008 1A46     		mov	r2, r3
 362              	.LVL25:
 363              		.loc 1 274 6 view .LVU83
 364 000a FFF7FEFF 		bl	BSP_SD_WriteBlocks_DMA
 365              	.LVL26:
 366              		.loc 1 274 5 view .LVU84
 367 000e 10B1     		cbz	r0, .L38
 261:Src/sd_diskio_dma_rtos.c ****   uint32_t timer;
 368              		.loc 1 261 11 view .LVU85
 369 0010 0120     		movs	r0, #1
 370              	.L31:
 371              	.LVL27:
 275:Src/sd_diskio_dma_rtos.c ****                            (uint32_t) (sector),
 276:Src/sd_diskio_dma_rtos.c ****                            count) == MSD_OK)
 277:Src/sd_diskio_dma_rtos.c ****   {
 278:Src/sd_diskio_dma_rtos.c ****     /* Get the message from the queue */
 279:Src/sd_diskio_dma_rtos.c ****     event = osMessageGet(SDQueueID, SD_TIMEOUT);
 280:Src/sd_diskio_dma_rtos.c **** 
 281:Src/sd_diskio_dma_rtos.c ****     if (event.status == osEventMessage)
 282:Src/sd_diskio_dma_rtos.c ****     {
 283:Src/sd_diskio_dma_rtos.c ****       if (event.value.v == WRITE_CPLT_MSG)
 284:Src/sd_diskio_dma_rtos.c ****       {
 285:Src/sd_diskio_dma_rtos.c ****         timer = osKernelSysTick() + SD_TIMEOUT;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 13


 286:Src/sd_diskio_dma_rtos.c ****         /* block until SDIO IP is ready or a timeout occur */
 287:Src/sd_diskio_dma_rtos.c ****         while(timer > osKernelSysTick())
 288:Src/sd_diskio_dma_rtos.c ****         {
 289:Src/sd_diskio_dma_rtos.c ****           if (BSP_SD_GetCardState() == SD_TRANSFER_OK)
 290:Src/sd_diskio_dma_rtos.c ****           {
 291:Src/sd_diskio_dma_rtos.c ****             res = RES_OK;
 292:Src/sd_diskio_dma_rtos.c ****             break;
 293:Src/sd_diskio_dma_rtos.c ****           }
 294:Src/sd_diskio_dma_rtos.c ****           vTaskDelay(1); // patch
 295:Src/sd_diskio_dma_rtos.c ****         }
 296:Src/sd_diskio_dma_rtos.c ****       }
 297:Src/sd_diskio_dma_rtos.c ****     }
 298:Src/sd_diskio_dma_rtos.c ****   }
 299:Src/sd_diskio_dma_rtos.c **** 
 300:Src/sd_diskio_dma_rtos.c ****   return res;
 372              		.loc 1 300 3 is_stmt 1 view .LVU86
 301:Src/sd_diskio_dma_rtos.c **** }
 373              		.loc 1 301 1 is_stmt 0 view .LVU87
 374 0012 04B0     		add	sp, sp, #16
 375              	.LCFI12:
 376              		.cfi_remember_state
 377              		.cfi_def_cfa_offset 8
 378              		@ sp needed
 379 0014 10BD     		pop	{r4, pc}
 380              	.LVL28:
 381              	.L38:
 382              	.LCFI13:
 383              		.cfi_restore_state
 279:Src/sd_diskio_dma_rtos.c **** 
 384              		.loc 1 279 5 is_stmt 1 view .LVU88
 279:Src/sd_diskio_dma_rtos.c **** 
 385              		.loc 1 279 13 is_stmt 0 view .LVU89
 386 0016 47F23052 		movw	r2, #30000
 387 001a 114B     		ldr	r3, .L42
 388 001c 1968     		ldr	r1, [r3]
 389 001e 01A8     		add	r0, sp, #4
 390 0020 FFF7FEFF 		bl	osMessageGet
 391              	.LVL29:
 281:Src/sd_diskio_dma_rtos.c ****     {
 392              		.loc 1 281 5 is_stmt 1 view .LVU90
 281:Src/sd_diskio_dma_rtos.c ****     {
 393              		.loc 1 281 14 is_stmt 0 view .LVU91
 394 0024 019B     		ldr	r3, [sp, #4]
 281:Src/sd_diskio_dma_rtos.c ****     {
 395              		.loc 1 281 8 view .LVU92
 396 0026 102B     		cmp	r3, #16
 397 0028 01D0     		beq	.L39
 261:Src/sd_diskio_dma_rtos.c ****   uint32_t timer;
 398              		.loc 1 261 11 view .LVU93
 399 002a 0120     		movs	r0, #1
 400 002c F1E7     		b	.L31
 401              	.L39:
 283:Src/sd_diskio_dma_rtos.c ****       {
 402              		.loc 1 283 7 is_stmt 1 view .LVU94
 283:Src/sd_diskio_dma_rtos.c ****       {
 403              		.loc 1 283 22 is_stmt 0 view .LVU95
 404 002e 029B     		ldr	r3, [sp, #8]
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 14


 283:Src/sd_diskio_dma_rtos.c ****       {
 405              		.loc 1 283 10 view .LVU96
 406 0030 022B     		cmp	r3, #2
 407 0032 01D0     		beq	.L40
 261:Src/sd_diskio_dma_rtos.c ****   uint32_t timer;
 408              		.loc 1 261 11 view .LVU97
 409 0034 0120     		movs	r0, #1
 410 0036 ECE7     		b	.L31
 411              	.L40:
 285:Src/sd_diskio_dma_rtos.c ****         /* block until SDIO IP is ready or a timeout occur */
 412              		.loc 1 285 9 is_stmt 1 view .LVU98
 285:Src/sd_diskio_dma_rtos.c ****         /* block until SDIO IP is ready or a timeout occur */
 413              		.loc 1 285 17 is_stmt 0 view .LVU99
 414 0038 FFF7FEFF 		bl	osKernelSysTick
 415              	.LVL30:
 285:Src/sd_diskio_dma_rtos.c ****         /* block until SDIO IP is ready or a timeout occur */
 416              		.loc 1 285 15 view .LVU100
 417 003c 47F23054 		movw	r4, #30000
 418 0040 0444     		add	r4, r4, r0
 419              	.LVL31:
 287:Src/sd_diskio_dma_rtos.c ****         {
 420              		.loc 1 287 9 is_stmt 1 view .LVU101
 421              	.L32:
 287:Src/sd_diskio_dma_rtos.c ****         {
 422              		.loc 1 287 14 view .LVU102
 287:Src/sd_diskio_dma_rtos.c ****         {
 423              		.loc 1 287 23 is_stmt 0 view .LVU103
 424 0042 FFF7FEFF 		bl	osKernelSysTick
 425              	.LVL32:
 287:Src/sd_diskio_dma_rtos.c ****         {
 426              		.loc 1 287 14 view .LVU104
 427 0046 A042     		cmp	r0, r4
 428 0048 07D2     		bcs	.L41
 289:Src/sd_diskio_dma_rtos.c ****           {
 429              		.loc 1 289 11 is_stmt 1 view .LVU105
 289:Src/sd_diskio_dma_rtos.c ****           {
 430              		.loc 1 289 15 is_stmt 0 view .LVU106
 431 004a FFF7FEFF 		bl	BSP_SD_GetCardState
 432              	.LVL33:
 289:Src/sd_diskio_dma_rtos.c ****           {
 433              		.loc 1 289 14 view .LVU107
 434 004e 0028     		cmp	r0, #0
 435 0050 DFD0     		beq	.L31
 294:Src/sd_diskio_dma_rtos.c ****         }
 436              		.loc 1 294 11 is_stmt 1 view .LVU108
 437 0052 0120     		movs	r0, #1
 438 0054 FFF7FEFF 		bl	vTaskDelay
 439              	.LVL34:
 440 0058 F3E7     		b	.L32
 441              	.L41:
 261:Src/sd_diskio_dma_rtos.c ****   uint32_t timer;
 442              		.loc 1 261 11 is_stmt 0 view .LVU109
 443 005a 0120     		movs	r0, #1
 444 005c D9E7     		b	.L31
 445              	.L43:
 446 005e 00BF     		.align	2
 447              	.L42:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 15


 448 0060 00000000 		.word	.LANCHOR2
 449              		.cfi_endproc
 450              	.LFE147:
 452              		.section	.text.SD_ioctl,"ax",%progbits
 453              		.align	1
 454              		.global	SD_ioctl
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv5-sp-d16
 460              	SD_ioctl:
 461              	.LVL35:
 462              	.LFB148:
 302:Src/sd_diskio_dma_rtos.c **** #endif /* _USE_WRITE == 1 */
 303:Src/sd_diskio_dma_rtos.c **** 
 304:Src/sd_diskio_dma_rtos.c **** /**
 305:Src/sd_diskio_dma_rtos.c ****   * @brief  I/O control operation
 306:Src/sd_diskio_dma_rtos.c ****   * @param  lun : not used
 307:Src/sd_diskio_dma_rtos.c ****   * @param  cmd: Control code
 308:Src/sd_diskio_dma_rtos.c ****   * @param  *buff: Buffer to send/receive control data
 309:Src/sd_diskio_dma_rtos.c ****   * @retval DRESULT: Operation result
 310:Src/sd_diskio_dma_rtos.c ****   */
 311:Src/sd_diskio_dma_rtos.c **** #if _USE_IOCTL == 1
 312:Src/sd_diskio_dma_rtos.c **** DRESULT SD_ioctl(BYTE lun, BYTE cmd, void *buff)
 313:Src/sd_diskio_dma_rtos.c **** {
 463              		.loc 1 313 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 32
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		.loc 1 313 1 is_stmt 0 view .LVU111
 468 0000 30B5     		push	{r4, r5, lr}
 469              	.LCFI14:
 470              		.cfi_def_cfa_offset 12
 471              		.cfi_offset 4, -12
 472              		.cfi_offset 5, -8
 473              		.cfi_offset 14, -4
 474 0002 89B0     		sub	sp, sp, #36
 475              	.LCFI15:
 476              		.cfi_def_cfa_offset 48
 314:Src/sd_diskio_dma_rtos.c ****   DRESULT res = RES_ERROR;
 477              		.loc 1 314 3 is_stmt 1 view .LVU112
 478              	.LVL36:
 315:Src/sd_diskio_dma_rtos.c ****   BSP_SD_CardInfo CardInfo;
 479              		.loc 1 315 3 view .LVU113
 316:Src/sd_diskio_dma_rtos.c **** 
 317:Src/sd_diskio_dma_rtos.c ****   if (Stat & STA_NOINIT) return RES_NOTRDY;
 480              		.loc 1 317 3 view .LVU114
 481              		.loc 1 317 12 is_stmt 0 view .LVU115
 482 0004 134B     		ldr	r3, .L54
 483 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 484              		.loc 1 317 6 view .LVU116
 485 0008 13F00104 		ands	r4, r3, #1
 486 000c 1DD1     		bne	.L51
 487 000e 0846     		mov	r0, r1
 488              	.LVL37:
 489              		.loc 1 317 6 view .LVU117
 490 0010 1546     		mov	r5, r2
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 16


 318:Src/sd_diskio_dma_rtos.c **** 
 319:Src/sd_diskio_dma_rtos.c ****   switch (cmd)
 491              		.loc 1 319 3 is_stmt 1 view .LVU118
 492 0012 0329     		cmp	r1, #3
 493 0014 1CD8     		bhi	.L52
 494 0016 DFE801F0 		tbb	[pc, r1]
 495              	.L47:
 496 001a 19       		.byte	(.L45-.L47)/2
 497 001b 02       		.byte	(.L49-.L47)/2
 498 001c 09       		.byte	(.L48-.L47)/2
 499 001d 10       		.byte	(.L46-.L47)/2
 500              		.p2align 1
 501              	.L49:
 320:Src/sd_diskio_dma_rtos.c ****   {
 321:Src/sd_diskio_dma_rtos.c ****   /* Make sure that no pending write process */
 322:Src/sd_diskio_dma_rtos.c ****   case CTRL_SYNC :
 323:Src/sd_diskio_dma_rtos.c ****     res = RES_OK;
 324:Src/sd_diskio_dma_rtos.c ****     break;
 325:Src/sd_diskio_dma_rtos.c **** 
 326:Src/sd_diskio_dma_rtos.c ****   /* Get number of sectors on the disk (DWORD) */
 327:Src/sd_diskio_dma_rtos.c ****   case GET_SECTOR_COUNT :
 328:Src/sd_diskio_dma_rtos.c ****     BSP_SD_GetCardInfo(&CardInfo);
 502              		.loc 1 328 5 view .LVU119
 503 001e 6846     		mov	r0, sp
 504 0020 FFF7FEFF 		bl	BSP_SD_GetCardInfo
 505              	.LVL38:
 329:Src/sd_diskio_dma_rtos.c ****     *(DWORD*)buff = CardInfo.LogBlockNbr;
 506              		.loc 1 329 5 view .LVU120
 507              		.loc 1 329 29 is_stmt 0 view .LVU121
 508 0024 069B     		ldr	r3, [sp, #24]
 509              		.loc 1 329 19 view .LVU122
 510 0026 2B60     		str	r3, [r5]
 330:Src/sd_diskio_dma_rtos.c ****     res = RES_OK;
 511              		.loc 1 330 5 is_stmt 1 view .LVU123
 512              	.LVL39:
 331:Src/sd_diskio_dma_rtos.c ****     break;
 513              		.loc 1 331 5 view .LVU124
 330:Src/sd_diskio_dma_rtos.c ****     res = RES_OK;
 514              		.loc 1 330 9 is_stmt 0 view .LVU125
 515 0028 2046     		mov	r0, r4
 516              		.loc 1 331 5 view .LVU126
 517 002a 0FE0     		b	.L45
 518              	.LVL40:
 519              	.L48:
 332:Src/sd_diskio_dma_rtos.c **** 
 333:Src/sd_diskio_dma_rtos.c ****   /* Get R/W sector size (WORD) */
 334:Src/sd_diskio_dma_rtos.c ****   case GET_SECTOR_SIZE :
 335:Src/sd_diskio_dma_rtos.c ****     BSP_SD_GetCardInfo(&CardInfo);
 520              		.loc 1 335 5 is_stmt 1 view .LVU127
 521 002c 6846     		mov	r0, sp
 522 002e FFF7FEFF 		bl	BSP_SD_GetCardInfo
 523              	.LVL41:
 336:Src/sd_diskio_dma_rtos.c ****     *(WORD*)buff = CardInfo.LogBlockSize;
 524              		.loc 1 336 5 view .LVU128
 525              		.loc 1 336 28 is_stmt 0 view .LVU129
 526 0032 079B     		ldr	r3, [sp, #28]
 527              		.loc 1 336 18 view .LVU130
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 17


 528 0034 2B80     		strh	r3, [r5]	@ movhi
 337:Src/sd_diskio_dma_rtos.c ****     res = RES_OK;
 529              		.loc 1 337 5 is_stmt 1 view .LVU131
 530              	.LVL42:
 338:Src/sd_diskio_dma_rtos.c ****     break;
 531              		.loc 1 338 5 view .LVU132
 337:Src/sd_diskio_dma_rtos.c ****     res = RES_OK;
 532              		.loc 1 337 9 is_stmt 0 view .LVU133
 533 0036 2046     		mov	r0, r4
 534              		.loc 1 338 5 view .LVU134
 535 0038 08E0     		b	.L45
 536              	.LVL43:
 537              	.L46:
 339:Src/sd_diskio_dma_rtos.c **** 
 340:Src/sd_diskio_dma_rtos.c ****   /* Get erase block size in unit of sector (DWORD) */
 341:Src/sd_diskio_dma_rtos.c ****   case GET_BLOCK_SIZE :
 342:Src/sd_diskio_dma_rtos.c ****     BSP_SD_GetCardInfo(&CardInfo);
 538              		.loc 1 342 5 is_stmt 1 view .LVU135
 539 003a 6846     		mov	r0, sp
 540 003c FFF7FEFF 		bl	BSP_SD_GetCardInfo
 541              	.LVL44:
 343:Src/sd_diskio_dma_rtos.c ****     *(DWORD*)buff = CardInfo.LogBlockSize / SD_DEFAULT_BLOCK_SIZE;
 542              		.loc 1 343 5 view .LVU136
 543              		.loc 1 343 29 is_stmt 0 view .LVU137
 544 0040 079B     		ldr	r3, [sp, #28]
 545              		.loc 1 343 43 view .LVU138
 546 0042 5B0A     		lsrs	r3, r3, #9
 547              		.loc 1 343 19 view .LVU139
 548 0044 2B60     		str	r3, [r5]
 344:Src/sd_diskio_dma_rtos.c **** 	res = RES_OK;
 549              		.loc 1 344 2 is_stmt 1 view .LVU140
 550              	.LVL45:
 345:Src/sd_diskio_dma_rtos.c ****     break;
 551              		.loc 1 345 5 view .LVU141
 344:Src/sd_diskio_dma_rtos.c **** 	res = RES_OK;
 552              		.loc 1 344 6 is_stmt 0 view .LVU142
 553 0046 2046     		mov	r0, r4
 554              		.loc 1 345 5 view .LVU143
 555 0048 00E0     		b	.L45
 556              	.LVL46:
 557              	.L51:
 317:Src/sd_diskio_dma_rtos.c **** 
 558              		.loc 1 317 33 view .LVU144
 559 004a 0320     		movs	r0, #3
 560              	.LVL47:
 561              	.L45:
 346:Src/sd_diskio_dma_rtos.c **** 
 347:Src/sd_diskio_dma_rtos.c ****   default:
 348:Src/sd_diskio_dma_rtos.c ****     res = RES_PARERR;
 349:Src/sd_diskio_dma_rtos.c ****   }
 350:Src/sd_diskio_dma_rtos.c **** 
 351:Src/sd_diskio_dma_rtos.c ****   return res;
 352:Src/sd_diskio_dma_rtos.c **** }
 562              		.loc 1 352 1 view .LVU145
 563 004c 09B0     		add	sp, sp, #36
 564              	.LCFI16:
 565              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 18


 566              		@ sp needed
 567 004e 30BD     		pop	{r4, r5, pc}
 568              	.LVL48:
 569              	.L52:
 348:Src/sd_diskio_dma_rtos.c ****   }
 570              		.loc 1 348 9 view .LVU146
 571 0050 0420     		movs	r0, #4
 572 0052 FBE7     		b	.L45
 573              	.L55:
 574              		.align	2
 575              	.L54:
 576 0054 00000000 		.word	.LANCHOR0
 577              		.cfi_endproc
 578              	.LFE148:
 580              		.section	.text.BSP_SD_WriteCpltCallback,"ax",%progbits
 581              		.align	1
 582              		.global	BSP_SD_WriteCpltCallback
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu fpv5-sp-d16
 588              	BSP_SD_WriteCpltCallback:
 589              	.LFB149:
 353:Src/sd_diskio_dma_rtos.c **** #endif /* _USE_IOCTL == 1 */
 354:Src/sd_diskio_dma_rtos.c **** 
 355:Src/sd_diskio_dma_rtos.c **** 
 356:Src/sd_diskio_dma_rtos.c **** 
 357:Src/sd_diskio_dma_rtos.c **** /**
 358:Src/sd_diskio_dma_rtos.c ****   * @brief Tx Transfer completed callbacks
 359:Src/sd_diskio_dma_rtos.c ****   * @param None
 360:Src/sd_diskio_dma_rtos.c ****   * @retval None
 361:Src/sd_diskio_dma_rtos.c ****   */
 362:Src/sd_diskio_dma_rtos.c **** void BSP_SD_WriteCpltCallback( void )
 363:Src/sd_diskio_dma_rtos.c **** {
 590              		.loc 1 363 1 is_stmt 1 view -0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594 0000 08B5     		push	{r3, lr}
 595              	.LCFI17:
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 3, -8
 598              		.cfi_offset 14, -4
 364:Src/sd_diskio_dma_rtos.c ****   /*
 365:Src/sd_diskio_dma_rtos.c ****    * No need to add an "osKernelRunning()" check here, as the SD_initialize()
 366:Src/sd_diskio_dma_rtos.c ****    * is always called before any SD_Read()/SD_Write() call
 367:Src/sd_diskio_dma_rtos.c ****    */
 368:Src/sd_diskio_dma_rtos.c ****   osMessagePut(SDQueueID, WRITE_CPLT_MSG, osWaitForever);
 599              		.loc 1 368 3 view .LVU148
 600 0002 4FF0FF32 		mov	r2, #-1
 601 0006 0221     		movs	r1, #2
 602 0008 024B     		ldr	r3, .L58
 603 000a 1868     		ldr	r0, [r3]
 604 000c FFF7FEFF 		bl	osMessagePut
 605              	.LVL49:
 369:Src/sd_diskio_dma_rtos.c **** }
 606              		.loc 1 369 1 is_stmt 0 view .LVU149
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 19


 607 0010 08BD     		pop	{r3, pc}
 608              	.L59:
 609 0012 00BF     		.align	2
 610              	.L58:
 611 0014 00000000 		.word	.LANCHOR2
 612              		.cfi_endproc
 613              	.LFE149:
 615              		.section	.text.BSP_SD_ReadCpltCallback,"ax",%progbits
 616              		.align	1
 617              		.global	BSP_SD_ReadCpltCallback
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 621              		.fpu fpv5-sp-d16
 623              	BSP_SD_ReadCpltCallback:
 624              	.LFB150:
 370:Src/sd_diskio_dma_rtos.c **** 
 371:Src/sd_diskio_dma_rtos.c **** /**
 372:Src/sd_diskio_dma_rtos.c ****   * @brief Rx Transfer completed callbacks
 373:Src/sd_diskio_dma_rtos.c ****   * @param None
 374:Src/sd_diskio_dma_rtos.c ****   * @retval None
 375:Src/sd_diskio_dma_rtos.c ****   */
 376:Src/sd_diskio_dma_rtos.c **** void BSP_SD_ReadCpltCallback( void )
 377:Src/sd_diskio_dma_rtos.c **** {
 625              		.loc 1 377 1 is_stmt 1 view -0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629 0000 08B5     		push	{r3, lr}
 630              	.LCFI18:
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 3, -8
 633              		.cfi_offset 14, -4
 378:Src/sd_diskio_dma_rtos.c ****   /*
 379:Src/sd_diskio_dma_rtos.c ****    * No need to add an "osKernelRunning()" check here, as the SD_initialize()
 380:Src/sd_diskio_dma_rtos.c ****    * is always called before any SD_Read()/SD_Write() call
 381:Src/sd_diskio_dma_rtos.c ****    */
 382:Src/sd_diskio_dma_rtos.c ****   osMessagePut(SDQueueID, READ_CPLT_MSG, osWaitForever);
 634              		.loc 1 382 3 view .LVU151
 635 0002 4FF0FF32 		mov	r2, #-1
 636 0006 0121     		movs	r1, #1
 637 0008 024B     		ldr	r3, .L62
 638 000a 1868     		ldr	r0, [r3]
 639 000c FFF7FEFF 		bl	osMessagePut
 640              	.LVL50:
 383:Src/sd_diskio_dma_rtos.c **** }
 641              		.loc 1 383 1 is_stmt 0 view .LVU152
 642 0010 08BD     		pop	{r3, pc}
 643              	.L63:
 644 0012 00BF     		.align	2
 645              	.L62:
 646 0014 00000000 		.word	.LANCHOR2
 647              		.cfi_endproc
 648              	.LFE150:
 650              		.section	.text.BSP_SD_AbortCallback,"ax",%progbits
 651              		.align	1
 652              		.global	BSP_SD_AbortCallback
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 20


 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-sp-d16
 658              	BSP_SD_AbortCallback:
 659              	.LFB151:
 384:Src/sd_diskio_dma_rtos.c **** 
 385:Src/sd_diskio_dma_rtos.c **** /**
 386:Src/sd_diskio_dma_rtos.c ****   * @brief Rx Transfer completed callbacks
 387:Src/sd_diskio_dma_rtos.c ****   * @param None
 388:Src/sd_diskio_dma_rtos.c ****   * @retval None
 389:Src/sd_diskio_dma_rtos.c ****   */
 390:Src/sd_diskio_dma_rtos.c **** void BSP_SD_AbortCallback( void )
 391:Src/sd_diskio_dma_rtos.c **** {
 660              		.loc 1 391 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664 0000 08B5     		push	{r3, lr}
 665              	.LCFI19:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 3, -8
 668              		.cfi_offset 14, -4
 392:Src/sd_diskio_dma_rtos.c ****   /*
 393:Src/sd_diskio_dma_rtos.c ****    * No need to add an "osKernelRunning()" check here, as the SD_initialize()
 394:Src/sd_diskio_dma_rtos.c ****    * is always called before any SD_Read()/SD_Write() call
 395:Src/sd_diskio_dma_rtos.c ****    */
 396:Src/sd_diskio_dma_rtos.c ****    osMessagePut(SDQueueID, ABORT_MSG, osWaitForever);
 669              		.loc 1 396 4 view .LVU154
 670 0002 4FF0FF32 		mov	r2, #-1
 671 0006 0321     		movs	r1, #3
 672 0008 024B     		ldr	r3, .L66
 673 000a 1868     		ldr	r0, [r3]
 674 000c FFF7FEFF 		bl	osMessagePut
 675              	.LVL51:
 397:Src/sd_diskio_dma_rtos.c **** }
 676              		.loc 1 397 1 is_stmt 0 view .LVU155
 677 0010 08BD     		pop	{r3, pc}
 678              	.L67:
 679 0012 00BF     		.align	2
 680              	.L66:
 681 0014 00000000 		.word	.LANCHOR2
 682              		.cfi_endproc
 683              	.LFE151:
 685              		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
 686              		.align	1
 687              		.global	DMA2_Stream3_IRQHandler
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv5-sp-d16
 693              	DMA2_Stream3_IRQHandler:
 694              	.LFB152:
 398:Src/sd_diskio_dma_rtos.c **** 
 399:Src/sd_diskio_dma_rtos.c **** extern SD_HandleTypeDef uSdHandle;
 400:Src/sd_diskio_dma_rtos.c **** 
 401:Src/sd_diskio_dma_rtos.c **** /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 21


 402:Src/sd_diskio_dma_rtos.c **** /**
 403:Src/sd_diskio_dma_rtos.c ****   * @brief  This function handles DMA2 Stream 3 interrupt request.
 404:Src/sd_diskio_dma_rtos.c ****   * @param  None
 405:Src/sd_diskio_dma_rtos.c ****   * @retval None
 406:Src/sd_diskio_dma_rtos.c ****   */
 407:Src/sd_diskio_dma_rtos.c **** void DMA2_Stream3_IRQHandler(void)
 408:Src/sd_diskio_dma_rtos.c **** {
 695              		.loc 1 408 1 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699 0000 08B5     		push	{r3, lr}
 700              	.LCFI20:
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 3, -8
 703              		.cfi_offset 14, -4
 409:Src/sd_diskio_dma_rtos.c ****   HAL_DMA_IRQHandler(uSdHandle.hdmarx);
 704              		.loc 1 409 3 view .LVU157
 705 0002 024B     		ldr	r3, .L70
 706 0004 D86B     		ldr	r0, [r3, #60]
 707 0006 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 708              	.LVL52:
 410:Src/sd_diskio_dma_rtos.c **** }
 709              		.loc 1 410 1 is_stmt 0 view .LVU158
 710 000a 08BD     		pop	{r3, pc}
 711              	.L71:
 712              		.align	2
 713              	.L70:
 714 000c 00000000 		.word	uSdHandle
 715              		.cfi_endproc
 716              	.LFE152:
 718              		.section	.text.DMA2_Stream6_IRQHandler,"ax",%progbits
 719              		.align	1
 720              		.global	DMA2_Stream6_IRQHandler
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv5-sp-d16
 726              	DMA2_Stream6_IRQHandler:
 727              	.LFB153:
 411:Src/sd_diskio_dma_rtos.c **** 
 412:Src/sd_diskio_dma_rtos.c **** /**
 413:Src/sd_diskio_dma_rtos.c ****   * @brief  This function handles DMA2 Stream 6 interrupt request.
 414:Src/sd_diskio_dma_rtos.c ****   * @param  None
 415:Src/sd_diskio_dma_rtos.c ****   * @retval None
 416:Src/sd_diskio_dma_rtos.c ****   */
 417:Src/sd_diskio_dma_rtos.c **** void DMA2_Stream6_IRQHandler(void)
 418:Src/sd_diskio_dma_rtos.c **** {
 728              		.loc 1 418 1 is_stmt 1 view -0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732 0000 08B5     		push	{r3, lr}
 733              	.LCFI21:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 3, -8
 736              		.cfi_offset 14, -4
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 22


 419:Src/sd_diskio_dma_rtos.c ****   HAL_DMA_IRQHandler(uSdHandle.hdmatx);
 737              		.loc 1 419 3 view .LVU160
 738 0002 024B     		ldr	r3, .L74
 739 0004 186C     		ldr	r0, [r3, #64]
 740 0006 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 741              	.LVL53:
 420:Src/sd_diskio_dma_rtos.c **** }
 742              		.loc 1 420 1 is_stmt 0 view .LVU161
 743 000a 08BD     		pop	{r3, pc}
 744              	.L75:
 745              		.align	2
 746              	.L74:
 747 000c 00000000 		.word	uSdHandle
 748              		.cfi_endproc
 749              	.LFE153:
 751              		.section	.text.SDMMC1_IRQHandler,"ax",%progbits
 752              		.align	1
 753              		.global	SDMMC1_IRQHandler
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 757              		.fpu fpv5-sp-d16
 759              	SDMMC1_IRQHandler:
 760              	.LFB154:
 421:Src/sd_diskio_dma_rtos.c **** 
 422:Src/sd_diskio_dma_rtos.c **** /**
 423:Src/sd_diskio_dma_rtos.c ****   * @brief  This function handles SDIO interrupt request.
 424:Src/sd_diskio_dma_rtos.c ****   * @param  None
 425:Src/sd_diskio_dma_rtos.c ****   * @retval None
 426:Src/sd_diskio_dma_rtos.c ****   */
 427:Src/sd_diskio_dma_rtos.c **** void SDMMC1_IRQHandler(void)
 428:Src/sd_diskio_dma_rtos.c **** {
 761              		.loc 1 428 1 is_stmt 1 view -0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765 0000 08B5     		push	{r3, lr}
 766              	.LCFI22:
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 3, -8
 769              		.cfi_offset 14, -4
 429:Src/sd_diskio_dma_rtos.c ****   HAL_SD_IRQHandler(&uSdHandle);
 770              		.loc 1 429 3 view .LVU163
 771 0002 0248     		ldr	r0, .L78
 772 0004 FFF7FEFF 		bl	HAL_SD_IRQHandler
 773              	.LVL54:
 430:Src/sd_diskio_dma_rtos.c **** }
 774              		.loc 1 430 1 is_stmt 0 view .LVU164
 775 0008 08BD     		pop	{r3, pc}
 776              	.L79:
 777 000a 00BF     		.align	2
 778              	.L78:
 779 000c 00000000 		.word	uSdHandle
 780              		.cfi_endproc
 781              	.LFE154:
 783              		.global	SD_Driver
 784              		.section	.rodata
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 23


 785              		.align	2
 786              		.set	.LANCHOR1,. + 0
 787              	.LC0:
 788 0000 0A000000 		.word	10
 789 0004 02000000 		.word	2
 790              		.section	.bss.SDQueueID,"aw",%nobits
 791              		.align	2
 792              		.set	.LANCHOR2,. + 0
 795              	SDQueueID:
 796 0000 00000000 		.space	4
 797              		.section	.data.Stat,"aw"
 798              		.set	.LANCHOR0,. + 0
 801              	Stat:
 802 0000 01       		.byte	1
 803              		.section	.rodata.SD_Driver,"a"
 804              		.align	2
 807              	SD_Driver:
 808 0000 00000000 		.word	SD_initialize
 809 0004 00000000 		.word	SD_status
 810 0008 00000000 		.word	SD_read
 811 000c 00000000 		.word	SD_write
 812 0010 00000000 		.word	SD_ioctl
 813              		.text
 814              	.Letext0:
 815              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 816              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 817              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 818              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 819              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 820              		.file 7 "Middlewares/Third_Party/FatFs/src/integer.h"
 821              		.file 8 "Middlewares/Third_Party/FatFs/src/diskio.h"
 822              		.file 9 "Inc/FreeRTOSConfig.h"
 823              		.file 10 "Drivers/CMSIS/Include/core_cm7.h"
 824              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 825              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 826              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 827              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 828              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eab
 829              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 830              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 831              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 832              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 833              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 834              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 835              		.file 22 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 836              		.file 23 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 837              		.file 24 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 838              		.file 25 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 839              		.file 26 "Inc/stm32f7_diskio_dma_rtos.h"
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 sd_diskio_dma_rtos.c
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:18     .text.SD_CheckStatus:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:25     .text.SD_CheckStatus:00000000 SD_CheckStatus
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:66     .text.SD_CheckStatus:00000020 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:71     .text.SD_initialize:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:78     .text.SD_initialize:00000000 SD_initialize
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:166    .text.SD_initialize:00000050 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:173    .text.SD_status:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:180    .text.SD_status:00000000 SD_status
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:203    .text.SD_read:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:210    .text.SD_read:00000000 SD_read
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:323    .text.SD_read:00000060 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:328    .text.SD_write:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:335    .text.SD_write:00000000 SD_write
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:448    .text.SD_write:00000060 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:453    .text.SD_ioctl:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:460    .text.SD_ioctl:00000000 SD_ioctl
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:496    .text.SD_ioctl:0000001a $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:500    .text.SD_ioctl:0000001e $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:576    .text.SD_ioctl:00000054 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:581    .text.BSP_SD_WriteCpltCallback:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:588    .text.BSP_SD_WriteCpltCallback:00000000 BSP_SD_WriteCpltCallback
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:611    .text.BSP_SD_WriteCpltCallback:00000014 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:616    .text.BSP_SD_ReadCpltCallback:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:623    .text.BSP_SD_ReadCpltCallback:00000000 BSP_SD_ReadCpltCallback
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:646    .text.BSP_SD_ReadCpltCallback:00000014 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:651    .text.BSP_SD_AbortCallback:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:658    .text.BSP_SD_AbortCallback:00000000 BSP_SD_AbortCallback
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:681    .text.BSP_SD_AbortCallback:00000014 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:686    .text.DMA2_Stream3_IRQHandler:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:693    .text.DMA2_Stream3_IRQHandler:00000000 DMA2_Stream3_IRQHandler
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:714    .text.DMA2_Stream3_IRQHandler:0000000c $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:719    .text.DMA2_Stream6_IRQHandler:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:726    .text.DMA2_Stream6_IRQHandler:00000000 DMA2_Stream6_IRQHandler
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:747    .text.DMA2_Stream6_IRQHandler:0000000c $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:752    .text.SDMMC1_IRQHandler:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:759    .text.SDMMC1_IRQHandler:00000000 SDMMC1_IRQHandler
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:779    .text.SDMMC1_IRQHandler:0000000c $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:807    .rodata.SD_Driver:00000000 SD_Driver
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:785    .rodata:00000000 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:791    .bss.SDQueueID:00000000 $d
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:795    .bss.SDQueueID:00000000 SDQueueID
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:801    .data.Stat:00000000 Stat
C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s:804    .rodata.SD_Driver:00000000 $d

UNDEFINED SYMBOLS
BSP_SD_GetCardState
osKernelRunning
BSP_SD_Init
osMessageCreate
BSP_SD_ReadBlocks_DMA
osMessageGet
osKernelSysTick
vTaskDelay
BSP_SD_WriteBlocks_DMA
BSP_SD_GetCardInfo
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccomHCxJ.s 			page 25


osMessagePut
HAL_DMA_IRQHandler
uSdHandle
HAL_SD_IRQHandler
