ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ethernetif.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 45746849 		.ascii	"EthIf\000"
  17      6600
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.low_level_input,"ax",%progbits
  22              		.align	1
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv5-sp-d16
  29              	low_level_input:
  30              	.LVL0:
  31              	.LFB170:
  32              		.file 1 "Src/ethernetif.c"
   1:Src/ethernetif.c **** /**
   2:Src/ethernetif.c ****   ******************************************************************************
   3:Src/ethernetif.c ****   * File Name          : ethernetif.c
   4:Src/ethernetif.c ****   * Description        : This file provides code for the configuration
   5:Src/ethernetif.c ****   *                      of the ethernetif.c MiddleWare.
   6:Src/ethernetif.c ****   ******************************************************************************
   7:Src/ethernetif.c ****   * This notice applies to any and all portions of this file
   8:Src/ethernetif.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/ethernetif.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/ethernetif.c ****   * inserted by the user or by software development tools
  11:Src/ethernetif.c ****   * are owned by their respective copyright owners.
  12:Src/ethernetif.c ****   *
  13:Src/ethernetif.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/ethernetif.c ****   * All rights reserved.
  15:Src/ethernetif.c ****   *
  16:Src/ethernetif.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/ethernetif.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/ethernetif.c ****   *
  19:Src/ethernetif.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/ethernetif.c ****   *    this list of conditions and the following disclaimer.
  21:Src/ethernetif.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/ethernetif.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/ethernetif.c ****   *    and/or other materials provided with the distribution.
  24:Src/ethernetif.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/ethernetif.c ****   *    contributors to this software may be used to endorse or promote products 
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 2


  26:Src/ethernetif.c ****   *    derived from this software without specific written permission.
  27:Src/ethernetif.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/ethernetif.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/ethernetif.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/ethernetif.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/ethernetif.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/ethernetif.c ****   *    this license. 
  33:Src/ethernetif.c ****   *
  34:Src/ethernetif.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/ethernetif.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/ethernetif.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/ethernetif.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/ethernetif.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/ethernetif.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/ethernetif.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/ethernetif.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/ethernetif.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/ethernetif.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/ethernetif.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/ethernetif.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/ethernetif.c ****   *
  47:Src/ethernetif.c ****   ******************************************************************************
  48:Src/ethernetif.c ****   */
  49:Src/ethernetif.c **** 
  50:Src/ethernetif.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/ethernetif.c **** #include "stm32f7xx_hal.h"
  52:Src/ethernetif.c **** #include "lwip/opt.h"
  53:Src/ethernetif.c **** 
  54:Src/ethernetif.c **** #include "lwip/timeouts.h"
  55:Src/ethernetif.c **** #include "netif/ethernet.h"
  56:Src/ethernetif.c **** #include "netif/etharp.h"
  57:Src/ethernetif.c **** #include "lwip/ethip6.h"
  58:Src/ethernetif.c **** #include "ethernetif.h"
  59:Src/ethernetif.c **** #include <string.h>
  60:Src/ethernetif.c **** #include "cmsis_os.h"
  61:Src/ethernetif.c **** /* Within 'USER CODE' section, code will be kept by default at each generation */
  62:Src/ethernetif.c **** /* USER CODE BEGIN 0 */
  63:Src/ethernetif.c **** 
  64:Src/ethernetif.c **** /* USER CODE END 0 */
  65:Src/ethernetif.c **** 
  66:Src/ethernetif.c **** /* Private define ------------------------------------------------------------*/
  67:Src/ethernetif.c **** /* The time to block waiting for input. */
  68:Src/ethernetif.c **** #define TIME_WAITING_FOR_INPUT ( portMAX_DELAY )
  69:Src/ethernetif.c **** /* Stack size of the interface thread */
  70:Src/ethernetif.c **** #define INTERFACE_THREAD_STACK_SIZE ( 350 )
  71:Src/ethernetif.c **** /* Network interface name */
  72:Src/ethernetif.c **** #define IFNAME0 's'
  73:Src/ethernetif.c **** #define IFNAME1 't'
  74:Src/ethernetif.c **** 
  75:Src/ethernetif.c **** /* USER CODE BEGIN 1 */
  76:Src/ethernetif.c **** 
  77:Src/ethernetif.c **** /* USER CODE END 1 */
  78:Src/ethernetif.c **** 
  79:Src/ethernetif.c **** /* Private variables ---------------------------------------------------------*/
  80:Src/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  81:Src/ethernetif.c ****   #pragma data_alignment=4   
  82:Src/ethernetif.c **** #endif
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 3


  83:Src/ethernetif.c **** __ALIGN_BEGIN ETH_DMADescTypeDef  DMARxDscrTab[ETH_RXBUFNB] __ALIGN_END;/* Ethernet Rx MA Descripto
  84:Src/ethernetif.c **** 
  85:Src/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  86:Src/ethernetif.c ****   #pragma data_alignment=4   
  87:Src/ethernetif.c **** #endif
  88:Src/ethernetif.c **** __ALIGN_BEGIN ETH_DMADescTypeDef  DMATxDscrTab[ETH_TXBUFNB] __ALIGN_END;/* Ethernet Tx DMA Descript
  89:Src/ethernetif.c **** 
  90:Src/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  91:Src/ethernetif.c ****   #pragma data_alignment=4   
  92:Src/ethernetif.c **** #endif
  93:Src/ethernetif.c **** __ALIGN_BEGIN uint8_t Rx_Buff[ETH_RXBUFNB][ETH_RX_BUF_SIZE] __ALIGN_END; /* Ethernet Receive Buffer
  94:Src/ethernetif.c **** 
  95:Src/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  96:Src/ethernetif.c ****   #pragma data_alignment=4   
  97:Src/ethernetif.c **** #endif
  98:Src/ethernetif.c **** __ALIGN_BEGIN uint8_t Tx_Buff[ETH_TXBUFNB][ETH_TX_BUF_SIZE] __ALIGN_END; /* Ethernet Transmit Buffe
  99:Src/ethernetif.c **** 
 100:Src/ethernetif.c **** /* USER CODE BEGIN 2 */
 101:Src/ethernetif.c **** 
 102:Src/ethernetif.c **** /* USER CODE END 2 */
 103:Src/ethernetif.c **** 
 104:Src/ethernetif.c **** /* Semaphore to signal incoming packets */
 105:Src/ethernetif.c **** osSemaphoreId s_xSemaphore = NULL;
 106:Src/ethernetif.c **** /* Global Ethernet handle */
 107:Src/ethernetif.c **** ETH_HandleTypeDef heth;
 108:Src/ethernetif.c **** 
 109:Src/ethernetif.c **** /* USER CODE BEGIN 3 */
 110:Src/ethernetif.c **** 
 111:Src/ethernetif.c **** /* USER CODE END 3 */
 112:Src/ethernetif.c **** 
 113:Src/ethernetif.c **** /* Private functions ---------------------------------------------------------*/
 114:Src/ethernetif.c **** 
 115:Src/ethernetif.c **** void HAL_ETH_MspInit(ETH_HandleTypeDef* ethHandle)
 116:Src/ethernetif.c **** {
 117:Src/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 118:Src/ethernetif.c ****   if(ethHandle->Instance==ETH)
 119:Src/ethernetif.c ****   {
 120:Src/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 0 */
 121:Src/ethernetif.c **** 
 122:Src/ethernetif.c ****   /* USER CODE END ETH_MspInit 0 */
 123:Src/ethernetif.c ****     /* Enable Peripheral clock */
 124:Src/ethernetif.c ****     __HAL_RCC_ETH_CLK_ENABLE();
 125:Src/ethernetif.c ****   
 126:Src/ethernetif.c ****     /**ETH GPIO Configuration    
 127:Src/ethernetif.c ****     PG14     ------> ETH_TXD1
 128:Src/ethernetif.c ****     PG13     ------> ETH_TXD0
 129:Src/ethernetif.c ****     PG11     ------> ETH_TX_EN
 130:Src/ethernetif.c ****     PC1     ------> ETH_MDC
 131:Src/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 132:Src/ethernetif.c ****     PC4     ------> ETH_RXD0
 133:Src/ethernetif.c ****     PA2     ------> ETH_MDIO
 134:Src/ethernetif.c ****     PC5     ------> ETH_RXD1
 135:Src/ethernetif.c ****     PA7     ------> ETH_CRS_DV 
 136:Src/ethernetif.c ****     */
 137:Src/ethernetif.c ****     GPIO_InitStruct.Pin = RMII_TXD1_Pin|RMII_TXD0_Pin|RMII_TX_EN_Pin;
 138:Src/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 139:Src/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 4


 140:Src/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 141:Src/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 142:Src/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 143:Src/ethernetif.c **** 
 144:Src/ethernetif.c ****     GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 145:Src/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 146:Src/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 147:Src/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 148:Src/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 149:Src/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 150:Src/ethernetif.c **** 
 151:Src/ethernetif.c ****     GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 152:Src/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 153:Src/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 154:Src/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 155:Src/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 156:Src/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 157:Src/ethernetif.c **** 
 158:Src/ethernetif.c ****     /* Peripheral interrupt init */
 159:Src/ethernetif.c ****     HAL_NVIC_SetPriority(ETH_IRQn, 5, 0);
 160:Src/ethernetif.c ****     HAL_NVIC_EnableIRQ(ETH_IRQn);
 161:Src/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 1 */
 162:Src/ethernetif.c **** 
 163:Src/ethernetif.c ****   /* USER CODE END ETH_MspInit 1 */
 164:Src/ethernetif.c ****   }
 165:Src/ethernetif.c **** }
 166:Src/ethernetif.c **** 
 167:Src/ethernetif.c **** void HAL_ETH_MspDeInit(ETH_HandleTypeDef* ethHandle)
 168:Src/ethernetif.c **** {
 169:Src/ethernetif.c ****   if(ethHandle->Instance==ETH)
 170:Src/ethernetif.c ****   {
 171:Src/ethernetif.c ****   /* USER CODE BEGIN ETH_MspDeInit 0 */
 172:Src/ethernetif.c **** 
 173:Src/ethernetif.c ****   /* USER CODE END ETH_MspDeInit 0 */
 174:Src/ethernetif.c ****     /* Peripheral clock disable */
 175:Src/ethernetif.c ****     __HAL_RCC_ETH_CLK_DISABLE();
 176:Src/ethernetif.c ****   
 177:Src/ethernetif.c ****     /**ETH GPIO Configuration    
 178:Src/ethernetif.c ****     PG14     ------> ETH_TXD1
 179:Src/ethernetif.c ****     PG13     ------> ETH_TXD0
 180:Src/ethernetif.c ****     PG11     ------> ETH_TX_EN
 181:Src/ethernetif.c ****     PC1     ------> ETH_MDC
 182:Src/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 183:Src/ethernetif.c ****     PC4     ------> ETH_RXD0
 184:Src/ethernetif.c ****     PA2     ------> ETH_MDIO
 185:Src/ethernetif.c ****     PC5     ------> ETH_RXD1
 186:Src/ethernetif.c ****     PA7     ------> ETH_CRS_DV 
 187:Src/ethernetif.c ****     */
 188:Src/ethernetif.c ****     HAL_GPIO_DeInit(GPIOG, RMII_TXD1_Pin|RMII_TXD0_Pin|RMII_TX_EN_Pin);
 189:Src/ethernetif.c **** 
 190:Src/ethernetif.c ****     HAL_GPIO_DeInit(GPIOC, RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin);
 191:Src/ethernetif.c **** 
 192:Src/ethernetif.c ****     HAL_GPIO_DeInit(GPIOA, RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin);
 193:Src/ethernetif.c **** 
 194:Src/ethernetif.c ****     /* Peripheral interrupt Deinit*/
 195:Src/ethernetif.c ****     HAL_NVIC_DisableIRQ(ETH_IRQn);
 196:Src/ethernetif.c **** 
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 5


 197:Src/ethernetif.c ****   /* USER CODE BEGIN ETH_MspDeInit 1 */
 198:Src/ethernetif.c **** 
 199:Src/ethernetif.c ****   /* USER CODE END ETH_MspDeInit 1 */
 200:Src/ethernetif.c ****   }
 201:Src/ethernetif.c **** }
 202:Src/ethernetif.c **** 
 203:Src/ethernetif.c **** /**
 204:Src/ethernetif.c ****   * @brief  Ethernet Rx Transfer completed callback
 205:Src/ethernetif.c ****   * @param  heth: ETH handle
 206:Src/ethernetif.c ****   * @retval None
 207:Src/ethernetif.c ****   */
 208:Src/ethernetif.c **** void HAL_ETH_RxCpltCallback(ETH_HandleTypeDef *heth)
 209:Src/ethernetif.c **** {
 210:Src/ethernetif.c ****   osSemaphoreRelease(s_xSemaphore);
 211:Src/ethernetif.c **** }
 212:Src/ethernetif.c **** 
 213:Src/ethernetif.c **** /* USER CODE BEGIN 4 */
 214:Src/ethernetif.c **** 
 215:Src/ethernetif.c **** /* USER CODE END 4 */
 216:Src/ethernetif.c **** 
 217:Src/ethernetif.c **** /*******************************************************************************
 218:Src/ethernetif.c ****                        LL Driver Interface ( LwIP stack --> ETH) 
 219:Src/ethernetif.c **** *******************************************************************************/
 220:Src/ethernetif.c **** /**
 221:Src/ethernetif.c ****  * In this function, the hardware should be initialized.
 222:Src/ethernetif.c ****  * Called from ethernetif_init().
 223:Src/ethernetif.c ****  *
 224:Src/ethernetif.c ****  * @param netif the already initialized lwip network interface structure
 225:Src/ethernetif.c ****  *        for this ethernetif
 226:Src/ethernetif.c ****  */
 227:Src/ethernetif.c **** static void low_level_init(struct netif *netif)
 228:Src/ethernetif.c **** { 
 229:Src/ethernetif.c ****   uint32_t regvalue = 0;
 230:Src/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status;
 231:Src/ethernetif.c ****   
 232:Src/ethernetif.c **** /* Init ETH */
 233:Src/ethernetif.c **** 
 234:Src/ethernetif.c ****    uint8_t MACAddr[6] ;
 235:Src/ethernetif.c ****   heth.Instance = ETH;
 236:Src/ethernetif.c ****   heth.Init.AutoNegotiation = ETH_AUTONEGOTIATION_ENABLE;
 237:Src/ethernetif.c ****   heth.Init.PhyAddress = LAN8742A_PHY_ADDRESS;
 238:Src/ethernetif.c ****   MACAddr[0] = 0x00;
 239:Src/ethernetif.c ****   MACAddr[1] = 0x80;
 240:Src/ethernetif.c ****   MACAddr[2] = 0xE1;
 241:Src/ethernetif.c ****   MACAddr[3] = 0x00;
 242:Src/ethernetif.c ****   MACAddr[4] = 0xCA;
 243:Src/ethernetif.c ****   MACAddr[5] = 0xFE;
 244:Src/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 245:Src/ethernetif.c ****   heth.Init.RxMode = ETH_RXINTERRUPT_MODE;
 246:Src/ethernetif.c ****   heth.Init.ChecksumMode = ETH_CHECKSUM_BY_HARDWARE;
 247:Src/ethernetif.c ****   heth.Init.MediaInterface = ETH_MEDIA_INTERFACE_RMII;
 248:Src/ethernetif.c **** 
 249:Src/ethernetif.c ****   /* USER CODE BEGIN MACADDRESS */
 250:Src/ethernetif.c ****     
 251:Src/ethernetif.c ****   /* USER CODE END MACADDRESS */
 252:Src/ethernetif.c **** 
 253:Src/ethernetif.c ****   hal_eth_init_status = HAL_ETH_Init(&heth);
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 6


 254:Src/ethernetif.c **** 
 255:Src/ethernetif.c ****   if (hal_eth_init_status == HAL_OK)
 256:Src/ethernetif.c ****   {
 257:Src/ethernetif.c ****     /* Set netif link flag */  
 258:Src/ethernetif.c ****     netif->flags |= NETIF_FLAG_LINK_UP;
 259:Src/ethernetif.c ****   }
 260:Src/ethernetif.c ****   /* Initialize Tx Descriptors list: Chain Mode */
 261:Src/ethernetif.c ****   HAL_ETH_DMATxDescListInit(&heth, DMATxDscrTab, &Tx_Buff[0][0], ETH_TXBUFNB);
 262:Src/ethernetif.c ****      
 263:Src/ethernetif.c ****   /* Initialize Rx Descriptors list: Chain Mode  */
 264:Src/ethernetif.c ****   HAL_ETH_DMARxDescListInit(&heth, DMARxDscrTab, &Rx_Buff[0][0], ETH_RXBUFNB);
 265:Src/ethernetif.c ****  
 266:Src/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET 
 267:Src/ethernetif.c **** 
 268:Src/ethernetif.c ****   /* set MAC hardware address length */
 269:Src/ethernetif.c ****   netif->hwaddr_len = ETH_HWADDR_LEN;
 270:Src/ethernetif.c ****   
 271:Src/ethernetif.c ****   /* set MAC hardware address */
 272:Src/ethernetif.c ****   netif->hwaddr[0] =  heth.Init.MACAddr[0];
 273:Src/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 274:Src/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 275:Src/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 276:Src/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 277:Src/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 278:Src/ethernetif.c ****   
 279:Src/ethernetif.c ****   /* maximum transfer unit */
 280:Src/ethernetif.c ****   netif->mtu = 1500;
 281:Src/ethernetif.c ****   
 282:Src/ethernetif.c ****   /* Accept broadcast address and ARP traffic */
 283:Src/ethernetif.c ****   /* don't set NETIF_FLAG_ETHARP if this device is not an ethernet one */
 284:Src/ethernetif.c ****   #if LWIP_ARP
 285:Src/ethernetif.c ****     netif->flags |= NETIF_FLAG_BROADCAST | NETIF_FLAG_ETHARP;
 286:Src/ethernetif.c ****   #else 
 287:Src/ethernetif.c ****     netif->flags |= NETIF_FLAG_BROADCAST;
 288:Src/ethernetif.c ****   #endif /* LWIP_ARP */
 289:Src/ethernetif.c ****   
 290:Src/ethernetif.c **** /* create a binary semaphore used for informing ethernetif of frame reception */
 291:Src/ethernetif.c ****   osSemaphoreDef(SEM);
 292:Src/ethernetif.c ****   s_xSemaphore = osSemaphoreCreate(osSemaphore(SEM) , 1 );
 293:Src/ethernetif.c **** 
 294:Src/ethernetif.c **** /* create the task that handles the ETH_MAC */
 295:Src/ethernetif.c ****   osThreadDef(EthIf, ethernetif_input, osPriorityRealtime, 0, INTERFACE_THREAD_STACK_SIZE);
 296:Src/ethernetif.c ****   osThreadCreate (osThread(EthIf), netif);
 297:Src/ethernetif.c ****   /* Enable MAC and DMA transmission and reception */
 298:Src/ethernetif.c ****   HAL_ETH_Start(&heth);
 299:Src/ethernetif.c **** 
 300:Src/ethernetif.c **** /* USER CODE BEGIN PHY_PRE_CONFIG */ 
 301:Src/ethernetif.c ****     
 302:Src/ethernetif.c **** /* USER CODE END PHY_PRE_CONFIG */
 303:Src/ethernetif.c ****   
 304:Src/ethernetif.c **** 
 305:Src/ethernetif.c ****   /* Read Register Configuration */
 306:Src/ethernetif.c ****   HAL_ETH_ReadPHYRegister(&heth, PHY_ISFR, &regvalue);
 307:Src/ethernetif.c ****   regvalue |= (PHY_ISFR_INT4);
 308:Src/ethernetif.c **** 
 309:Src/ethernetif.c ****   /* Enable Interrupt on change of link status */ 
 310:Src/ethernetif.c ****   HAL_ETH_WritePHYRegister(&heth, PHY_ISFR , regvalue );
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 7


 311:Src/ethernetif.c ****   
 312:Src/ethernetif.c ****   /* Read Register Configuration */
 313:Src/ethernetif.c ****   HAL_ETH_ReadPHYRegister(&heth, PHY_ISFR , &regvalue);
 314:Src/ethernetif.c **** 
 315:Src/ethernetif.c **** /* USER CODE BEGIN PHY_POST_CONFIG */ 
 316:Src/ethernetif.c ****     
 317:Src/ethernetif.c **** /* USER CODE END PHY_POST_CONFIG */
 318:Src/ethernetif.c **** 
 319:Src/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 320:Src/ethernetif.c **** 
 321:Src/ethernetif.c **** /* USER CODE BEGIN LOW_LEVEL_INIT */ 
 322:Src/ethernetif.c ****     
 323:Src/ethernetif.c **** /* USER CODE END LOW_LEVEL_INIT */
 324:Src/ethernetif.c **** }
 325:Src/ethernetif.c **** 
 326:Src/ethernetif.c **** /**
 327:Src/ethernetif.c ****  * This function should do the actual transmission of the packet. The packet is
 328:Src/ethernetif.c ****  * contained in the pbuf that is passed to the function. This pbuf
 329:Src/ethernetif.c ****  * might be chained.
 330:Src/ethernetif.c ****  *
 331:Src/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 332:Src/ethernetif.c ****  * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
 333:Src/ethernetif.c ****  * @return ERR_OK if the packet could be sent
 334:Src/ethernetif.c ****  *         an err_t value if the packet couldn't be sent
 335:Src/ethernetif.c ****  *
 336:Src/ethernetif.c ****  * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
 337:Src/ethernetif.c ****  *       strange results. You might consider waiting for space in the DMA queue
 338:Src/ethernetif.c ****  *       to become availale since the stack doesn't retry to send a packet
 339:Src/ethernetif.c ****  *       dropped because of memory failure (except for the TCP timers).
 340:Src/ethernetif.c ****  */
 341:Src/ethernetif.c **** 
 342:Src/ethernetif.c **** static err_t low_level_output(struct netif *netif, struct pbuf *p)
 343:Src/ethernetif.c **** {
 344:Src/ethernetif.c ****   err_t errval;
 345:Src/ethernetif.c ****   struct pbuf *q;
 346:Src/ethernetif.c ****   uint8_t *buffer = (uint8_t *)(heth.TxDesc->Buffer1Addr);
 347:Src/ethernetif.c ****   __IO ETH_DMADescTypeDef *DmaTxDesc;
 348:Src/ethernetif.c ****   uint32_t framelength = 0;
 349:Src/ethernetif.c ****   uint32_t bufferoffset = 0;
 350:Src/ethernetif.c ****   uint32_t byteslefttocopy = 0;
 351:Src/ethernetif.c ****   uint32_t payloadoffset = 0;
 352:Src/ethernetif.c ****   DmaTxDesc = heth.TxDesc;
 353:Src/ethernetif.c ****   bufferoffset = 0;
 354:Src/ethernetif.c ****   
 355:Src/ethernetif.c ****   /* copy frame from pbufs to driver buffers */
 356:Src/ethernetif.c ****   for(q = p; q != NULL; q = q->next)
 357:Src/ethernetif.c ****     {
 358:Src/ethernetif.c ****       /* Is this buffer available? If not, goto error */
 359:Src/ethernetif.c ****       if((DmaTxDesc->Status & ETH_DMATXDESC_OWN) != (uint32_t)RESET)
 360:Src/ethernetif.c ****       {
 361:Src/ethernetif.c ****         errval = ERR_USE;
 362:Src/ethernetif.c ****         goto error;
 363:Src/ethernetif.c ****       }
 364:Src/ethernetif.c ****     
 365:Src/ethernetif.c ****       /* Get bytes in current lwIP buffer */
 366:Src/ethernetif.c ****       byteslefttocopy = q->len;
 367:Src/ethernetif.c ****       payloadoffset = 0;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 8


 368:Src/ethernetif.c ****     
 369:Src/ethernetif.c ****       /* Check if the length of data to copy is bigger than Tx buffer size*/
 370:Src/ethernetif.c ****       while( (byteslefttocopy + bufferoffset) > ETH_TX_BUF_SIZE )
 371:Src/ethernetif.c ****       {
 372:Src/ethernetif.c ****         /* Copy data to Tx buffer*/
 373:Src/ethernetif.c ****         memcpy( (uint8_t*)((uint8_t*)buffer + bufferoffset), (uint8_t*)((uint8_t*)q->payload + payl
 374:Src/ethernetif.c ****       
 375:Src/ethernetif.c ****         /* Point to next descriptor */
 376:Src/ethernetif.c ****         DmaTxDesc = (ETH_DMADescTypeDef *)(DmaTxDesc->Buffer2NextDescAddr);
 377:Src/ethernetif.c ****       
 378:Src/ethernetif.c ****         /* Check if the buffer is available */
 379:Src/ethernetif.c ****         if((DmaTxDesc->Status & ETH_DMATXDESC_OWN) != (uint32_t)RESET)
 380:Src/ethernetif.c ****         {
 381:Src/ethernetif.c ****           errval = ERR_USE;
 382:Src/ethernetif.c ****           goto error;
 383:Src/ethernetif.c ****         }
 384:Src/ethernetif.c ****       
 385:Src/ethernetif.c ****         buffer = (uint8_t *)(DmaTxDesc->Buffer1Addr);
 386:Src/ethernetif.c ****       
 387:Src/ethernetif.c ****         byteslefttocopy = byteslefttocopy - (ETH_TX_BUF_SIZE - bufferoffset);
 388:Src/ethernetif.c ****         payloadoffset = payloadoffset + (ETH_TX_BUF_SIZE - bufferoffset);
 389:Src/ethernetif.c ****         framelength = framelength + (ETH_TX_BUF_SIZE - bufferoffset);
 390:Src/ethernetif.c ****         bufferoffset = 0;
 391:Src/ethernetif.c ****       }
 392:Src/ethernetif.c ****     
 393:Src/ethernetif.c ****       /* Copy the remaining bytes */
 394:Src/ethernetif.c ****       memcpy( (uint8_t*)((uint8_t*)buffer + bufferoffset), (uint8_t*)((uint8_t*)q->payload + payloa
 395:Src/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 396:Src/ethernetif.c ****       framelength = framelength + byteslefttocopy;
 397:Src/ethernetif.c ****     }
 398:Src/ethernetif.c ****   
 399:Src/ethernetif.c ****   /* Prepare transmit descriptors to give to DMA */ 
 400:Src/ethernetif.c ****   HAL_ETH_TransmitFrame(&heth, framelength);
 401:Src/ethernetif.c ****   
 402:Src/ethernetif.c ****   errval = ERR_OK;
 403:Src/ethernetif.c ****   
 404:Src/ethernetif.c **** error:
 405:Src/ethernetif.c ****   
 406:Src/ethernetif.c ****   /* When Transmit Underflow flag is set, clear it and issue a Transmit Poll Demand to resume trans
 407:Src/ethernetif.c ****   if ((heth.Instance->DMASR & ETH_DMASR_TUS) != (uint32_t)RESET)
 408:Src/ethernetif.c ****   {
 409:Src/ethernetif.c ****     /* Clear TUS ETHERNET DMA flag */
 410:Src/ethernetif.c ****     heth.Instance->DMASR = ETH_DMASR_TUS;
 411:Src/ethernetif.c **** 
 412:Src/ethernetif.c ****     /* Resume DMA transmission*/
 413:Src/ethernetif.c ****     heth.Instance->DMATPDR = 0;
 414:Src/ethernetif.c ****   }
 415:Src/ethernetif.c ****   return errval;
 416:Src/ethernetif.c **** }
 417:Src/ethernetif.c **** 
 418:Src/ethernetif.c **** /**
 419:Src/ethernetif.c ****  * Should allocate a pbuf and transfer the bytes of the incoming
 420:Src/ethernetif.c ****  * packet from the interface into the pbuf.
 421:Src/ethernetif.c ****  *
 422:Src/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 423:Src/ethernetif.c ****  * @return a pbuf filled with the received packet (including MAC header)
 424:Src/ethernetif.c ****  *         NULL on memory error
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 9


 425:Src/ethernetif.c ****    */
 426:Src/ethernetif.c **** static struct pbuf * low_level_input(struct netif *netif)
 427:Src/ethernetif.c **** {
  33              		.loc 1 427 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              		.loc 1 427 1 is_stmt 0 view .LVU1
  38 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 32
  41              		.cfi_offset 4, -32
  42              		.cfi_offset 5, -28
  43              		.cfi_offset 6, -24
  44              		.cfi_offset 7, -20
  45              		.cfi_offset 8, -16
  46              		.cfi_offset 9, -12
  47              		.cfi_offset 10, -8
  48              		.cfi_offset 14, -4
 428:Src/ethernetif.c ****   struct pbuf *p = NULL;
  49              		.loc 1 428 3 is_stmt 1 view .LVU2
  50              	.LVL1:
 429:Src/ethernetif.c ****   struct pbuf *q = NULL;
  51              		.loc 1 429 3 view .LVU3
 430:Src/ethernetif.c ****   uint16_t len = 0;
  52              		.loc 1 430 3 view .LVU4
 431:Src/ethernetif.c ****   uint8_t *buffer;
  53              		.loc 1 431 3 view .LVU5
 432:Src/ethernetif.c ****   __IO ETH_DMADescTypeDef *dmarxdesc;
  54              		.loc 1 432 3 view .LVU6
 433:Src/ethernetif.c ****   uint32_t bufferoffset = 0;
  55              		.loc 1 433 3 view .LVU7
 434:Src/ethernetif.c ****   uint32_t payloadoffset = 0;
  56              		.loc 1 434 3 view .LVU8
 435:Src/ethernetif.c ****   uint32_t byteslefttocopy = 0;
  57              		.loc 1 435 3 view .LVU9
 436:Src/ethernetif.c ****   uint32_t i=0;
  58              		.loc 1 436 3 view .LVU10
 437:Src/ethernetif.c ****   
 438:Src/ethernetif.c **** 
 439:Src/ethernetif.c ****   /* get received frame */
 440:Src/ethernetif.c ****   if (HAL_ETH_GetReceivedFrame_IT(&heth) != HAL_OK)
  59              		.loc 1 440 3 view .LVU11
  60              		.loc 1 440 7 is_stmt 0 view .LVU12
  61 0004 3348     		ldr	r0, .L15
  62              	.LVL2:
  63              		.loc 1 440 7 view .LVU13
  64 0006 FFF7FEFF 		bl	HAL_ETH_GetReceivedFrame_IT
  65              	.LVL3:
  66              		.loc 1 440 6 view .LVU14
  67 000a 0028     		cmp	r0, #0
  68 000c 5ED1     		bne	.L10
 441:Src/ethernetif.c ****     return NULL;
 442:Src/ethernetif.c ****   
 443:Src/ethernetif.c ****   /* Obtain the size of the packet and put it into the "len" variable. */
 444:Src/ethernetif.c ****   len = heth.RxFrameInfos.length;
  69              		.loc 1 444 3 is_stmt 1 view .LVU15
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 10


  70              		.loc 1 444 26 is_stmt 0 view .LVU16
  71 000e 314B     		ldr	r3, .L15
  72              		.loc 1 444 7 view .LVU17
  73 0010 998F     		ldrh	r1, [r3, #60]
  74              	.LVL4:
 445:Src/ethernetif.c ****   buffer = (uint8_t *)heth.RxFrameInfos.buffer;
  75              		.loc 1 445 3 is_stmt 1 view .LVU18
  76              		.loc 1 445 40 is_stmt 0 view .LVU19
  77 0012 D3F84080 		ldr	r8, [r3, #64]
  78              	.LVL5:
 446:Src/ethernetif.c ****   
 447:Src/ethernetif.c ****   if (len > 0)
  79              		.loc 1 447 3 is_stmt 1 view .LVU20
  80              		.loc 1 447 6 is_stmt 0 view .LVU21
  81 0016 79B9     		cbnz	r1, .L13
 428:Src/ethernetif.c ****   struct pbuf *q = NULL;
  82              		.loc 1 428 16 view .LVU22
  83 0018 4FF0000A 		mov	r10, #0
  84              	.LVL6:
  85              	.L3:
 448:Src/ethernetif.c ****   {
 449:Src/ethernetif.c ****     /* We allocate a pbuf chain of pbufs from the Lwip buffer pool */
 450:Src/ethernetif.c ****     p = pbuf_alloc(PBUF_RAW, len, PBUF_POOL);
 451:Src/ethernetif.c ****   }
 452:Src/ethernetif.c ****   
 453:Src/ethernetif.c ****   if (p != NULL)
 454:Src/ethernetif.c ****   {
 455:Src/ethernetif.c ****     dmarxdesc = heth.RxFrameInfos.FSRxDesc;
 456:Src/ethernetif.c ****     bufferoffset = 0;
 457:Src/ethernetif.c ****     for(q = p; q != NULL; q = q->next)
 458:Src/ethernetif.c ****     {
 459:Src/ethernetif.c ****       byteslefttocopy = q->len;
 460:Src/ethernetif.c ****       payloadoffset = 0;
 461:Src/ethernetif.c ****       
 462:Src/ethernetif.c ****       /* Check if the length of bytes to copy in current pbuf is bigger than Rx buffer size*/
 463:Src/ethernetif.c ****       while( (byteslefttocopy + bufferoffset) > ETH_RX_BUF_SIZE )
 464:Src/ethernetif.c ****       {
 465:Src/ethernetif.c ****         /* Copy data to pbuf */
 466:Src/ethernetif.c ****         memcpy( (uint8_t*)((uint8_t*)q->payload + payloadoffset), (uint8_t*)((uint8_t*)buffer + buf
 467:Src/ethernetif.c ****         
 468:Src/ethernetif.c ****         /* Point to next descriptor */
 469:Src/ethernetif.c ****         dmarxdesc = (ETH_DMADescTypeDef *)(dmarxdesc->Buffer2NextDescAddr);
 470:Src/ethernetif.c ****         buffer = (uint8_t *)(dmarxdesc->Buffer1Addr);
 471:Src/ethernetif.c ****         
 472:Src/ethernetif.c ****         byteslefttocopy = byteslefttocopy - (ETH_RX_BUF_SIZE - bufferoffset);
 473:Src/ethernetif.c ****         payloadoffset = payloadoffset + (ETH_RX_BUF_SIZE - bufferoffset);
 474:Src/ethernetif.c ****         bufferoffset = 0;
 475:Src/ethernetif.c ****       }
 476:Src/ethernetif.c ****       /* Copy remaining data in pbuf */
 477:Src/ethernetif.c ****       memcpy( (uint8_t*)((uint8_t*)q->payload + payloadoffset), (uint8_t*)((uint8_t*)buffer + buffe
 478:Src/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 479:Src/ethernetif.c ****     }
 480:Src/ethernetif.c ****   }  
 481:Src/ethernetif.c ****   
 482:Src/ethernetif.c ****     /* Release descriptors to DMA */
 483:Src/ethernetif.c ****     /* Point to first descriptor */
 484:Src/ethernetif.c ****     dmarxdesc = heth.RxFrameInfos.FSRxDesc;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 11


  86              		.loc 1 484 5 is_stmt 1 view .LVU23
  87              		.loc 1 484 15 is_stmt 0 view .LVU24
  88 001c 2D4B     		ldr	r3, .L15
  89 001e 1B6B     		ldr	r3, [r3, #48]
  90              	.LVL7:
 485:Src/ethernetif.c ****     /* Set Own bit in Rx descriptors: gives the buffers back to DMA */
 486:Src/ethernetif.c ****     for (i=0; i< heth.RxFrameInfos.SegCount; i++)
  91              		.loc 1 486 5 is_stmt 1 view .LVU25
  92              		.loc 1 486 11 is_stmt 0 view .LVU26
  93 0020 0021     		movs	r1, #0
  94              	.LVL8:
  95              	.L8:
  96              		.loc 1 486 15 is_stmt 1 discriminator 1 view .LVU27
  97              		.loc 1 486 35 is_stmt 0 discriminator 1 view .LVU28
  98 0022 2C4A     		ldr	r2, .L15
  99 0024 926B     		ldr	r2, [r2, #56]
 100              		.loc 1 486 5 discriminator 1 view .LVU29
 101 0026 8A42     		cmp	r2, r1
 102 0028 3BD9     		bls	.L14
 487:Src/ethernetif.c ****     {  
 488:Src/ethernetif.c ****       dmarxdesc->Status |= ETH_DMARXDESC_OWN;
 103              		.loc 1 488 7 is_stmt 1 discriminator 3 view .LVU30
 104              		.loc 1 488 25 is_stmt 0 discriminator 3 view .LVU31
 105 002a 1A68     		ldr	r2, [r3]
 106 002c 42F00042 		orr	r2, r2, #-2147483648
 107 0030 1A60     		str	r2, [r3]
 489:Src/ethernetif.c ****       dmarxdesc = (ETH_DMADescTypeDef *)(dmarxdesc->Buffer2NextDescAddr);
 108              		.loc 1 489 7 is_stmt 1 discriminator 3 view .LVU32
 109              		.loc 1 489 51 is_stmt 0 discriminator 3 view .LVU33
 110 0032 DB68     		ldr	r3, [r3, #12]
 111              	.LVL9:
 486:Src/ethernetif.c ****     {  
 112              		.loc 1 486 46 is_stmt 1 discriminator 3 view .LVU34
 486:Src/ethernetif.c ****     {  
 113              		.loc 1 486 47 is_stmt 0 discriminator 3 view .LVU35
 114 0034 0131     		adds	r1, r1, #1
 115              	.LVL10:
 486:Src/ethernetif.c ****     {  
 116              		.loc 1 486 47 discriminator 3 view .LVU36
 117 0036 F4E7     		b	.L8
 118              	.LVL11:
 119              	.L13:
 450:Src/ethernetif.c ****   }
 120              		.loc 1 450 5 is_stmt 1 view .LVU37
 450:Src/ethernetif.c ****   }
 121              		.loc 1 450 9 is_stmt 0 view .LVU38
 122 0038 0322     		movs	r2, #3
 123 003a 0420     		movs	r0, #4
 124 003c FFF7FEFF 		bl	pbuf_alloc
 125              	.LVL12:
 453:Src/ethernetif.c ****   {
 126              		.loc 1 453 3 is_stmt 1 view .LVU39
 453:Src/ethernetif.c ****   {
 127              		.loc 1 453 6 is_stmt 0 view .LVU40
 128 0040 8246     		mov	r10, r0
 129 0042 0028     		cmp	r0, #0
 130 0044 EAD0     		beq	.L3
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 12


 455:Src/ethernetif.c ****     bufferoffset = 0;
 131              		.loc 1 455 5 is_stmt 1 view .LVU41
 455:Src/ethernetif.c ****     bufferoffset = 0;
 132              		.loc 1 455 15 is_stmt 0 view .LVU42
 133 0046 234B     		ldr	r3, .L15
 134 0048 1F6B     		ldr	r7, [r3, #48]
 135              	.LVL13:
 456:Src/ethernetif.c ****     for(q = p; q != NULL; q = q->next)
 136              		.loc 1 456 5 is_stmt 1 view .LVU43
 457:Src/ethernetif.c ****     {
 137              		.loc 1 457 5 view .LVU44
 450:Src/ethernetif.c ****   }
 138              		.loc 1 450 9 is_stmt 0 view .LVU45
 139 004a 8146     		mov	r9, r0
 456:Src/ethernetif.c ****     for(q = p; q != NULL; q = q->next)
 140              		.loc 1 456 18 view .LVU46
 141 004c 0024     		movs	r4, #0
 457:Src/ethernetif.c ****     {
 142              		.loc 1 457 5 view .LVU47
 143 004e 21E0     		b	.L4
 144              	.LVL14:
 145              	.L6:
 466:Src/ethernetif.c ****         
 146              		.loc 1 466 9 is_stmt 1 view .LVU48
 466:Src/ethernetif.c ****         
 147              		.loc 1 466 39 is_stmt 0 view .LVU49
 148 0050 D9F80400 		ldr	r0, [r9, #4]
 466:Src/ethernetif.c ****         
 149              		.loc 1 466 9 view .LVU50
 150 0054 40F2F452 		movw	r2, #1524
 151              	.LVL15:
 466:Src/ethernetif.c ****         
 152              		.loc 1 466 9 view .LVU51
 153 0058 121B     		subs	r2, r2, r4
 154 005a 08EB0401 		add	r1, r8, r4
 155 005e 3044     		add	r0, r0, r6
 156 0060 FFF7FEFF 		bl	memcpy
 157              	.LVL16:
 469:Src/ethernetif.c ****         buffer = (uint8_t *)(dmarxdesc->Buffer1Addr);
 158              		.loc 1 469 9 is_stmt 1 view .LVU52
 469:Src/ethernetif.c ****         buffer = (uint8_t *)(dmarxdesc->Buffer1Addr);
 159              		.loc 1 469 53 is_stmt 0 view .LVU53
 160 0064 FF68     		ldr	r7, [r7, #12]
 161              	.LVL17:
 470:Src/ethernetif.c ****         
 162              		.loc 1 470 9 is_stmt 1 view .LVU54
 470:Src/ethernetif.c ****         
 163              		.loc 1 470 39 is_stmt 0 view .LVU55
 164 0066 D7F80880 		ldr	r8, [r7, #8]
 165              	.LVL18:
 472:Src/ethernetif.c ****         payloadoffset = payloadoffset + (ETH_RX_BUF_SIZE - bufferoffset);
 166              		.loc 1 472 9 is_stmt 1 view .LVU56
 472:Src/ethernetif.c ****         payloadoffset = payloadoffset + (ETH_RX_BUF_SIZE - bufferoffset);
 167              		.loc 1 472 25 is_stmt 0 view .LVU57
 168 006a A5F2F452 		subw	r2, r5, #1524
 169              	.LVL19:
 473:Src/ethernetif.c ****         bufferoffset = 0;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 13


 170              		.loc 1 473 9 is_stmt 1 view .LVU58
 473:Src/ethernetif.c ****         bufferoffset = 0;
 171              		.loc 1 473 39 is_stmt 0 view .LVU59
 172 006e 361B     		subs	r6, r6, r4
 173              	.LVL20:
 473:Src/ethernetif.c ****         bufferoffset = 0;
 174              		.loc 1 473 23 view .LVU60
 175 0070 06F2F456 		addw	r6, r6, #1524
 176              	.LVL21:
 474:Src/ethernetif.c ****       }
 177              		.loc 1 474 9 is_stmt 1 view .LVU61
 474:Src/ethernetif.c ****       }
 178              		.loc 1 474 22 is_stmt 0 view .LVU62
 179 0074 0024     		movs	r4, #0
 180              	.LVL22:
 181              	.L5:
 463:Src/ethernetif.c ****       {
 182              		.loc 1 463 12 is_stmt 1 view .LVU63
 463:Src/ethernetif.c ****       {
 183              		.loc 1 463 31 is_stmt 0 view .LVU64
 184 0076 A518     		adds	r5, r4, r2
 463:Src/ethernetif.c ****       {
 185              		.loc 1 463 12 view .LVU65
 186 0078 40F2F453 		movw	r3, #1524
 187 007c 9D42     		cmp	r5, r3
 188 007e E7D8     		bhi	.L6
 477:Src/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 189              		.loc 1 477 7 is_stmt 1 discriminator 2 view .LVU66
 477:Src/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 190              		.loc 1 477 37 is_stmt 0 discriminator 2 view .LVU67
 191 0080 D9F80400 		ldr	r0, [r9, #4]
 477:Src/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 192              		.loc 1 477 7 discriminator 2 view .LVU68
 193 0084 08EB0401 		add	r1, r8, r4
 194 0088 3044     		add	r0, r0, r6
 195 008a FFF7FEFF 		bl	memcpy
 196              	.LVL23:
 478:Src/ethernetif.c ****     }
 197              		.loc 1 478 7 is_stmt 1 discriminator 2 view .LVU69
 457:Src/ethernetif.c ****     {
 198              		.loc 1 457 27 discriminator 2 view .LVU70
 457:Src/ethernetif.c ****     {
 199              		.loc 1 457 29 is_stmt 0 discriminator 2 view .LVU71
 200 008e D9F80090 		ldr	r9, [r9]
 201              	.LVL24:
 478:Src/ethernetif.c ****     }
 202              		.loc 1 478 20 discriminator 2 view .LVU72
 203 0092 2C46     		mov	r4, r5
 204              	.LVL25:
 205              	.L4:
 457:Src/ethernetif.c ****     {
 206              		.loc 1 457 16 is_stmt 1 discriminator 1 view .LVU73
 457:Src/ethernetif.c ****     {
 207              		.loc 1 457 5 is_stmt 0 discriminator 1 view .LVU74
 208 0094 B9F1000F 		cmp	r9, #0
 209 0098 C0D0     		beq	.L3
 459:Src/ethernetif.c ****       payloadoffset = 0;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 14


 210              		.loc 1 459 7 is_stmt 1 view .LVU75
 459:Src/ethernetif.c ****       payloadoffset = 0;
 211              		.loc 1 459 26 is_stmt 0 view .LVU76
 212 009a B9F80A20 		ldrh	r2, [r9, #10]
 213              	.LVL26:
 460:Src/ethernetif.c ****       
 214              		.loc 1 460 7 is_stmt 1 view .LVU77
 463:Src/ethernetif.c ****       {
 215              		.loc 1 463 7 view .LVU78
 460:Src/ethernetif.c ****       
 216              		.loc 1 460 21 is_stmt 0 view .LVU79
 217 009e 0026     		movs	r6, #0
 463:Src/ethernetif.c ****       {
 218              		.loc 1 463 12 view .LVU80
 219 00a0 E9E7     		b	.L5
 220              	.LVL27:
 221              	.L14:
 490:Src/ethernetif.c ****     }
 491:Src/ethernetif.c ****     
 492:Src/ethernetif.c ****     /* Clear Segment_Count */
 493:Src/ethernetif.c ****     heth.RxFrameInfos.SegCount =0;  
 222              		.loc 1 493 5 is_stmt 1 view .LVU81
 223              		.loc 1 493 32 is_stmt 0 view .LVU82
 224 00a2 0C4B     		ldr	r3, .L15
 225              	.LVL28:
 226              		.loc 1 493 32 view .LVU83
 227 00a4 0022     		movs	r2, #0
 228 00a6 9A63     		str	r2, [r3, #56]
 494:Src/ethernetif.c ****   
 495:Src/ethernetif.c ****   /* When Rx Buffer unavailable flag is set: clear it and resume reception */
 496:Src/ethernetif.c ****   if ((heth.Instance->DMASR & ETH_DMASR_RBUS) != (uint32_t)RESET)  
 229              		.loc 1 496 3 is_stmt 1 view .LVU84
 230              		.loc 1 496 12 is_stmt 0 view .LVU85
 231 00a8 1B68     		ldr	r3, [r3]
 232              		.loc 1 496 21 view .LVU86
 233 00aa 41F21402 		movw	r2, #4116
 234 00ae 9A58     		ldr	r2, [r3, r2]
 235              		.loc 1 496 6 view .LVU87
 236 00b0 12F0800F 		tst	r2, #128
 237 00b4 07D0     		beq	.L1
 497:Src/ethernetif.c ****   {
 498:Src/ethernetif.c ****     /* Clear RBUS ETHERNET DMA flag */
 499:Src/ethernetif.c ****     heth.Instance->DMASR = ETH_DMASR_RBUS;
 238              		.loc 1 499 5 is_stmt 1 view .LVU88
 239              		.loc 1 499 26 is_stmt 0 view .LVU89
 240 00b6 41F21402 		movw	r2, #4116
 241 00ba 8021     		movs	r1, #128
 242              	.LVL29:
 243              		.loc 1 499 26 view .LVU90
 244 00bc 9950     		str	r1, [r3, r2]
 500:Src/ethernetif.c ****     /* Resume DMA reception */
 501:Src/ethernetif.c ****     heth.Instance->DMARPDR = 0;
 245              		.loc 1 501 5 is_stmt 1 view .LVU91
 246              		.loc 1 501 28 is_stmt 0 view .LVU92
 247 00be 41F20802 		movw	r2, #4104
 248 00c2 0021     		movs	r1, #0
 249 00c4 9950     		str	r1, [r3, r2]
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 15


 250              	.LVL30:
 251              	.L1:
 502:Src/ethernetif.c ****   }
 503:Src/ethernetif.c ****   return p;
 504:Src/ethernetif.c **** }
 252              		.loc 1 504 1 view .LVU93
 253 00c6 5046     		mov	r0, r10
 254 00c8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 255              	.LVL31:
 256              	.L10:
 441:Src/ethernetif.c ****   
 257              		.loc 1 441 12 view .LVU94
 258 00cc 4FF0000A 		mov	r10, #0
 259 00d0 F9E7     		b	.L1
 260              	.L16:
 261 00d2 00BF     		.align	2
 262              	.L15:
 263 00d4 00000000 		.word	heth
 264              		.cfi_endproc
 265              	.LFE170:
 267              		.section	.text.ethernetif_input,"ax",%progbits
 268              		.align	1
 269              		.global	ethernetif_input
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-sp-d16
 275              	ethernetif_input:
 276              	.LVL32:
 277              	.LFB171:
 505:Src/ethernetif.c **** 
 506:Src/ethernetif.c **** /**
 507:Src/ethernetif.c ****  * This function should be called when a packet is ready to be read
 508:Src/ethernetif.c ****  * from the interface. It uses the function low_level_input() that
 509:Src/ethernetif.c ****  * should handle the actual reception of bytes from the network
 510:Src/ethernetif.c ****  * interface. Then the type of the received packet is determined and
 511:Src/ethernetif.c ****  * the appropriate input function is called.
 512:Src/ethernetif.c ****  *
 513:Src/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 514:Src/ethernetif.c ****  */
 515:Src/ethernetif.c **** void ethernetif_input( void const * argument ) 
 516:Src/ethernetif.c **** {
 278              		.loc 1 516 1 is_stmt 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		.loc 1 516 1 is_stmt 0 view .LVU96
 283 0000 38B5     		push	{r3, r4, r5, lr}
 284              	.LCFI1:
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 3, -16
 287              		.cfi_offset 4, -12
 288              		.cfi_offset 5, -8
 289              		.cfi_offset 14, -4
 290 0002 0546     		mov	r5, r0
 517:Src/ethernetif.c ****   struct pbuf *p;
 291              		.loc 1 517 3 is_stmt 1 view .LVU97
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 16


 518:Src/ethernetif.c ****   struct netif *netif = (struct netif *) argument;
 292              		.loc 1 518 3 view .LVU98
 293              	.LVL33:
 294              	.L18:
 519:Src/ethernetif.c ****   
 520:Src/ethernetif.c ****   for( ;; )
 295              		.loc 1 520 3 view .LVU99
 521:Src/ethernetif.c ****   {
 522:Src/ethernetif.c ****     if (osSemaphoreWait( s_xSemaphore, TIME_WAITING_FOR_INPUT)==osOK)
 296              		.loc 1 522 5 view .LVU100
 297              		.loc 1 522 9 is_stmt 0 view .LVU101
 298 0004 4FF0FF31 		mov	r1, #-1
 299 0008 0B4B     		ldr	r3, .L24
 300 000a 1868     		ldr	r0, [r3]
 301 000c FFF7FEFF 		bl	osSemaphoreWait
 302              	.LVL34:
 303              		.loc 1 522 8 view .LVU102
 304 0010 0028     		cmp	r0, #0
 305 0012 F7D1     		bne	.L18
 306 0014 04E0     		b	.L20
 307              	.LVL35:
 308              	.L23:
 523:Src/ethernetif.c ****     {
 524:Src/ethernetif.c ****       do
 525:Src/ethernetif.c ****       {   
 526:Src/ethernetif.c ****         p = low_level_input( netif );
 527:Src/ethernetif.c ****         if   (p != NULL)
 528:Src/ethernetif.c ****         {
 529:Src/ethernetif.c ****           if (netif->input( p, netif) != ERR_OK )
 530:Src/ethernetif.c ****           {
 531:Src/ethernetif.c ****             pbuf_free(p);
 309              		.loc 1 531 13 is_stmt 1 view .LVU103
 310 0016 2046     		mov	r0, r4
 311 0018 FFF7FEFF 		bl	pbuf_free
 312              	.LVL36:
 313              	.L19:
 532:Src/ethernetif.c ****           }
 533:Src/ethernetif.c ****         }
 534:Src/ethernetif.c ****       } while(p!=NULL);
 314              		.loc 1 534 14 view .LVU104
 315              		.loc 1 534 7 is_stmt 0 view .LVU105
 316 001c 002C     		cmp	r4, #0
 317 001e F1D0     		beq	.L18
 318              	.LVL37:
 319              	.L20:
 524:Src/ethernetif.c ****       {   
 320              		.loc 1 524 7 is_stmt 1 view .LVU106
 526:Src/ethernetif.c ****         if   (p != NULL)
 321              		.loc 1 526 9 view .LVU107
 526:Src/ethernetif.c ****         if   (p != NULL)
 322              		.loc 1 526 13 is_stmt 0 view .LVU108
 323 0020 2846     		mov	r0, r5
 324 0022 FFF7FEFF 		bl	low_level_input
 325              	.LVL38:
 527:Src/ethernetif.c ****         {
 326              		.loc 1 527 9 is_stmt 1 view .LVU109
 527:Src/ethernetif.c ****         {
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 17


 327              		.loc 1 527 14 is_stmt 0 view .LVU110
 328 0026 0446     		mov	r4, r0
 329 0028 0028     		cmp	r0, #0
 330 002a F7D0     		beq	.L19
 529:Src/ethernetif.c ****           {
 331              		.loc 1 529 11 is_stmt 1 view .LVU111
 529:Src/ethernetif.c ****           {
 332              		.loc 1 529 20 is_stmt 0 view .LVU112
 333 002c 2B69     		ldr	r3, [r5, #16]
 529:Src/ethernetif.c ****           {
 334              		.loc 1 529 15 view .LVU113
 335 002e 2946     		mov	r1, r5
 336 0030 9847     		blx	r3
 337              	.LVL39:
 529:Src/ethernetif.c ****           {
 338              		.loc 1 529 14 view .LVU114
 339 0032 0028     		cmp	r0, #0
 340 0034 F2D0     		beq	.L19
 341 0036 EEE7     		b	.L23
 342              	.L25:
 343              		.align	2
 344              	.L24:
 345 0038 00000000 		.word	.LANCHOR0
 346              		.cfi_endproc
 347              	.LFE171:
 349              		.section	.text.low_level_output,"ax",%progbits
 350              		.align	1
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu fpv5-sp-d16
 356              	low_level_output:
 357              	.LVL40:
 358              	.LFB169:
 343:Src/ethernetif.c ****   err_t errval;
 359              		.loc 1 343 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 343:Src/ethernetif.c ****   err_t errval;
 363              		.loc 1 343 1 is_stmt 0 view .LVU116
 364 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 365              	.LCFI2:
 366              		.cfi_def_cfa_offset 40
 367              		.cfi_offset 3, -40
 368              		.cfi_offset 4, -36
 369              		.cfi_offset 5, -32
 370              		.cfi_offset 6, -28
 371              		.cfi_offset 7, -24
 372              		.cfi_offset 8, -20
 373              		.cfi_offset 9, -16
 374              		.cfi_offset 10, -12
 375              		.cfi_offset 11, -8
 376              		.cfi_offset 14, -4
 377 0004 8B46     		mov	fp, r1
 344:Src/ethernetif.c ****   struct pbuf *q;
 378              		.loc 1 344 3 is_stmt 1 view .LVU117
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 18


 345:Src/ethernetif.c ****   uint8_t *buffer = (uint8_t *)(heth.TxDesc->Buffer1Addr);
 379              		.loc 1 345 3 view .LVU118
 346:Src/ethernetif.c ****   __IO ETH_DMADescTypeDef *DmaTxDesc;
 380              		.loc 1 346 3 view .LVU119
 346:Src/ethernetif.c ****   __IO ETH_DMADescTypeDef *DmaTxDesc;
 381              		.loc 1 346 37 is_stmt 0 view .LVU120
 382 0006 2C4B     		ldr	r3, .L38
 383 0008 DE6A     		ldr	r6, [r3, #44]
 346:Src/ethernetif.c ****   __IO ETH_DMADescTypeDef *DmaTxDesc;
 384              		.loc 1 346 44 view .LVU121
 385 000a D6F808A0 		ldr	r10, [r6, #8]
 386              	.LVL41:
 347:Src/ethernetif.c ****   uint32_t framelength = 0;
 387              		.loc 1 347 3 is_stmt 1 view .LVU122
 348:Src/ethernetif.c ****   uint32_t bufferoffset = 0;
 388              		.loc 1 348 3 view .LVU123
 349:Src/ethernetif.c ****   uint32_t byteslefttocopy = 0;
 389              		.loc 1 349 3 view .LVU124
 350:Src/ethernetif.c ****   uint32_t payloadoffset = 0;
 390              		.loc 1 350 3 view .LVU125
 351:Src/ethernetif.c ****   DmaTxDesc = heth.TxDesc;
 391              		.loc 1 351 3 view .LVU126
 352:Src/ethernetif.c ****   bufferoffset = 0;
 392              		.loc 1 352 3 view .LVU127
 353:Src/ethernetif.c ****   
 393              		.loc 1 353 3 view .LVU128
 356:Src/ethernetif.c ****     {
 394              		.loc 1 356 3 view .LVU129
 353:Src/ethernetif.c ****   
 395              		.loc 1 353 16 is_stmt 0 view .LVU130
 396 000e 0024     		movs	r4, #0
 348:Src/ethernetif.c ****   uint32_t bufferoffset = 0;
 397              		.loc 1 348 12 view .LVU131
 398 0010 2746     		mov	r7, r4
 399              	.LVL42:
 400              	.L27:
 356:Src/ethernetif.c ****     {
 401              		.loc 1 356 14 is_stmt 1 discriminator 1 view .LVU132
 356:Src/ethernetif.c ****     {
 402              		.loc 1 356 3 is_stmt 0 discriminator 1 view .LVU133
 403 0012 BBF1000F 		cmp	fp, #0
 404 0016 32D0     		beq	.L36
 359:Src/ethernetif.c ****       {
 405              		.loc 1 359 7 is_stmt 1 view .LVU134
 359:Src/ethernetif.c ****       {
 406              		.loc 1 359 20 is_stmt 0 view .LVU135
 407 0018 3368     		ldr	r3, [r6]
 359:Src/ethernetif.c ****       {
 408              		.loc 1 359 9 view .LVU136
 409 001a 002B     		cmp	r3, #0
 410 001c 35DB     		blt	.L33
 366:Src/ethernetif.c ****       payloadoffset = 0;
 411              		.loc 1 366 7 is_stmt 1 view .LVU137
 366:Src/ethernetif.c ****       payloadoffset = 0;
 412              		.loc 1 366 26 is_stmt 0 view .LVU138
 413 001e BBF80A90 		ldrh	r9, [fp, #10]
 414              	.LVL43:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 19


 367:Src/ethernetif.c ****     
 415              		.loc 1 367 7 is_stmt 1 view .LVU139
 370:Src/ethernetif.c ****       {
 416              		.loc 1 370 7 view .LVU140
 367:Src/ethernetif.c ****     
 417              		.loc 1 367 21 is_stmt 0 view .LVU141
 418 0022 0025     		movs	r5, #0
 419              	.LVL44:
 420              	.L29:
 370:Src/ethernetif.c ****       {
 421              		.loc 1 370 12 is_stmt 1 view .LVU142
 370:Src/ethernetif.c ****       {
 422              		.loc 1 370 31 is_stmt 0 view .LVU143
 423 0024 04EB0908 		add	r8, r4, r9
 370:Src/ethernetif.c ****       {
 424              		.loc 1 370 12 view .LVU144
 425 0028 40F2F453 		movw	r3, #1524
 426 002c 9845     		cmp	r8, r3
 427 002e 19D9     		bls	.L37
 373:Src/ethernetif.c ****       
 428              		.loc 1 373 9 is_stmt 1 view .LVU145
 373:Src/ethernetif.c ****       
 429              		.loc 1 373 84 is_stmt 0 view .LVU146
 430 0030 DBF80410 		ldr	r1, [fp, #4]
 373:Src/ethernetif.c ****       
 431              		.loc 1 373 9 view .LVU147
 432 0034 40F2F452 		movw	r2, #1524
 433 0038 121B     		subs	r2, r2, r4
 434 003a 2944     		add	r1, r1, r5
 435 003c 0AEB0400 		add	r0, r10, r4
 436 0040 FFF7FEFF 		bl	memcpy
 437              	.LVL45:
 376:Src/ethernetif.c ****       
 438              		.loc 1 376 9 is_stmt 1 view .LVU148
 376:Src/ethernetif.c ****       
 439              		.loc 1 376 53 is_stmt 0 view .LVU149
 440 0044 F668     		ldr	r6, [r6, #12]
 441              	.LVL46:
 379:Src/ethernetif.c ****         {
 442              		.loc 1 379 9 is_stmt 1 view .LVU150
 379:Src/ethernetif.c ****         {
 443              		.loc 1 379 22 is_stmt 0 view .LVU151
 444 0046 3368     		ldr	r3, [r6]
 379:Src/ethernetif.c ****         {
 445              		.loc 1 379 11 view .LVU152
 446 0048 002B     		cmp	r3, #0
 447 004a 21DB     		blt	.L34
 385:Src/ethernetif.c ****       
 448              		.loc 1 385 9 is_stmt 1 view .LVU153
 385:Src/ethernetif.c ****       
 449              		.loc 1 385 39 is_stmt 0 view .LVU154
 450 004c D6F808A0 		ldr	r10, [r6, #8]
 451              	.LVL47:
 387:Src/ethernetif.c ****         payloadoffset = payloadoffset + (ETH_TX_BUF_SIZE - bufferoffset);
 452              		.loc 1 387 9 is_stmt 1 view .LVU155
 387:Src/ethernetif.c ****         payloadoffset = payloadoffset + (ETH_TX_BUF_SIZE - bufferoffset);
 453              		.loc 1 387 25 is_stmt 0 view .LVU156
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 20


 454 0050 A8F2F459 		subw	r9, r8, #1524
 455              	.LVL48:
 388:Src/ethernetif.c ****         framelength = framelength + (ETH_TX_BUF_SIZE - bufferoffset);
 456              		.loc 1 388 9 is_stmt 1 view .LVU157
 388:Src/ethernetif.c ****         framelength = framelength + (ETH_TX_BUF_SIZE - bufferoffset);
 457              		.loc 1 388 39 is_stmt 0 view .LVU158
 458 0054 2D1B     		subs	r5, r5, r4
 459              	.LVL49:
 388:Src/ethernetif.c ****         framelength = framelength + (ETH_TX_BUF_SIZE - bufferoffset);
 460              		.loc 1 388 23 view .LVU159
 461 0056 05F2F455 		addw	r5, r5, #1524
 462              	.LVL50:
 389:Src/ethernetif.c ****         bufferoffset = 0;
 463              		.loc 1 389 9 is_stmt 1 view .LVU160
 389:Src/ethernetif.c ****         bufferoffset = 0;
 464              		.loc 1 389 35 is_stmt 0 view .LVU161
 465 005a 3F1B     		subs	r7, r7, r4
 466              	.LVL51:
 389:Src/ethernetif.c ****         bufferoffset = 0;
 467              		.loc 1 389 21 view .LVU162
 468 005c 07F2F457 		addw	r7, r7, #1524
 469              	.LVL52:
 390:Src/ethernetif.c ****       }
 470              		.loc 1 390 9 is_stmt 1 view .LVU163
 390:Src/ethernetif.c ****       }
 471              		.loc 1 390 22 is_stmt 0 view .LVU164
 472 0060 0024     		movs	r4, #0
 473 0062 DFE7     		b	.L29
 474              	.LVL53:
 475              	.L37:
 394:Src/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 476              		.loc 1 394 7 is_stmt 1 discriminator 2 view .LVU165
 394:Src/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 477              		.loc 1 394 82 is_stmt 0 discriminator 2 view .LVU166
 478 0064 DBF80410 		ldr	r1, [fp, #4]
 394:Src/ethernetif.c ****       bufferoffset = bufferoffset + byteslefttocopy;
 479              		.loc 1 394 7 discriminator 2 view .LVU167
 480 0068 4A46     		mov	r2, r9
 481 006a 2944     		add	r1, r1, r5
 482 006c 0AEB0400 		add	r0, r10, r4
 483 0070 FFF7FEFF 		bl	memcpy
 484              	.LVL54:
 395:Src/ethernetif.c ****       framelength = framelength + byteslefttocopy;
 485              		.loc 1 395 7 is_stmt 1 discriminator 2 view .LVU168
 396:Src/ethernetif.c ****     }
 486              		.loc 1 396 7 discriminator 2 view .LVU169
 396:Src/ethernetif.c ****     }
 487              		.loc 1 396 19 is_stmt 0 discriminator 2 view .LVU170
 488 0074 4F44     		add	r7, r7, r9
 489              	.LVL55:
 356:Src/ethernetif.c ****     {
 490              		.loc 1 356 25 is_stmt 1 discriminator 2 view .LVU171
 356:Src/ethernetif.c ****     {
 491              		.loc 1 356 27 is_stmt 0 discriminator 2 view .LVU172
 492 0076 DBF800B0 		ldr	fp, [fp]
 493              	.LVL56:
 395:Src/ethernetif.c ****       framelength = framelength + byteslefttocopy;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 21


 494              		.loc 1 395 20 discriminator 2 view .LVU173
 495 007a 4446     		mov	r4, r8
 496 007c C9E7     		b	.L27
 497              	.LVL57:
 498              	.L36:
 400:Src/ethernetif.c ****   
 499              		.loc 1 400 3 is_stmt 1 view .LVU174
 500 007e 3946     		mov	r1, r7
 501 0080 0D48     		ldr	r0, .L38
 502 0082 FFF7FEFF 		bl	HAL_ETH_TransmitFrame
 503              	.LVL58:
 402:Src/ethernetif.c ****   
 504              		.loc 1 402 3 view .LVU175
 402:Src/ethernetif.c ****   
 505              		.loc 1 402 10 is_stmt 0 view .LVU176
 506 0086 0020     		movs	r0, #0
 507 0088 04E0     		b	.L28
 508              	.LVL59:
 509              	.L33:
 361:Src/ethernetif.c ****         goto error;
 510              		.loc 1 361 16 view .LVU177
 511 008a 6FF00700 		mvn	r0, #7
 512 008e 01E0     		b	.L28
 513              	.LVL60:
 514              	.L34:
 381:Src/ethernetif.c ****           goto error;
 515              		.loc 1 381 18 view .LVU178
 516 0090 6FF00700 		mvn	r0, #7
 517              	.LVL61:
 518              	.L28:
 407:Src/ethernetif.c ****   {
 519              		.loc 1 407 3 is_stmt 1 view .LVU179
 407:Src/ethernetif.c ****   {
 520              		.loc 1 407 12 is_stmt 0 view .LVU180
 521 0094 084B     		ldr	r3, .L38
 522 0096 1B68     		ldr	r3, [r3]
 407:Src/ethernetif.c ****   {
 523              		.loc 1 407 21 view .LVU181
 524 0098 41F21402 		movw	r2, #4116
 525 009c 9A58     		ldr	r2, [r3, r2]
 407:Src/ethernetif.c ****   {
 526              		.loc 1 407 6 view .LVU182
 527 009e 12F0200F 		tst	r2, #32
 528 00a2 07D0     		beq	.L32
 410:Src/ethernetif.c **** 
 529              		.loc 1 410 5 is_stmt 1 view .LVU183
 410:Src/ethernetif.c **** 
 530              		.loc 1 410 26 is_stmt 0 view .LVU184
 531 00a4 41F21402 		movw	r2, #4116
 532 00a8 2021     		movs	r1, #32
 533 00aa 9950     		str	r1, [r3, r2]
 413:Src/ethernetif.c ****   }
 534              		.loc 1 413 5 is_stmt 1 view .LVU185
 413:Src/ethernetif.c ****   }
 535              		.loc 1 413 28 is_stmt 0 view .LVU186
 536 00ac 41F20402 		movw	r2, #4100
 537 00b0 0021     		movs	r1, #0
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 22


 538 00b2 9950     		str	r1, [r3, r2]
 539              	.L32:
 415:Src/ethernetif.c **** }
 540              		.loc 1 415 3 is_stmt 1 view .LVU187
 416:Src/ethernetif.c **** 
 541              		.loc 1 416 1 is_stmt 0 view .LVU188
 542 00b4 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 543              	.LVL62:
 544              	.L39:
 416:Src/ethernetif.c **** 
 545              		.loc 1 416 1 view .LVU189
 546              		.align	2
 547              	.L38:
 548 00b8 00000000 		.word	heth
 549              		.cfi_endproc
 550              	.LFE169:
 552              		.section	.text.low_level_init,"ax",%progbits
 553              		.align	1
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu fpv5-sp-d16
 559              	low_level_init:
 560              	.LVL63:
 561              	.LFB168:
 228:Src/ethernetif.c ****   uint32_t regvalue = 0;
 562              		.loc 1 228 1 is_stmt 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 40
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 228:Src/ethernetif.c ****   uint32_t regvalue = 0;
 566              		.loc 1 228 1 is_stmt 0 view .LVU191
 567 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 568              	.LCFI3:
 569              		.cfi_def_cfa_offset 20
 570              		.cfi_offset 4, -20
 571              		.cfi_offset 5, -16
 572              		.cfi_offset 6, -12
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 8BB0     		sub	sp, sp, #44
 576              	.LCFI4:
 577              		.cfi_def_cfa_offset 64
 578 0004 0446     		mov	r4, r0
 229:Src/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status;
 579              		.loc 1 229 3 is_stmt 1 view .LVU192
 229:Src/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status;
 580              		.loc 1 229 12 is_stmt 0 view .LVU193
 581 0006 0023     		movs	r3, #0
 582 0008 0993     		str	r3, [sp, #36]
 230:Src/ethernetif.c ****   
 583              		.loc 1 230 3 is_stmt 1 view .LVU194
 234:Src/ethernetif.c ****   heth.Instance = ETH;
 584              		.loc 1 234 4 view .LVU195
 235:Src/ethernetif.c ****   heth.Init.AutoNegotiation = ETH_AUTONEGOTIATION_ENABLE;
 585              		.loc 1 235 3 view .LVU196
 235:Src/ethernetif.c ****   heth.Init.AutoNegotiation = ETH_AUTONEGOTIATION_ENABLE;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 23


 586              		.loc 1 235 17 is_stmt 0 view .LVU197
 587 000a 3D48     		ldr	r0, .L43
 588              	.LVL64:
 235:Src/ethernetif.c ****   heth.Init.AutoNegotiation = ETH_AUTONEGOTIATION_ENABLE;
 589              		.loc 1 235 17 view .LVU198
 590 000c 3D4A     		ldr	r2, .L43+4
 591 000e 0260     		str	r2, [r0]
 236:Src/ethernetif.c ****   heth.Init.PhyAddress = LAN8742A_PHY_ADDRESS;
 592              		.loc 1 236 3 is_stmt 1 view .LVU199
 236:Src/ethernetif.c ****   heth.Init.PhyAddress = LAN8742A_PHY_ADDRESS;
 593              		.loc 1 236 29 is_stmt 0 view .LVU200
 594 0010 0122     		movs	r2, #1
 595 0012 4260     		str	r2, [r0, #4]
 237:Src/ethernetif.c ****   MACAddr[0] = 0x00;
 596              		.loc 1 237 3 is_stmt 1 view .LVU201
 237:Src/ethernetif.c ****   MACAddr[0] = 0x00;
 597              		.loc 1 237 24 is_stmt 0 view .LVU202
 598 0014 0382     		strh	r3, [r0, #16]	@ movhi
 238:Src/ethernetif.c ****   MACAddr[1] = 0x80;
 599              		.loc 1 238 3 is_stmt 1 view .LVU203
 238:Src/ethernetif.c ****   MACAddr[1] = 0x80;
 600              		.loc 1 238 14 is_stmt 0 view .LVU204
 601 0016 8DF81C30 		strb	r3, [sp, #28]
 239:Src/ethernetif.c ****   MACAddr[2] = 0xE1;
 602              		.loc 1 239 3 is_stmt 1 view .LVU205
 239:Src/ethernetif.c ****   MACAddr[2] = 0xE1;
 603              		.loc 1 239 14 is_stmt 0 view .LVU206
 604 001a 8021     		movs	r1, #128
 605 001c 8DF81D10 		strb	r1, [sp, #29]
 240:Src/ethernetif.c ****   MACAddr[3] = 0x00;
 606              		.loc 1 240 3 is_stmt 1 view .LVU207
 240:Src/ethernetif.c ****   MACAddr[3] = 0x00;
 607              		.loc 1 240 14 is_stmt 0 view .LVU208
 608 0020 E121     		movs	r1, #225
 609 0022 8DF81E10 		strb	r1, [sp, #30]
 241:Src/ethernetif.c ****   MACAddr[4] = 0xCA;
 610              		.loc 1 241 3 is_stmt 1 view .LVU209
 241:Src/ethernetif.c ****   MACAddr[4] = 0xCA;
 611              		.loc 1 241 14 is_stmt 0 view .LVU210
 612 0026 8DF81F30 		strb	r3, [sp, #31]
 242:Src/ethernetif.c ****   MACAddr[5] = 0xFE;
 613              		.loc 1 242 3 is_stmt 1 view .LVU211
 242:Src/ethernetif.c ****   MACAddr[5] = 0xFE;
 614              		.loc 1 242 14 is_stmt 0 view .LVU212
 615 002a CA21     		movs	r1, #202
 616 002c 8DF82010 		strb	r1, [sp, #32]
 243:Src/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 617              		.loc 1 243 3 is_stmt 1 view .LVU213
 243:Src/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 618              		.loc 1 243 14 is_stmt 0 view .LVU214
 619 0030 FE21     		movs	r1, #254
 620 0032 8DF82110 		strb	r1, [sp, #33]
 244:Src/ethernetif.c ****   heth.Init.RxMode = ETH_RXINTERRUPT_MODE;
 621              		.loc 1 244 3 is_stmt 1 view .LVU215
 244:Src/ethernetif.c ****   heth.Init.RxMode = ETH_RXINTERRUPT_MODE;
 622              		.loc 1 244 21 is_stmt 0 view .LVU216
 623 0036 07A9     		add	r1, sp, #28
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 24


 624 0038 4161     		str	r1, [r0, #20]
 245:Src/ethernetif.c ****   heth.Init.ChecksumMode = ETH_CHECKSUM_BY_HARDWARE;
 625              		.loc 1 245 3 is_stmt 1 view .LVU217
 245:Src/ethernetif.c ****   heth.Init.ChecksumMode = ETH_CHECKSUM_BY_HARDWARE;
 626              		.loc 1 245 20 is_stmt 0 view .LVU218
 627 003a 8261     		str	r2, [r0, #24]
 246:Src/ethernetif.c ****   heth.Init.MediaInterface = ETH_MEDIA_INTERFACE_RMII;
 628              		.loc 1 246 3 is_stmt 1 view .LVU219
 246:Src/ethernetif.c ****   heth.Init.MediaInterface = ETH_MEDIA_INTERFACE_RMII;
 629              		.loc 1 246 26 is_stmt 0 view .LVU220
 630 003c C361     		str	r3, [r0, #28]
 247:Src/ethernetif.c **** 
 631              		.loc 1 247 3 is_stmt 1 view .LVU221
 247:Src/ethernetif.c **** 
 632              		.loc 1 247 28 is_stmt 0 view .LVU222
 633 003e 4FF40003 		mov	r3, #8388608
 634 0042 0362     		str	r3, [r0, #32]
 253:Src/ethernetif.c **** 
 635              		.loc 1 253 3 is_stmt 1 view .LVU223
 253:Src/ethernetif.c **** 
 636              		.loc 1 253 25 is_stmt 0 view .LVU224
 637 0044 FFF7FEFF 		bl	HAL_ETH_Init
 638              	.LVL65:
 255:Src/ethernetif.c ****   {
 639              		.loc 1 255 3 is_stmt 1 view .LVU225
 255:Src/ethernetif.c ****   {
 640              		.loc 1 255 6 is_stmt 0 view .LVU226
 641 0048 28B9     		cbnz	r0, .L41
 258:Src/ethernetif.c ****   }
 642              		.loc 1 258 5 is_stmt 1 view .LVU227
 258:Src/ethernetif.c ****   }
 643              		.loc 1 258 18 is_stmt 0 view .LVU228
 644 004a 94F82F30 		ldrb	r3, [r4, #47]	@ zero_extendqisi2
 645 004e 43F00403 		orr	r3, r3, #4
 646 0052 84F82F30 		strb	r3, [r4, #47]
 647              	.L41:
 261:Src/ethernetif.c ****      
 648              		.loc 1 261 3 is_stmt 1 view .LVU229
 649 0056 2A4D     		ldr	r5, .L43
 650 0058 0423     		movs	r3, #4
 651 005a 2B4A     		ldr	r2, .L43+8
 652 005c 2B49     		ldr	r1, .L43+12
 653 005e 2846     		mov	r0, r5
 654              	.LVL66:
 261:Src/ethernetif.c ****      
 655              		.loc 1 261 3 is_stmt 0 view .LVU230
 656 0060 FFF7FEFF 		bl	HAL_ETH_DMATxDescListInit
 657              	.LVL67:
 264:Src/ethernetif.c ****  
 658              		.loc 1 264 3 is_stmt 1 view .LVU231
 659 0064 0423     		movs	r3, #4
 660 0066 2A4A     		ldr	r2, .L43+16
 661 0068 2A49     		ldr	r1, .L43+20
 662 006a 2846     		mov	r0, r5
 663 006c FFF7FEFF 		bl	HAL_ETH_DMARxDescListInit
 664              	.LVL68:
 269:Src/ethernetif.c ****   
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 25


 665              		.loc 1 269 3 view .LVU232
 269:Src/ethernetif.c ****   
 666              		.loc 1 269 21 is_stmt 0 view .LVU233
 667 0070 0623     		movs	r3, #6
 668 0072 84F82830 		strb	r3, [r4, #40]
 272:Src/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 669              		.loc 1 272 3 is_stmt 1 view .LVU234
 272:Src/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 670              		.loc 1 272 32 is_stmt 0 view .LVU235
 671 0076 6B69     		ldr	r3, [r5, #20]
 272:Src/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 672              		.loc 1 272 40 view .LVU236
 673 0078 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 272:Src/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 674              		.loc 1 272 20 view .LVU237
 675 007a 84F82920 		strb	r2, [r4, #41]
 273:Src/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 676              		.loc 1 273 3 is_stmt 1 view .LVU238
 273:Src/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 677              		.loc 1 273 20 is_stmt 0 view .LVU239
 678 007e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 679 0080 84F82A20 		strb	r2, [r4, #42]
 274:Src/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 680              		.loc 1 274 3 is_stmt 1 view .LVU240
 274:Src/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 681              		.loc 1 274 20 is_stmt 0 view .LVU241
 682 0084 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 683 0086 84F82B20 		strb	r2, [r4, #43]
 275:Src/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 684              		.loc 1 275 3 is_stmt 1 view .LVU242
 275:Src/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 685              		.loc 1 275 20 is_stmt 0 view .LVU243
 686 008a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 687 008c 84F82C20 		strb	r2, [r4, #44]
 276:Src/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 688              		.loc 1 276 3 is_stmt 1 view .LVU244
 276:Src/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 689              		.loc 1 276 20 is_stmt 0 view .LVU245
 690 0090 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 691 0092 84F82D20 		strb	r2, [r4, #45]
 277:Src/ethernetif.c ****   
 692              		.loc 1 277 3 is_stmt 1 view .LVU246
 277:Src/ethernetif.c ****   
 693              		.loc 1 277 20 is_stmt 0 view .LVU247
 694 0096 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 695 0098 84F82E30 		strb	r3, [r4, #46]
 280:Src/ethernetif.c ****   
 696              		.loc 1 280 3 is_stmt 1 view .LVU248
 280:Src/ethernetif.c ****   
 697              		.loc 1 280 14 is_stmt 0 view .LVU249
 698 009c 40F2DC53 		movw	r3, #1500
 699 00a0 E384     		strh	r3, [r4, #38]	@ movhi
 285:Src/ethernetif.c ****   #else 
 700              		.loc 1 285 5 is_stmt 1 view .LVU250
 285:Src/ethernetif.c ****   #else 
 701              		.loc 1 285 18 is_stmt 0 view .LVU251
 702 00a2 94F82F30 		ldrb	r3, [r4, #47]	@ zero_extendqisi2
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 26


 703 00a6 43F00A03 		orr	r3, r3, #10
 704 00aa 84F82F30 		strb	r3, [r4, #47]
 291:Src/ethernetif.c ****   s_xSemaphore = osSemaphoreCreate(osSemaphore(SEM) , 1 );
 705              		.loc 1 291 3 is_stmt 1 view .LVU252
 706 00ae 0023     		movs	r3, #0
 707 00b0 0693     		str	r3, [sp, #24]
 292:Src/ethernetif.c **** 
 708              		.loc 1 292 3 view .LVU253
 292:Src/ethernetif.c **** 
 709              		.loc 1 292 18 is_stmt 0 view .LVU254
 710 00b2 0121     		movs	r1, #1
 711 00b4 06A8     		add	r0, sp, #24
 712 00b6 FFF7FEFF 		bl	osSemaphoreCreate
 713              	.LVL69:
 292:Src/ethernetif.c **** 
 714              		.loc 1 292 16 view .LVU255
 715 00ba 174B     		ldr	r3, .L43+24
 716 00bc 1860     		str	r0, [r3]
 295:Src/ethernetif.c ****   osThreadCreate (osThread(EthIf), netif);
 717              		.loc 1 295 3 is_stmt 1 view .LVU256
 718 00be 01AE     		add	r6, sp, #4
 719 00c0 164F     		ldr	r7, .L43+28
 720 00c2 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 721 00c4 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 722 00c6 3B68     		ldr	r3, [r7]
 723 00c8 3360     		str	r3, [r6]
 296:Src/ethernetif.c ****   /* Enable MAC and DMA transmission and reception */
 724              		.loc 1 296 3 view .LVU257
 725 00ca 2146     		mov	r1, r4
 726 00cc 01A8     		add	r0, sp, #4
 727 00ce FFF7FEFF 		bl	osThreadCreate
 728              	.LVL70:
 298:Src/ethernetif.c **** 
 729              		.loc 1 298 3 view .LVU258
 730 00d2 2846     		mov	r0, r5
 731 00d4 FFF7FEFF 		bl	HAL_ETH_Start
 732              	.LVL71:
 306:Src/ethernetif.c ****   regvalue |= (PHY_ISFR_INT4);
 733              		.loc 1 306 3 view .LVU259
 734 00d8 09AA     		add	r2, sp, #36
 735 00da 0B21     		movs	r1, #11
 736 00dc 2846     		mov	r0, r5
 737 00de FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 738              	.LVL72:
 307:Src/ethernetif.c **** 
 739              		.loc 1 307 3 view .LVU260
 307:Src/ethernetif.c **** 
 740              		.loc 1 307 12 is_stmt 0 view .LVU261
 741 00e2 099A     		ldr	r2, [sp, #36]
 742 00e4 42F00B02 		orr	r2, r2, #11
 743 00e8 0992     		str	r2, [sp, #36]
 310:Src/ethernetif.c ****   
 744              		.loc 1 310 3 is_stmt 1 view .LVU262
 745 00ea 0B21     		movs	r1, #11
 746 00ec 2846     		mov	r0, r5
 747 00ee FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 748              	.LVL73:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 27


 313:Src/ethernetif.c **** 
 749              		.loc 1 313 3 view .LVU263
 750 00f2 09AA     		add	r2, sp, #36
 751 00f4 0B21     		movs	r1, #11
 752 00f6 2846     		mov	r0, r5
 753 00f8 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 754              	.LVL74:
 324:Src/ethernetif.c **** 
 755              		.loc 1 324 1 is_stmt 0 view .LVU264
 756 00fc 0BB0     		add	sp, sp, #44
 757              	.LCFI5:
 758              		.cfi_def_cfa_offset 20
 759              		@ sp needed
 760 00fe F0BD     		pop	{r4, r5, r6, r7, pc}
 761              	.LVL75:
 762              	.L44:
 324:Src/ethernetif.c **** 
 763              		.loc 1 324 1 view .LVU265
 764              		.align	2
 765              	.L43:
 766 0100 00000000 		.word	heth
 767 0104 00800240 		.word	1073905664
 768 0108 00000000 		.word	Tx_Buff
 769 010c 00000000 		.word	DMATxDscrTab
 770 0110 00000000 		.word	Rx_Buff
 771 0114 00000000 		.word	DMARxDscrTab
 772 0118 00000000 		.word	.LANCHOR0
 773 011c 00000000 		.word	.LANCHOR1
 774              		.cfi_endproc
 775              	.LFE168:
 777              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 778              		.align	1
 779              		.global	HAL_ETH_MspInit
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv5-sp-d16
 785              	HAL_ETH_MspInit:
 786              	.LVL76:
 787              	.LFB165:
 116:Src/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 788              		.loc 1 116 1 is_stmt 1 view -0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 32
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 117:Src/ethernetif.c ****   if(ethHandle->Instance==ETH)
 792              		.loc 1 117 3 view .LVU267
 118:Src/ethernetif.c ****   {
 793              		.loc 1 118 3 view .LVU268
 118:Src/ethernetif.c ****   {
 794              		.loc 1 118 15 is_stmt 0 view .LVU269
 795 0000 0268     		ldr	r2, [r0]
 118:Src/ethernetif.c ****   {
 796              		.loc 1 118 5 view .LVU270
 797 0002 284B     		ldr	r3, .L52
 798 0004 9A42     		cmp	r2, r3
 799 0006 00D0     		beq	.L51
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 28


 800 0008 7047     		bx	lr
 801              	.L51:
 116:Src/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 802              		.loc 1 116 1 view .LVU271
 803 000a F0B5     		push	{r4, r5, r6, r7, lr}
 804              	.LCFI6:
 805              		.cfi_def_cfa_offset 20
 806              		.cfi_offset 4, -20
 807              		.cfi_offset 5, -16
 808              		.cfi_offset 6, -12
 809              		.cfi_offset 7, -8
 810              		.cfi_offset 14, -4
 811 000c 89B0     		sub	sp, sp, #36
 812              	.LCFI7:
 813              		.cfi_def_cfa_offset 56
 124:Src/ethernetif.c ****   
 814              		.loc 1 124 5 is_stmt 1 view .LVU272
 124:Src/ethernetif.c ****   
 815              		.loc 1 124 5 view .LVU273
 816              	.LBB2:
 124:Src/ethernetif.c ****   
 817              		.loc 1 124 5 view .LVU274
 124:Src/ethernetif.c ****   
 818              		.loc 1 124 5 view .LVU275
 819 000e A3F59043 		sub	r3, r3, #18432
 820 0012 1A6B     		ldr	r2, [r3, #48]
 821 0014 42F00072 		orr	r2, r2, #33554432
 822 0018 1A63     		str	r2, [r3, #48]
 124:Src/ethernetif.c ****   
 823              		.loc 1 124 5 view .LVU276
 824 001a 1A6B     		ldr	r2, [r3, #48]
 825 001c 02F00072 		and	r2, r2, #33554432
 826 0020 0092     		str	r2, [sp]
 124:Src/ethernetif.c ****   
 827              		.loc 1 124 5 view .LVU277
 828 0022 009A     		ldr	r2, [sp]
 829              	.LBE2:
 124:Src/ethernetif.c ****   
 830              		.loc 1 124 5 view .LVU278
 124:Src/ethernetif.c ****   
 831              		.loc 1 124 5 view .LVU279
 832              	.LBB3:
 124:Src/ethernetif.c ****   
 833              		.loc 1 124 5 view .LVU280
 124:Src/ethernetif.c ****   
 834              		.loc 1 124 5 view .LVU281
 835 0024 1A6B     		ldr	r2, [r3, #48]
 836 0026 42F08062 		orr	r2, r2, #67108864
 837 002a 1A63     		str	r2, [r3, #48]
 124:Src/ethernetif.c ****   
 838              		.loc 1 124 5 view .LVU282
 839 002c 1A6B     		ldr	r2, [r3, #48]
 840 002e 02F08062 		and	r2, r2, #67108864
 841 0032 0192     		str	r2, [sp, #4]
 124:Src/ethernetif.c ****   
 842              		.loc 1 124 5 view .LVU283
 843 0034 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 29


 844              	.LBE3:
 124:Src/ethernetif.c ****   
 845              		.loc 1 124 5 view .LVU284
 124:Src/ethernetif.c ****   
 846              		.loc 1 124 5 view .LVU285
 847              	.LBB4:
 124:Src/ethernetif.c ****   
 848              		.loc 1 124 5 view .LVU286
 124:Src/ethernetif.c ****   
 849              		.loc 1 124 5 view .LVU287
 850 0036 1A6B     		ldr	r2, [r3, #48]
 851 0038 42F00062 		orr	r2, r2, #134217728
 852 003c 1A63     		str	r2, [r3, #48]
 124:Src/ethernetif.c ****   
 853              		.loc 1 124 5 view .LVU288
 854 003e 1B6B     		ldr	r3, [r3, #48]
 855 0040 03F00063 		and	r3, r3, #134217728
 856 0044 0293     		str	r3, [sp, #8]
 124:Src/ethernetif.c ****   
 857              		.loc 1 124 5 view .LVU289
 858 0046 029B     		ldr	r3, [sp, #8]
 859              	.LBE4:
 124:Src/ethernetif.c ****   
 860              		.loc 1 124 5 view .LVU290
 124:Src/ethernetif.c ****   
 861              		.loc 1 124 5 view .LVU291
 137:Src/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 862              		.loc 1 137 5 view .LVU292
 137:Src/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 863              		.loc 1 137 25 is_stmt 0 view .LVU293
 864 0048 4FF4D043 		mov	r3, #26624
 865 004c 0393     		str	r3, [sp, #12]
 138:Src/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 866              		.loc 1 138 5 is_stmt 1 view .LVU294
 138:Src/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 867              		.loc 1 138 26 is_stmt 0 view .LVU295
 868 004e 0227     		movs	r7, #2
 869 0050 0497     		str	r7, [sp, #16]
 139:Src/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 870              		.loc 1 139 5 is_stmt 1 view .LVU296
 139:Src/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 871              		.loc 1 139 26 is_stmt 0 view .LVU297
 872 0052 0024     		movs	r4, #0
 873 0054 0594     		str	r4, [sp, #20]
 140:Src/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 874              		.loc 1 140 5 is_stmt 1 view .LVU298
 140:Src/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 875              		.loc 1 140 27 is_stmt 0 view .LVU299
 876 0056 0326     		movs	r6, #3
 877 0058 0696     		str	r6, [sp, #24]
 141:Src/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 878              		.loc 1 141 5 is_stmt 1 view .LVU300
 141:Src/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 879              		.loc 1 141 31 is_stmt 0 view .LVU301
 880 005a 0B25     		movs	r5, #11
 881 005c 0795     		str	r5, [sp, #28]
 142:Src/ethernetif.c **** 
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 30


 882              		.loc 1 142 5 is_stmt 1 view .LVU302
 883 005e 03A9     		add	r1, sp, #12
 884 0060 1148     		ldr	r0, .L52+4
 885              	.LVL77:
 142:Src/ethernetif.c **** 
 886              		.loc 1 142 5 is_stmt 0 view .LVU303
 887 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 888              	.LVL78:
 144:Src/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 889              		.loc 1 144 5 is_stmt 1 view .LVU304
 144:Src/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 890              		.loc 1 144 25 is_stmt 0 view .LVU305
 891 0066 3223     		movs	r3, #50
 892 0068 0393     		str	r3, [sp, #12]
 145:Src/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 893              		.loc 1 145 5 is_stmt 1 view .LVU306
 145:Src/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 894              		.loc 1 145 26 is_stmt 0 view .LVU307
 895 006a 0497     		str	r7, [sp, #16]
 146:Src/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 896              		.loc 1 146 5 is_stmt 1 view .LVU308
 146:Src/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 897              		.loc 1 146 26 is_stmt 0 view .LVU309
 898 006c 0594     		str	r4, [sp, #20]
 147:Src/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 899              		.loc 1 147 5 is_stmt 1 view .LVU310
 147:Src/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 900              		.loc 1 147 27 is_stmt 0 view .LVU311
 901 006e 0696     		str	r6, [sp, #24]
 148:Src/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 902              		.loc 1 148 5 is_stmt 1 view .LVU312
 148:Src/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 903              		.loc 1 148 31 is_stmt 0 view .LVU313
 904 0070 0795     		str	r5, [sp, #28]
 149:Src/ethernetif.c **** 
 905              		.loc 1 149 5 is_stmt 1 view .LVU314
 906 0072 03A9     		add	r1, sp, #12
 907 0074 0D48     		ldr	r0, .L52+8
 908 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 909              	.LVL79:
 151:Src/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 910              		.loc 1 151 5 view .LVU315
 151:Src/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 911              		.loc 1 151 25 is_stmt 0 view .LVU316
 912 007a 8623     		movs	r3, #134
 913 007c 0393     		str	r3, [sp, #12]
 152:Src/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 914              		.loc 1 152 5 is_stmt 1 view .LVU317
 152:Src/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 915              		.loc 1 152 26 is_stmt 0 view .LVU318
 916 007e 0497     		str	r7, [sp, #16]
 153:Src/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 917              		.loc 1 153 5 is_stmt 1 view .LVU319
 153:Src/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 918              		.loc 1 153 26 is_stmt 0 view .LVU320
 919 0080 0594     		str	r4, [sp, #20]
 154:Src/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 31


 920              		.loc 1 154 5 is_stmt 1 view .LVU321
 154:Src/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 921              		.loc 1 154 27 is_stmt 0 view .LVU322
 922 0082 0696     		str	r6, [sp, #24]
 155:Src/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 923              		.loc 1 155 5 is_stmt 1 view .LVU323
 155:Src/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 924              		.loc 1 155 31 is_stmt 0 view .LVU324
 925 0084 0795     		str	r5, [sp, #28]
 156:Src/ethernetif.c **** 
 926              		.loc 1 156 5 is_stmt 1 view .LVU325
 927 0086 03A9     		add	r1, sp, #12
 928 0088 0948     		ldr	r0, .L52+12
 929 008a FFF7FEFF 		bl	HAL_GPIO_Init
 930              	.LVL80:
 159:Src/ethernetif.c ****     HAL_NVIC_EnableIRQ(ETH_IRQn);
 931              		.loc 1 159 5 view .LVU326
 932 008e 2246     		mov	r2, r4
 933 0090 0521     		movs	r1, #5
 934 0092 3D20     		movs	r0, #61
 935 0094 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 936              	.LVL81:
 160:Src/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 1 */
 937              		.loc 1 160 5 view .LVU327
 938 0098 3D20     		movs	r0, #61
 939 009a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 940              	.LVL82:
 165:Src/ethernetif.c **** 
 941              		.loc 1 165 1 is_stmt 0 view .LVU328
 942 009e 09B0     		add	sp, sp, #36
 943              	.LCFI8:
 944              		.cfi_def_cfa_offset 20
 945              		@ sp needed
 946 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 947              	.L53:
 948 00a2 00BF     		.align	2
 949              	.L52:
 950 00a4 00800240 		.word	1073905664
 951 00a8 00180240 		.word	1073879040
 952 00ac 00080240 		.word	1073874944
 953 00b0 00000240 		.word	1073872896
 954              		.cfi_endproc
 955              	.LFE165:
 957              		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 958              		.align	1
 959              		.global	HAL_ETH_MspDeInit
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu fpv5-sp-d16
 965              	HAL_ETH_MspDeInit:
 966              	.LVL83:
 967              	.LFB166:
 168:Src/ethernetif.c ****   if(ethHandle->Instance==ETH)
 968              		.loc 1 168 1 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 32


 971              		@ frame_needed = 0, uses_anonymous_args = 0
 168:Src/ethernetif.c ****   if(ethHandle->Instance==ETH)
 972              		.loc 1 168 1 is_stmt 0 view .LVU330
 973 0000 08B5     		push	{r3, lr}
 974              	.LCFI9:
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 3, -8
 977              		.cfi_offset 14, -4
 169:Src/ethernetif.c ****   {
 978              		.loc 1 169 3 is_stmt 1 view .LVU331
 169:Src/ethernetif.c ****   {
 979              		.loc 1 169 15 is_stmt 0 view .LVU332
 980 0002 0268     		ldr	r2, [r0]
 169:Src/ethernetif.c ****   {
 981              		.loc 1 169 5 view .LVU333
 982 0004 114B     		ldr	r3, .L58
 983 0006 9A42     		cmp	r2, r3
 984 0008 00D0     		beq	.L57
 985              	.LVL84:
 986              	.L54:
 201:Src/ethernetif.c **** 
 987              		.loc 1 201 1 view .LVU334
 988 000a 08BD     		pop	{r3, pc}
 989              	.LVL85:
 990              	.L57:
 175:Src/ethernetif.c ****   
 991              		.loc 1 175 5 is_stmt 1 view .LVU335
 175:Src/ethernetif.c ****   
 992              		.loc 1 175 5 view .LVU336
 993 000c A3F59043 		sub	r3, r3, #18432
 994 0010 1A6B     		ldr	r2, [r3, #48]
 995 0012 22F08062 		bic	r2, r2, #67108864
 996 0016 1A63     		str	r2, [r3, #48]
 175:Src/ethernetif.c ****   
 997              		.loc 1 175 5 view .LVU337
 998 0018 1A6B     		ldr	r2, [r3, #48]
 999 001a 22F00062 		bic	r2, r2, #134217728
 1000 001e 1A63     		str	r2, [r3, #48]
 175:Src/ethernetif.c ****   
 1001              		.loc 1 175 5 view .LVU338
 1002 0020 1A6B     		ldr	r2, [r3, #48]
 1003 0022 22F00072 		bic	r2, r2, #33554432
 1004 0026 1A63     		str	r2, [r3, #48]
 175:Src/ethernetif.c ****   
 1005              		.loc 1 175 5 view .LVU339
 188:Src/ethernetif.c **** 
 1006              		.loc 1 188 5 view .LVU340
 1007 0028 4FF4D041 		mov	r1, #26624
 1008 002c 0848     		ldr	r0, .L58+4
 1009              	.LVL86:
 188:Src/ethernetif.c **** 
 1010              		.loc 1 188 5 is_stmt 0 view .LVU341
 1011 002e FFF7FEFF 		bl	HAL_GPIO_DeInit
 1012              	.LVL87:
 190:Src/ethernetif.c **** 
 1013              		.loc 1 190 5 is_stmt 1 view .LVU342
 1014 0032 3221     		movs	r1, #50
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 33


 1015 0034 0748     		ldr	r0, .L58+8
 1016 0036 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1017              	.LVL88:
 192:Src/ethernetif.c **** 
 1018              		.loc 1 192 5 view .LVU343
 1019 003a 8621     		movs	r1, #134
 1020 003c 0648     		ldr	r0, .L58+12
 1021 003e FFF7FEFF 		bl	HAL_GPIO_DeInit
 1022              	.LVL89:
 195:Src/ethernetif.c **** 
 1023              		.loc 1 195 5 view .LVU344
 1024 0042 3D20     		movs	r0, #61
 1025 0044 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1026              	.LVL90:
 201:Src/ethernetif.c **** 
 1027              		.loc 1 201 1 is_stmt 0 view .LVU345
 1028 0048 DFE7     		b	.L54
 1029              	.L59:
 1030 004a 00BF     		.align	2
 1031              	.L58:
 1032 004c 00800240 		.word	1073905664
 1033 0050 00180240 		.word	1073879040
 1034 0054 00080240 		.word	1073874944
 1035 0058 00000240 		.word	1073872896
 1036              		.cfi_endproc
 1037              	.LFE166:
 1039              		.section	.text.HAL_ETH_RxCpltCallback,"ax",%progbits
 1040              		.align	1
 1041              		.global	HAL_ETH_RxCpltCallback
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv5-sp-d16
 1047              	HAL_ETH_RxCpltCallback:
 1048              	.LVL91:
 1049              	.LFB167:
 209:Src/ethernetif.c ****   osSemaphoreRelease(s_xSemaphore);
 1050              		.loc 1 209 1 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 209:Src/ethernetif.c ****   osSemaphoreRelease(s_xSemaphore);
 1054              		.loc 1 209 1 is_stmt 0 view .LVU347
 1055 0000 08B5     		push	{r3, lr}
 1056              	.LCFI10:
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 3, -8
 1059              		.cfi_offset 14, -4
 210:Src/ethernetif.c **** }
 1060              		.loc 1 210 3 is_stmt 1 view .LVU348
 1061 0002 024B     		ldr	r3, .L62
 1062 0004 1868     		ldr	r0, [r3]
 1063              	.LVL92:
 210:Src/ethernetif.c **** }
 1064              		.loc 1 210 3 is_stmt 0 view .LVU349
 1065 0006 FFF7FEFF 		bl	osSemaphoreRelease
 1066              	.LVL93:
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 34


 211:Src/ethernetif.c **** 
 1067              		.loc 1 211 1 view .LVU350
 1068 000a 08BD     		pop	{r3, pc}
 1069              	.L63:
 1070              		.align	2
 1071              	.L62:
 1072 000c 00000000 		.word	.LANCHOR0
 1073              		.cfi_endproc
 1074              	.LFE167:
 1076              		.section	.rodata.ethernetif_init.str1.4,"aMS",%progbits,1
 1077              		.align	2
 1078              	.LC3:
 1079 0000 5372632F 		.ascii	"Src/ethernetif.c\000"
 1079      65746865 
 1079      726E6574 
 1079      69662E63 
 1079      00
 1080 0011 000000   		.align	2
 1081              	.LC4:
 1082 0014 6E657469 		.ascii	"netif != NULL\000"
 1082      6620213D 
 1082      204E554C 
 1082      4C00
 1083 0022 0000     		.align	2
 1084              	.LC5:
 1085 0024 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
 1085      7274696F 
 1085      6E202225 
 1085      73222066 
 1085      61696C65 
 1086              		.section	.text.ethernetif_init,"ax",%progbits
 1087              		.align	1
 1088              		.global	ethernetif_init
 1089              		.syntax unified
 1090              		.thumb
 1091              		.thumb_func
 1092              		.fpu fpv5-sp-d16
 1094              	ethernetif_init:
 1095              	.LVL94:
 1096              	.LFB172:
 535:Src/ethernetif.c ****     }
 536:Src/ethernetif.c ****   }
 537:Src/ethernetif.c **** }
 538:Src/ethernetif.c **** 
 539:Src/ethernetif.c **** #if !LWIP_ARP
 540:Src/ethernetif.c **** /**
 541:Src/ethernetif.c ****  * This function has to be completed by user in case of ARP OFF.
 542:Src/ethernetif.c ****  *
 543:Src/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 544:Src/ethernetif.c ****  * @return ERR_OK if ...
 545:Src/ethernetif.c ****  */
 546:Src/ethernetif.c **** static err_t low_level_output_arp_off(struct netif *netif, struct pbuf *q, const ip4_addr_t *ipaddr
 547:Src/ethernetif.c **** {  
 548:Src/ethernetif.c ****   err_t errval;
 549:Src/ethernetif.c ****   errval = ERR_OK;
 550:Src/ethernetif.c ****     
 551:Src/ethernetif.c **** /* USER CODE BEGIN 5 */ 
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 35


 552:Src/ethernetif.c ****     
 553:Src/ethernetif.c **** /* USER CODE END 5 */  
 554:Src/ethernetif.c ****     
 555:Src/ethernetif.c ****   return errval;
 556:Src/ethernetif.c ****   
 557:Src/ethernetif.c **** }
 558:Src/ethernetif.c **** #endif /* LWIP_ARP */ 
 559:Src/ethernetif.c **** 
 560:Src/ethernetif.c **** /**
 561:Src/ethernetif.c ****  * Should be called at the beginning of the program to set up the
 562:Src/ethernetif.c ****  * network interface. It calls the function low_level_init() to do the
 563:Src/ethernetif.c ****  * actual setup of the hardware.
 564:Src/ethernetif.c ****  *
 565:Src/ethernetif.c ****  * This function should be passed as a parameter to netif_add().
 566:Src/ethernetif.c ****  *
 567:Src/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 568:Src/ethernetif.c ****  * @return ERR_OK if the loopif is initialized
 569:Src/ethernetif.c ****  *         ERR_MEM if private data couldn't be allocated
 570:Src/ethernetif.c ****  *         any other err_t on error
 571:Src/ethernetif.c ****  */
 572:Src/ethernetif.c **** err_t ethernetif_init(struct netif *netif)
 573:Src/ethernetif.c **** {
 1097              		.loc 1 573 1 is_stmt 1 view -0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              		.loc 1 573 1 is_stmt 0 view .LVU352
 1102 0000 10B5     		push	{r4, lr}
 1103              	.LCFI11:
 1104              		.cfi_def_cfa_offset 8
 1105              		.cfi_offset 4, -8
 1106              		.cfi_offset 14, -4
 574:Src/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 1107              		.loc 1 574 3 is_stmt 1 view .LVU353
 1108              		.loc 1 574 3 view .LVU354
 1109 0002 0446     		mov	r4, r0
 1110 0004 70B1     		cbz	r0, .L67
 1111              	.LVL95:
 1112              	.L65:
 1113              		.loc 1 574 3 discriminator 3 view .LVU355
 1114              		.loc 1 574 3 discriminator 3 view .LVU356
 575:Src/ethernetif.c ****   
 576:Src/ethernetif.c **** #if LWIP_NETIF_HOSTNAME
 577:Src/ethernetif.c ****   /* Initialize interface hostname */
 578:Src/ethernetif.c ****   netif->hostname = "lwip";
 579:Src/ethernetif.c **** #endif /* LWIP_NETIF_HOSTNAME */
 580:Src/ethernetif.c **** 
 581:Src/ethernetif.c ****   netif->name[0] = IFNAME0;
 1115              		.loc 1 581 3 discriminator 3 view .LVU357
 1116              		.loc 1 581 18 is_stmt 0 discriminator 3 view .LVU358
 1117 0006 7323     		movs	r3, #115
 1118 0008 84F83030 		strb	r3, [r4, #48]
 582:Src/ethernetif.c ****   netif->name[1] = IFNAME1;
 1119              		.loc 1 582 3 is_stmt 1 discriminator 3 view .LVU359
 1120              		.loc 1 582 18 is_stmt 0 discriminator 3 view .LVU360
 1121 000c 7423     		movs	r3, #116
 1122 000e 84F83130 		strb	r3, [r4, #49]
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 36


 583:Src/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 584:Src/ethernetif.c ****    * You can instead declare your own function an call etharp_output()
 585:Src/ethernetif.c ****    * from it if you have to do some checks before sending (e.g. if link
 586:Src/ethernetif.c ****    * is available...) */
 587:Src/ethernetif.c **** 
 588:Src/ethernetif.c **** #if LWIP_IPV4
 589:Src/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET
 590:Src/ethernetif.c **** #if LWIP_ARP
 591:Src/ethernetif.c ****   netif->output = etharp_output;
 1123              		.loc 1 591 3 is_stmt 1 discriminator 3 view .LVU361
 1124              		.loc 1 591 17 is_stmt 0 discriminator 3 view .LVU362
 1125 0012 084B     		ldr	r3, .L68
 1126 0014 6361     		str	r3, [r4, #20]
 592:Src/ethernetif.c **** #else
 593:Src/ethernetif.c ****   /* The user should write ist own code in low_level_output_arp_off function */
 594:Src/ethernetif.c ****   netif->output = low_level_output_arp_off;
 595:Src/ethernetif.c **** #endif /* LWIP_ARP */
 596:Src/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 597:Src/ethernetif.c **** #endif /* LWIP_IPV4 */
 598:Src/ethernetif.c ****  
 599:Src/ethernetif.c **** #if LWIP_IPV6
 600:Src/ethernetif.c ****   netif->output_ip6 = ethip6_output;
 601:Src/ethernetif.c **** #endif /* LWIP_IPV6 */
 602:Src/ethernetif.c **** 
 603:Src/ethernetif.c ****   netif->linkoutput = low_level_output;
 1127              		.loc 1 603 3 is_stmt 1 discriminator 3 view .LVU363
 1128              		.loc 1 603 21 is_stmt 0 discriminator 3 view .LVU364
 1129 0016 084B     		ldr	r3, .L68+4
 1130 0018 A361     		str	r3, [r4, #24]
 604:Src/ethernetif.c **** 
 605:Src/ethernetif.c ****   /* initialize the hardware */
 606:Src/ethernetif.c ****   low_level_init(netif);
 1131              		.loc 1 606 3 is_stmt 1 discriminator 3 view .LVU365
 1132 001a 2046     		mov	r0, r4
 1133 001c FFF7FEFF 		bl	low_level_init
 1134              	.LVL96:
 607:Src/ethernetif.c **** 
 608:Src/ethernetif.c ****   return ERR_OK;
 1135              		.loc 1 608 3 discriminator 3 view .LVU366
 609:Src/ethernetif.c **** }
 1136              		.loc 1 609 1 is_stmt 0 discriminator 3 view .LVU367
 1137 0020 0020     		movs	r0, #0
 1138 0022 10BD     		pop	{r4, pc}
 1139              	.LVL97:
 1140              	.L67:
 574:Src/ethernetif.c ****   
 1141              		.loc 1 574 3 is_stmt 1 discriminator 1 view .LVU368
 574:Src/ethernetif.c ****   
 1142              		.loc 1 574 3 discriminator 1 view .LVU369
 1143 0024 054B     		ldr	r3, .L68+8
 1144 0026 40F23E22 		movw	r2, #574
 1145 002a 0549     		ldr	r1, .L68+12
 1146 002c 0548     		ldr	r0, .L68+16
 1147              	.LVL98:
 574:Src/ethernetif.c ****   
 1148              		.loc 1 574 3 is_stmt 0 discriminator 1 view .LVU370
 1149 002e FFF7FEFF 		bl	printf
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 37


 1150              	.LVL99:
 1151 0032 E8E7     		b	.L65
 1152              	.L69:
 1153              		.align	2
 1154              	.L68:
 1155 0034 00000000 		.word	etharp_output
 1156 0038 00000000 		.word	low_level_output
 1157 003c 00000000 		.word	.LC3
 1158 0040 14000000 		.word	.LC4
 1159 0044 24000000 		.word	.LC5
 1160              		.cfi_endproc
 1161              	.LFE172:
 1163              		.section	.text.sys_jiffies,"ax",%progbits
 1164              		.align	1
 1165              		.global	sys_jiffies
 1166              		.syntax unified
 1167              		.thumb
 1168              		.thumb_func
 1169              		.fpu fpv5-sp-d16
 1171              	sys_jiffies:
 1172              	.LFB173:
 610:Src/ethernetif.c **** 
 611:Src/ethernetif.c **** /* USER CODE BEGIN 6 */
 612:Src/ethernetif.c **** 
 613:Src/ethernetif.c **** /**
 614:Src/ethernetif.c **** * @brief  Returns the current time in milliseconds
 615:Src/ethernetif.c **** *         when LWIP_TIMERS == 1 and NO_SYS == 1
 616:Src/ethernetif.c **** * @param  None
 617:Src/ethernetif.c **** * @retval Time
 618:Src/ethernetif.c **** */
 619:Src/ethernetif.c **** u32_t sys_jiffies(void)
 620:Src/ethernetif.c **** {
 1173              		.loc 1 620 1 is_stmt 1 view -0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177 0000 08B5     		push	{r3, lr}
 1178              	.LCFI12:
 1179              		.cfi_def_cfa_offset 8
 1180              		.cfi_offset 3, -8
 1181              		.cfi_offset 14, -4
 621:Src/ethernetif.c ****   return HAL_GetTick();
 1182              		.loc 1 621 3 view .LVU372
 1183              		.loc 1 621 10 is_stmt 0 view .LVU373
 1184 0002 FFF7FEFF 		bl	HAL_GetTick
 1185              	.LVL100:
 622:Src/ethernetif.c **** }
 1186              		.loc 1 622 1 view .LVU374
 1187 0006 08BD     		pop	{r3, pc}
 1188              		.cfi_endproc
 1189              	.LFE173:
 1191              		.section	.text.sys_now,"ax",%progbits
 1192              		.align	1
 1193              		.global	sys_now
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 38


 1197              		.fpu fpv5-sp-d16
 1199              	sys_now:
 1200              	.LFB174:
 623:Src/ethernetif.c **** 
 624:Src/ethernetif.c **** /**
 625:Src/ethernetif.c **** * @brief  Returns the current time in milliseconds
 626:Src/ethernetif.c **** *         when LWIP_TIMERS == 1 and NO_SYS == 1
 627:Src/ethernetif.c **** * @param  None
 628:Src/ethernetif.c **** * @retval Time
 629:Src/ethernetif.c **** */
 630:Src/ethernetif.c **** u32_t sys_now(void)
 631:Src/ethernetif.c **** {
 1201              		.loc 1 631 1 is_stmt 1 view -0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205 0000 08B5     		push	{r3, lr}
 1206              	.LCFI13:
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 3, -8
 1209              		.cfi_offset 14, -4
 632:Src/ethernetif.c ****   return HAL_GetTick();
 1210              		.loc 1 632 3 view .LVU376
 1211              		.loc 1 632 10 is_stmt 0 view .LVU377
 1212 0002 FFF7FEFF 		bl	HAL_GetTick
 1213              	.LVL101:
 633:Src/ethernetif.c **** }
 1214              		.loc 1 633 1 view .LVU378
 1215 0006 08BD     		pop	{r3, pc}
 1216              		.cfi_endproc
 1217              	.LFE174:
 1219              		.comm	heth,72,4
 1220              		.global	s_xSemaphore
 1221              		.comm	Tx_Buff,6096,4
 1222              		.comm	Rx_Buff,6096,4
 1223              		.comm	DMATxDscrTab,128,4
 1224              		.comm	DMARxDscrTab,128,4
 1225              		.section	.rodata
 1226              		.align	2
 1227              		.set	.LANCHOR1,. + 0
 1228              	.LC2:
 1229 0000 00000000 		.word	.LC0
 1230 0004 00000000 		.word	ethernetif_input
 1231 0008 0300     		.short	3
 1232 000a 0000     		.space	2
 1233 000c 00000000 		.word	0
 1234 0010 5E010000 		.word	350
 1235              		.section	.bss.s_xSemaphore,"aw",%nobits
 1236              		.align	2
 1237              		.set	.LANCHOR0,. + 0
 1240              	s_xSemaphore:
 1241 0000 00000000 		.space	4
 1242              		.text
 1243              	.Letext0:
 1244              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1245              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1246              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 39


 1247              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1248              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1249              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1250              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1251              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1252              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eab
 1253              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1254              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1255              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1256              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 1257              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1258              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1259              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1260              		.file 18 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1261              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 1262              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1263              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1264              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1265              		.file 23 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 1266              		.file 24 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 1267              		.file 25 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 1268              		.file 26 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 1269              		.file 27 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1270              		.file 28 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 1271              		.file 29 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 1272              		.file 30 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 1273              		.file 31 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 1274              		.file 32 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1275              		.file 33 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1276              		.file 34 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 1277              		.file 35 "<built-in>"
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 40


DEFINED SYMBOLS
                            *ABS*:00000000 ethernetif.c
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:15     .rodata.str1.4:00000000 $d
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:22     .text.low_level_input:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:29     .text.low_level_input:00000000 low_level_input
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:263    .text.low_level_input:000000d4 $d
                            *COM*:00000048 heth
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:268    .text.ethernetif_input:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:275    .text.ethernetif_input:00000000 ethernetif_input
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:345    .text.ethernetif_input:00000038 $d
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:350    .text.low_level_output:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:356    .text.low_level_output:00000000 low_level_output
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:548    .text.low_level_output:000000b8 $d
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:553    .text.low_level_init:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:559    .text.low_level_init:00000000 low_level_init
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:766    .text.low_level_init:00000100 $d
                            *COM*:000017d0 Tx_Buff
                            *COM*:00000080 DMATxDscrTab
                            *COM*:000017d0 Rx_Buff
                            *COM*:00000080 DMARxDscrTab
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:778    .text.HAL_ETH_MspInit:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:785    .text.HAL_ETH_MspInit:00000000 HAL_ETH_MspInit
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:950    .text.HAL_ETH_MspInit:000000a4 $d
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:958    .text.HAL_ETH_MspDeInit:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:965    .text.HAL_ETH_MspDeInit:00000000 HAL_ETH_MspDeInit
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1032   .text.HAL_ETH_MspDeInit:0000004c $d
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1040   .text.HAL_ETH_RxCpltCallback:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1047   .text.HAL_ETH_RxCpltCallback:00000000 HAL_ETH_RxCpltCallback
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1072   .text.HAL_ETH_RxCpltCallback:0000000c $d
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1077   .rodata.ethernetif_init.str1.4:00000000 $d
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1087   .text.ethernetif_init:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1094   .text.ethernetif_init:00000000 ethernetif_init
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1155   .text.ethernetif_init:00000034 $d
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1164   .text.sys_jiffies:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1171   .text.sys_jiffies:00000000 sys_jiffies
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1192   .text.sys_now:00000000 $t
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1199   .text.sys_now:00000000 sys_now
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1240   .bss.s_xSemaphore:00000000 s_xSemaphore
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1226   .rodata:00000000 $d
C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s:1236   .bss.s_xSemaphore:00000000 $d

UNDEFINED SYMBOLS
HAL_ETH_GetReceivedFrame_IT
pbuf_alloc
memcpy
osSemaphoreWait
pbuf_free
HAL_ETH_TransmitFrame
HAL_ETH_Init
HAL_ETH_DMATxDescListInit
HAL_ETH_DMARxDescListInit
osSemaphoreCreate
osThreadCreate
HAL_ETH_Start
HAL_ETH_ReadPHYRegister
HAL_ETH_WritePHYRegister
HAL_GPIO_Init
ARM GAS  C:\Users\Nina\AppData\Local\Temp\ccWVcrPw.s 			page 41


HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
osSemaphoreRelease
printf
etharp_output
HAL_GetTick
